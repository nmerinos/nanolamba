<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="nsp__core__api__matlab_8h" kind="file" language="C++">
    <compoundname>nsp_core_api_matlab.h</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="nsp__core__api__matlab_8h_1a8dfa6ea301e66d8d58a286e17783f461" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="nsp__device__api_8h_1a779136663193567a853b1b8d3e8bd6b5" kindref="member">EXPORT_DLL</ref> int</type>
        <definition>EXPORT_DLL int csCreate</definition>
        <argsstring>(void)</argsstring>
        <name>csCreate</name>
        <param>
          <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref></type>
        </param>
        <briefdescription>
<para>Initialize Core Spectrum C API. </para>        </briefdescription>
        <detaileddescription>
<para>This function create a core spectrum object.</para><para><programlisting><codeline><highlight class="normal">int<sp/>ret_val<sp/>=<sp/>csCreate();</highlight></codeline>
</programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>void</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns one numeric values of NSP_RETURN_VALUE_SUCCESS, NSP_RETURN_VALUE_FAILURE, or exception.<itemizedlist>
<listitem><para>NSP_RETURN_VALUE_SUCCESS.</para></listitem><listitem><para>NSP_RETURN_VALUE_FAILURE.</para></listitem><listitem><para>cc_ec_fail_to_create_core_spectrum_obj.</para></listitem></itemizedlist>
</para></simplesect>
<simplesect kind="see"><para><ref refid="nsp__core__api__matlab_8h_1a3562acf6377e23ece2d613acff25417f" kindref="member">csDestroy</ref>  </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/core/nsp_core_api_matlab.h" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__core__api__matlab_8h_1a3562acf6377e23ece2d613acff25417f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="nsp__device__api_8h_1a779136663193567a853b1b8d3e8bd6b5" kindref="member">EXPORT_DLL</ref> int</type>
        <definition>EXPORT_DLL int csDestroy</definition>
        <argsstring>(void)</argsstring>
        <name>csDestroy</name>
        <param>
          <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref></type>
        </param>
        <briefdescription>
<para>Destroy Core Spectrum C API. </para>        </briefdescription>
        <detaileddescription>
<para>This function finalize a core spectrum object.</para><para><programlisting><codeline><highlight class="normal">int<sp/>ret_val<sp/>=<sp/>csDestroy();</highlight></codeline>
</programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>void</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns one numeric value of NSP_RETURN_VALUE_SUCCESS.<itemizedlist>
<listitem><para>NSP_RETURN_VALUE_SUCCESS.</para></listitem></itemizedlist>
</para></simplesect>
<simplesect kind="see"><para><ref refid="nsp__core__api__matlab_8h_1a8dfa6ea301e66d8d58a286e17783f461" kindref="member">csCreate</ref>  </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/core/nsp_core_api_matlab.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__core__api__matlab_8h_1a0750b4c76850a722e7ff1144733d78d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="nsp__device__api_8h_1a779136663193567a853b1b8d3e8bd6b5" kindref="member">EXPORT_DLL</ref> int</type>
        <definition>EXPORT_DLL int csRegister</definition>
        <argsstring>(const char *sensor_cal_file_path)</argsstring>
        <name>csRegister</name>
        <param>
          <type>const char *</type>
          <declname>sensor_cal_file_path</declname>
        </param>
        <briefdescription>
<para>Add one sensor to sensor calibration data container (DB). </para>        </briefdescription>
        <detaileddescription>
<para>This function add one sensor to Core Spectrum object by loading sensor calibration data file.</para><para><programlisting><codeline><highlight class="normal">//<sp/>&apos;Y8585-1-85-85-0&apos;<sp/>is<sp/>a<sp/>sensor<sp/>ID<sp/>of<sp/>a<sp/>specific<sp/>physical<sp/>sensor.</highlight></codeline>
<codeline><highlight class="normal">char*<sp/>sensor_cal_data_path<sp/>=<sp/>&quot;./config/sensor_Y8585-1-85-85-0.dat&quot;;</highlight></codeline>
<codeline><highlight class="normal">int<sp/>ret_val<sp/>=<sp/>csRegister(sensor_cal_data_path);</highlight></codeline>
</programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sensor_cal_file_path</parametername>
</parameternamelist>
<parameterdescription>
<para>- sensor calibration file path [IN]</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns one numeric values of NSP_RETURN_VALUE_SUCCESS, NSP_RETURN_VALUE_FAILURE, or exception.<itemizedlist>
<listitem><para>the number of sensors in the sensor cal data container(&gt;0).</para></listitem><listitem><para>NSP_RETURN_VALUE_FAILURE.</para></listitem><listitem><para>cc_ec_fail_to_create_core_spectrum_obj.</para></listitem><listitem><para>cc_ec_sensor_id_is_empty.</para></listitem></itemizedlist>
</para></simplesect>
<simplesect kind="see"><para><ref refid="nsp__core__api__matlab_8h_1a8dfa6ea301e66d8d58a286e17783f461" kindref="member">csCreate</ref>, <ref refid="nsp__core__api__matlab_8h_1a3562acf6377e23ece2d613acff25417f" kindref="member">csDestroy</ref>  </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/core/nsp_core_api_matlab.h" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__core__api__matlab_8h_1afa7581e28559c5b8675bafcd4ee00805" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="nsp__device__api_8h_1a779136663193567a853b1b8d3e8bd6b5" kindref="member">EXPORT_DLL</ref> int</type>
        <definition>EXPORT_DLL int csCapacity</definition>
        <argsstring>(void)</argsstring>
        <name>csCapacity</name>
        <param>
          <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref></type>
        </param>
        <briefdescription>
<para>Get capacity of sensor data list. </para>        </briefdescription>
        <detaileddescription>
<para>This function returns total number of sensors in sensor data list.</para><para><programlisting><codeline><highlight class="normal">int<sp/>total_sensors<sp/>=<sp/>csCapacity();</highlight></codeline>
</programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>void</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns one numeric values of total number of sensors in sensor data list, NSP_RETURN_VALUE_FAILURE, or exception.<itemizedlist>
<listitem><para>the number of sensors in the sensor cal data container(&gt;0).</para></listitem><listitem><para>NSP_RETURN_VALUE_FAILURE.</para></listitem><listitem><para>cc_ec_fail_to_create_core_spectrum_obj.</para></listitem><listitem><para>cc_ec_sensor_id_is_empty.</para></listitem></itemizedlist>
</para></simplesect>
<simplesect kind="see"><para><ref refid="nsp__core__api__matlab_8h_1a8dfa6ea301e66d8d58a286e17783f461" kindref="member">csCreate</ref>, <ref refid="nsp__core__api__matlab_8h_1a3562acf6377e23ece2d613acff25417f" kindref="member">csDestroy</ref>  </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/core/nsp_core_api_matlab.h" line="108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__core__api__matlab_8h_1afe1b0ae408cfc4026ec6af68ead31a21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="nsp__device__api_8h_1a779136663193567a853b1b8d3e8bd6b5" kindref="member">EXPORT_DLL</ref> int</type>
        <definition>EXPORT_DLL int csGetSensorList</definition>
        <argsstring>(char **sensor_list_out)</argsstring>
        <name>csGetSensorList</name>
        <param>
          <type>char **</type>
          <declname>sensor_list_out</declname>
        </param>
        <briefdescription>
<para>Get sensor ID list. </para>        </briefdescription>
        <detaileddescription>
<para>This function returns 2D string array havin sensor IDs.</para><para><programlisting><codeline><highlight class="normal">char<sp/>**sensor_id_list[1][SENSOR_ID_STRING_LENGTH];</highlight></codeline>
<codeline><highlight class="normal">int<sp/>ret_val<sp/>=<sp/>csGetSensorList(sensor_id_list);</highlight></codeline>
</programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sensor_list_out</parametername>
</parameternamelist>
<parameterdescription>
<para>- char pointer of pointer [OUT]</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns one numeric values of NSP_RETURN_VALUE_SUCCESS, NSP_RETURN_VALUE_FAILURE, or exception.<itemizedlist>
<listitem><para>the number of sensors in the sensor cal data container(&gt;0).</para></listitem><listitem><para>NSP_RETURN_VALUE_FAILURE.</para></listitem><listitem><para>cc_ec_fail_to_create_core_spectrum_obj.</para></listitem><listitem><para>cc_ec_sensor_id_is_empty.</para></listitem></itemizedlist>
</para></simplesect>
<simplesect kind="see"><para><ref refid="nsp__core__api__matlab_8h_1a8dfa6ea301e66d8d58a286e17783f461" kindref="member">csCreate</ref>, <ref refid="nsp__core__api__matlab_8h_1a3562acf6377e23ece2d613acff25417f" kindref="member">csDestroy</ref>  </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/core/nsp_core_api_matlab.h" line="132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__core__api__matlab_8h_1af242bfbfd64bc5ff4c234bc19eea8a44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="nsp__device__api_8h_1a779136663193567a853b1b8d3e8bd6b5" kindref="member">EXPORT_DLL</ref> int</type>
        <definition>EXPORT_DLL int csGetSensorID</definition>
        <argsstring>(char *sensor_id_str)</argsstring>
        <name>csGetSensorID</name>
        <param>
          <type>char *</type>
          <declname>sensor_id_str</declname>
        </param>
        <briefdescription>
<para>Get sensor ID of sensor calibration data. </para>        </briefdescription>
        <detaileddescription>
<para>This function returns sensor ID in sensor calibration data file.</para><para><programlisting><codeline><highlight class="normal">char<sp/>sensor_id_str[SENSOR_ID_STRING_LENGTH];</highlight></codeline>
<codeline><highlight class="normal">int<sp/>ret_val<sp/>=<sp/>csGetSensorID(sensor_id_str);</highlight></codeline>
</programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sensor_id_str</parametername>
</parameternamelist>
<parameterdescription>
<para>- char buffer to contain sensor ID [OUT]</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns one numeric value of NSP_RETURN_VALUE_SUCCESS.<itemizedlist>
<listitem><para>the length of sensor ID string (&gt;0).</para></listitem><listitem><para>NSP_RETURN_VALUE_FAILURE (-1)</para></listitem><listitem><para>cc_ec_spectrum_core_object_is_null</para></listitem><listitem><para>cc_ec_memory_is_null</para></listitem></itemizedlist>
</para></simplesect>
<simplesect kind="see"><para><ref refid="nsp__core__api__matlab_8h_1a0750b4c76850a722e7ff1144733d78d4" kindref="member">csRegister</ref>  </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/core/nsp_core_api_matlab.h" line="156" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__core__api__matlab_8h_1ad2d608775e5873738c9638e96efe0b40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="nsp__device__api_8h_1a779136663193567a853b1b8d3e8bd6b5" kindref="member">EXPORT_DLL</ref> int</type>
        <definition>EXPORT_DLL int csActivateSensorWithID</definition>
        <argsstring>(const char *sensor_id_str)</argsstring>
        <name>csActivateSensorWithID</name>
        <param>
          <type>const char *</type>
          <declname>sensor_id_str</declname>
        </param>
        <briefdescription>
<para>Activate one sensor data. </para>        </briefdescription>
        <detaileddescription>
<para>This function activates one sensor data of input sensor ID.</para><para><programlisting><codeline><highlight class="normal">char<sp/>sensor_id_str[SENSOR_ID_STRING_LENGTH];</highlight></codeline>
<codeline><highlight class="normal">int<sp/>ret_val<sp/>=<sp/>csActivateSensorWithID(sensor_id_str);</highlight></codeline>
</programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sensor_id_str</parametername>
</parameternamelist>
<parameterdescription>
<para>- char buffer to contain sensor ID [OUT]</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns one numeric value of NSP_RETURN_VALUE_SUCCESS.<itemizedlist>
<listitem><para>NSP_RETURN_VALUE_SUCCESS (1).</para></listitem><listitem><para>NSP_RETURN_VALUE_FAILURE (-1)</para></listitem><listitem><para>cc_ec_spectrum_core_object_is_null</para></listitem><listitem><para>cc_ec_memory_is_null</para></listitem></itemizedlist>
</para></simplesect>
<simplesect kind="see"><para><ref refid="nsp__core__api__matlab_8h_1a0750b4c76850a722e7ff1144733d78d4" kindref="member">csRegister</ref>  </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/core/nsp_core_api_matlab.h" line="180" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__core__api__matlab_8h_1aa22e44d2dba3697f6eb754d35a682dd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="nsp__device__api_8h_1a779136663193567a853b1b8d3e8bd6b5" kindref="member">EXPORT_DLL</ref> int</type>
        <definition>EXPORT_DLL int csGetWavelengthInfo</definition>
        <argsstring>(double *start_wavelength, double *end_wavelength, double *interval_wavelength)</argsstring>
        <name>csGetWavelengthInfo</name>
        <param>
          <type>double *</type>
          <declname>start_wavelength</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>end_wavelength</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>interval_wavelength</declname>
        </param>
        <briefdescription>
<para>Get wavelength information data. </para>        </briefdescription>
        <detaileddescription>
<para>This function returns wavelength range information for spectrum data.</para><para><programlisting><codeline><highlight class="normal">double<sp/>start_wavelength,<sp/>end_wavelength,<sp/>wavelength_interval;</highlight></codeline>
<codeline><highlight class="normal">int<sp/>ret_val<sp/>=<sp/>csGetWavelengthInfo(&amp;start_wavelength,<sp/>&amp;end_wavelength,<sp/>&amp;wavelength_interval);</highlight></codeline>
</programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>start_wavelength</parametername>
</parameternamelist>
<parameterdescription>
<para>- double pointer to start wavelength [OUT] </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end_wavelength</parametername>
</parameternamelist>
<parameterdescription>
<para>- double pointer to end wavelength [OUT] </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wavelength_interval</parametername>
</parameternamelist>
<parameterdescription>
<para>- double pointer to wavelength interval[OUT]</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns one numeric value of NSP_RETURN_VALUE_SUCCESS.<itemizedlist>
<listitem><para>NSP_RETURN_VALUE_SUCCESS (1)</para></listitem><listitem><para>NSP_RETURN_VALUE_FAILURE (-1)</para></listitem><listitem><para>cc_ec_spectrum_core_object_is_null</para></listitem></itemizedlist>
</para></simplesect>
<simplesect kind="see"><para><ref refid="nsp__core__api__matlab_8h_1ad771b83317747d7eb90d193a5cf8df48" kindref="member">csGetResolution</ref>  </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/core/nsp_core_api_matlab.h" line="205" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__core__api__matlab_8h_1ad771b83317747d7eb90d193a5cf8df48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="nsp__device__api_8h_1a779136663193567a853b1b8d3e8bd6b5" kindref="member">EXPORT_DLL</ref> int</type>
        <definition>EXPORT_DLL int csGetResolution</definition>
        <argsstring>(double *resolution)</argsstring>
        <name>csGetResolution</name>
        <param>
          <type>double *</type>
          <declname>resolution</declname>
        </param>
        <briefdescription>
<para>Get spectrum resolution. </para>        </briefdescription>
        <detaileddescription>
<para>This function returns spectrum resolution information.</para><para><programlisting><codeline><highlight class="normal">double<sp/>spectrum_resolution;</highlight></codeline>
<codeline><highlight class="normal">int<sp/>ret_val<sp/>=<sp/>csGetResolution(&amp;spectrum_resolution);</highlight></codeline>
</programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spectrum_resolution</parametername>
</parameternamelist>
<parameterdescription>
<para>- double pointer to spectrum resolution [OUT]</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns one numeric value of:<itemizedlist>
<listitem><para>NSP_RETURN_VALUE_SUCCESS (1)</para></listitem><listitem><para>NSP_RETURN_VALUE_FAILURE (-1)</para></listitem><listitem><para>cc_ec_spectrum_core_object_is_null</para></listitem></itemizedlist>
</para></simplesect>
<simplesect kind="see"><para><ref refid="nsp__core__api__matlab_8h_1aa22e44d2dba3697f6eb754d35a682dd7" kindref="member">csGetWavelengthInfo</ref>  </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/core/nsp_core_api_matlab.h" line="228" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__core__api__matlab_8h_1a2330c866f1744de7595d293198a8798e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="nsp__device__api_8h_1a779136663193567a853b1b8d3e8bd6b5" kindref="member">EXPORT_DLL</ref> int</type>
        <definition>EXPORT_DLL int csGetSpectrumLength</definition>
        <argsstring>(void)</argsstring>
        <name>csGetSpectrumLength</name>
        <param>
          <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref></type>
        </param>
        <briefdescription>
<para>Get size of spectrum data. </para>        </briefdescription>
        <detaileddescription>
<para>This function returns the size(length) of spectrum data.</para><para><programlisting><codeline><highlight class="normal">int<sp/>spectrum_length;</highlight></codeline>
<codeline><highlight class="normal">spectrum_length<sp/>=<sp/>csGetSpectrumLength();</highlight></codeline>
</programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>void</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns one numeric value of:<itemizedlist>
<listitem><para>spectrum data size(length) (&gt;0)</para></listitem><listitem><para>NSP_RETURN_VALUE_FAILURE (-1)</para></listitem><listitem><para>cc_ec_spectrum_core_object_is_null</para></listitem></itemizedlist>
</para></simplesect>
<simplesect kind="see"><para><ref refid="nsp__core__api__matlab_8h_1aa22e44d2dba3697f6eb754d35a682dd7" kindref="member">csGetWavelengthInfo</ref>, <ref refid="nsp__core__api__matlab_8h_1ad771b83317747d7eb90d193a5cf8df48" kindref="member">csGetResolution</ref>, <ref refid="nsp__core__api__matlab_8h_1a2a54dfee902c8868978066ae9d962e64" kindref="member">csCalculateSpectrum</ref>  </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/core/nsp_core_api_matlab.h" line="251" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__core__api__matlab_8h_1a82f1c3a44ef8dd9690745bd4033b9d18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="nsp__device__api_8h_1a779136663193567a853b1b8d3e8bd6b5" kindref="member">EXPORT_DLL</ref> int</type>
        <definition>EXPORT_DLL int csGetSensorParameters</definition>
        <argsstring>(int *adc_gain, int *adc_range)</argsstring>
        <name>csGetSensorParameters</name>
        <param>
          <type>int *</type>
          <declname>adc_gain</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>adc_range</declname>
        </param>
        <briefdescription>
<para>Get register settings. </para>        </briefdescription>
        <detaileddescription>
<para>This function returns ADC register settings from physical device (sensor).</para><para><programlisting><codeline><highlight class="normal">int<sp/>adc_gain,<sp/>adc_range;</highlight></codeline>
<codeline><highlight class="normal">int<sp/>ret_value<sp/>=<sp/>csGetSensorParameters(&amp;adc_gain,<sp/>&amp;adc_range);</highlight></codeline>
</programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>adc_gain</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to ADC gain info: 0 or 1(default) [OUT] </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>adc_range</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to ADC range info (0~255) [OUT]</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns one numeric value of:<itemizedlist>
<listitem><para>NSP_RETURN_VALUE_SUCCESS (1)</para></listitem><listitem><para>NSP_RETURN_VALUE_FAILURE (-1)</para></listitem><listitem><para>cc_ec_spectrum_core_object_is_null</para></listitem></itemizedlist>
</para></simplesect>
<simplesect kind="see"><para><ref refid="nsp__core__api__matlab_8h_1aa22e44d2dba3697f6eb754d35a682dd7" kindref="member">csGetWavelengthInfo</ref>, <ref refid="nsp__core__api__matlab_8h_1ad771b83317747d7eb90d193a5cf8df48" kindref="member">csGetResolution</ref>  </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/core/nsp_core_api_matlab.h" line="275" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__core__api__matlab_8h_1ae821ba76e9c57dab1f320be2bf8567fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="nsp__device__api_8h_1a779136663193567a853b1b8d3e8bd6b5" kindref="member">EXPORT_DLL</ref> int</type>
        <definition>EXPORT_DLL int csSetBackground</definition>
        <argsstring>(double *background_data)</argsstring>
        <name>csSetBackground</name>
        <param>
          <type>double *</type>
          <declname>background_data</declname>
        </param>
        <briefdescription>
<para>Set background filter data. </para>        </briefdescription>
        <detaileddescription>
<para>This function set input filter data as background data. Background data will be used to correct background signal before spectrum calculation.</para><para><programlisting><codeline><highlight class="normal">double<sp/>filter_data[SENSOR_DATA_SIZE];</highlight></codeline>
<codeline><highlight class="normal">//<sp/>acquire<sp/>raw<sp/>filter<sp/>data<sp/>at<sp/>SS=1</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">int<sp/>ret_value<sp/>=<sp/>csSetBackground((double<sp/>*)filter_data);</highlight></codeline>
</programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>background_data</parametername>
</parameternamelist>
<parameterdescription>
<para>- double pointer to raw filter data [IN]</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns one numeric value of:<itemizedlist>
<listitem><para>NSP_RETURN_VALUE_SUCCESS (1)</para></listitem><listitem><para>NSP_RETURN_VALUE_FAILURE (-1)</para></listitem><listitem><para>cc_ec_spectrum_core_object_is_null</para></listitem><listitem><para>cc_ec_background_buffer_is_null</para></listitem></itemizedlist>
</para></simplesect>
<simplesect kind="see"><para><ref refid="nsp__core__api__matlab_8h_1a2a54dfee902c8868978066ae9d962e64" kindref="member">csCalculateSpectrum</ref>  </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/core/nsp_core_api_matlab.h" line="302" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__core__api__matlab_8h_1a2a54dfee902c8868978066ae9d962e64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="nsp__device__api_8h_1a779136663193567a853b1b8d3e8bd6b5" kindref="member">EXPORT_DLL</ref> int</type>
        <definition>EXPORT_DLL int csCalculateSpectrum</definition>
        <argsstring>(double *filter_input, int cur_ss, double *spec_output, double *wavelength_output)</argsstring>
        <name>csCalculateSpectrum</name>
        <param>
          <type>double *</type>
          <declname>filter_input</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cur_ss</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>spec_output</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>wavelength_output</declname>
        </param>
        <briefdescription>
<para>Calculate spectrum. </para>        </briefdescription>
        <detaileddescription>
<para>This function returns a calculated spectrum and wavelength data with input filter data.</para><para><programlisting><codeline><highlight class="normal">int<sp/>cur_ss<sp/>=<sp/>50;</highlight></codeline>
<codeline><highlight class="normal">double<sp/>filter_data[SENSOR_DATA_SIZE];</highlight></codeline>
<codeline><highlight class="normal">//<sp/>acquire<sp/>raw<sp/>filter<sp/>data<sp/>from<sp/>device(sensor)<sp/>with<sp/>shutter<sp/>speed<sp/>&apos;cur_ss&apos;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>get<sp/>spectrum<sp/>length</highlight></codeline>
<codeline><highlight class="normal">int<sp/>spectrum_length<sp/>=<sp/>csGetSpectrumLength();</highlight></codeline>
<codeline><highlight class="normal">double*<sp/>spectrum_data<sp/>=<sp/>(double*)malloc(sizeof(double)*spectrum_length);</highlight></codeline>
<codeline><highlight class="normal">double*<sp/>wavelength_data<sp/>=<sp/>(double*)malloc(sizeof(double)*spectrum_length);</highlight></codeline>
<codeline><highlight class="normal">int<sp/>ret_value<sp/>=<sp/>csCalculateSpectrum(filter_data,<sp/>cur_ss,<sp/>spectrum_data,<sp/>wavelength_data<sp/>);</highlight></codeline>
</programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>void</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns one numeric value of:<itemizedlist>
<listitem><para>spectrum data size(length) (&gt;0)</para></listitem><listitem><para>NSP_RETURN_VALUE_FAILURE (-1)</para></listitem><listitem><para>cc_ec_spectrum_core_object_is_null</para></listitem></itemizedlist>
</para></simplesect>
<simplesect kind="see"><para><ref refid="nsp__core__api__matlab_8h_1a2330c866f1744de7595d293198a8798e" kindref="member">csGetSpectrumLength</ref>, <ref refid="nsp__core__api__matlab_8h_1ad771b83317747d7eb90d193a5cf8df48" kindref="member">csGetResolution</ref>, <ref refid="nsp__core__api__matlab_8h_1a2a54dfee902c8868978066ae9d962e64" kindref="member">csCalculateSpectrum</ref>  </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/core/nsp_core_api_matlab.h" line="332" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__core__api__matlab_8h_1a668c957f4c5934c0ba557a84974a11e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="nsp__device__api_8h_1a779136663193567a853b1b8d3e8bd6b5" kindref="member">EXPORT_DLL</ref> int</type>
        <definition>EXPORT_DLL int acInitialize</definition>
        <argsstring>(void)</argsstring>
        <name>acInitialize</name>
        <param>
          <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref></type>
        </param>
        <briefdescription>
<para>Initialize color API to calculate color information. </para>        </briefdescription>
        <detaileddescription>
<para>Initialize C API to calculate color information.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>void</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns one numeric value as below:<itemizedlist>
<listitem><para>NSP_RETURN_VALUE_SUCCESS (1)</para></listitem><listitem><para>NSP_RETURN_VALUE_FAILURE (-1)</para></listitem><listitem><para>cc_ec_fail_to_initialize_color_object</para></listitem></itemizedlist>
</para></simplesect>
</para><para><simplesect kind="see"><para><ref refid="nsp__core__api__matlab_8h_1aa89131f0fb87c272668f93a468890eb5" kindref="member">acFinalize</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/core/nsp_core_api_matlab.h" line="354" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__core__api__matlab_8h_1aa89131f0fb87c272668f93a468890eb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="nsp__device__api_8h_1a779136663193567a853b1b8d3e8bd6b5" kindref="member">EXPORT_DLL</ref> int</type>
        <definition>EXPORT_DLL int acFinalize</definition>
        <argsstring>(void)</argsstring>
        <name>acFinalize</name>
        <param>
          <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref></type>
        </param>
        <briefdescription>
<para>Finalize color API. </para>        </briefdescription>
        <detaileddescription>
<para>Finalize C API for color application.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>void</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns one numeric value:<itemizedlist>
<listitem><para>NSP_RETURN_VALUE_SUCCESS (1)</para></listitem></itemizedlist>
</para></simplesect>
</para><para><simplesect kind="see"><para><ref refid="nsp__core__api__matlab_8h_1a668c957f4c5934c0ba557a84974a11e2" kindref="member">acInitialize</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/core/nsp_core_api_matlab.h" line="371" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__core__api__matlab_8h_1a415545c201d3b7b821aa777472bf356c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="nsp__device__api_8h_1a779136663193567a853b1b8d3e8bd6b5" kindref="member">EXPORT_DLL</ref> int</type>
        <definition>EXPORT_DLL int acCalculateColor</definition>
        <argsstring>(double *spectrum, double *wavelength, int spectrum_length, double *X, double *Y, double *Z, double *r, double *g, double *b, double *x, double *y, double *z, double *cct)</argsstring>
        <name>acCalculateColor</name>
        <param>
          <type>double *</type>
          <declname>spectrum</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>wavelength</declname>
        </param>
        <param>
          <type>int</type>
          <declname>spectrum_length</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>X</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>Y</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>Z</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>g</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>z</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>cct</declname>
        </param>
        <briefdescription>
<para>Get color information of current spectrum data. </para>        </briefdescription>
        <detaileddescription>
<para>Calculate color information and returns in <computeroutput>X</computeroutput>, <computeroutput>Y</computeroutput>, <computeroutput>Z</computeroutput>, <computeroutput>r</computeroutput>, <computeroutput>g</computeroutput>, <computeroutput>b</computeroutput>, <computeroutput>x</computeroutput>, <computeroutput>y</computeroutput>, <computeroutput>z</computeroutput>, <computeroutput>cct</computeroutput>.</para><para><programlisting><codeline><highlight class="normal">double<sp/><sp/><sp/><sp/>*spectrum_data;<sp/><sp/><sp/><sp/><sp/>//<sp/>from<sp/>csCalculateSpectrum()<sp/>function</highlight></codeline>
<codeline><highlight class="normal">double<sp/><sp/><sp/><sp/>*wavelength_data;<sp/><sp/><sp/>//<sp/>from<sp/>csCalculateSpectrum()<sp/>function</highlight></codeline>
<codeline><highlight class="normal">int<sp/><sp/><sp/><sp/><sp/><sp/><sp/>spectrum_length;<sp/><sp/><sp/><sp/>//<sp/>from<sp/>csCalculateSpectrum()<sp/>function</highlight></codeline>
<codeline><highlight class="normal">double<sp/><sp/><sp/><sp/>X,<sp/>Y,<sp/>Z;</highlight></codeline>
<codeline><highlight class="normal">double<sp/><sp/><sp/><sp/>r,<sp/>g,<sp/>b;</highlight></codeline>
<codeline><highlight class="normal">double<sp/><sp/><sp/><sp/>x,<sp/>y,<sp/>z;</highlight></codeline>
<codeline><highlight class="normal">double<sp/><sp/><sp/><sp/>cct;</highlight></codeline>
<codeline><highlight class="normal">int<sp/>ret_value<sp/>=<sp/>acCalculateColor(spectrum_data,<sp/>wavelength_data,<sp/>spectrum_length,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;X,<sp/>&amp;Y,<sp/>&amp;Z,<sp/>&amp;r,<sp/>&amp;g,<sp/>&amp;b,<sp/>&amp;x,<sp/>&amp;y,<sp/>&amp;z,<sp/>&amp;cct);</highlight></codeline>
</programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spectrum</parametername>
</parameternamelist>
<parameterdescription>
<para>- Spectrum data [IN] </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wavelength</parametername>
</parameternamelist>
<parameterdescription>
<para>- Wavelength data [IN] </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>spectrum_length</parametername>
</parameternamelist>
<parameterdescription>
<para>- Spectrum length [IN] </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>X</parametername>
</parameternamelist>
<parameterdescription>
<para>- Pointer to a double which the numerical value for color (X) is returned [OUT] </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Y</parametername>
</parameternamelist>
<parameterdescription>
<para>- Pointer to a double which the numerical value for color (Y) is returned [OUT] </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Z</parametername>
</parameternamelist>
<parameterdescription>
<para>- Pointer to a double which the numerical value for color (Z) is returned [OUT] </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>- Pointer to a double which the numerical value for color (R) is returned [OUT] </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>- Pointer to a double which the numerical value for color (G) is returned [OUT] </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>- Pointer to a double which the numerical value for color (B) is returned [OUT] </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>- Pointer to a double which the numerical value for color (x) is returned [OUT] </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>- Pointer to a double which the numerical value for color (y) is returned [OUT] </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>- Pointer to a double which the numerical value for color (z) is returned [OUT] </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cct</parametername>
</parameternamelist>
<parameterdescription>
<para>- Pointer to a double which the numerical value for CCT is returned [OUT]</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para>NSP_RETURN_VALUE_FAILURE</para></listitem><listitem><para>NSP_RETURN_VALUE_SUCCESS</para></listitem><listitem><para>cc_ec_color_object_is_null</para></listitem><listitem><para>cc_ec_memory_for_spectrum_data_buffer_is_null</para></listitem><listitem><para>cc_ec_memory_for_wavelength_data_buffer_is_null </para></listitem></itemizedlist>
</para></simplesect>
<simplesect kind="see"><para><ref refid="nsp__core__api__matlab_8h_1a2330c866f1744de7595d293198a8798e" kindref="member">csGetSpectrumLength</ref>, <ref refid="nsp__core__api__matlab_8h_1a2a54dfee902c8868978066ae9d962e64" kindref="member">csCalculateSpectrum</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/core/nsp_core_api_matlab.h" line="415" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>__NSP_CORE_API_MATLAB_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__NSP_CORE_API_MATLAB_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EXPORT_DLL<sp/>__declspec(dllexport)<sp/>//For<sp/>exporting<sp/>to<sp/>DLL<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__linux__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EXPORT_DLL<sp/>__attribute__((visibility(&quot;default&quot;)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>function<sp/>prefix:<sp/>cs<sp/>-<sp/>Core<sp/>Spectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><ref refid="nsp__base__def_8h_1a779136663193567a853b1b8d3e8bd6b5" kindref="member">EXPORT_DLL</ref><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nsp__core__api__matlab_8h_1a8dfa6ea301e66d8d58a286e17783f461" kindref="member">csCreate</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><ref refid="nsp__base__def_8h_1a779136663193567a853b1b8d3e8bd6b5" kindref="member">EXPORT_DLL</ref><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nsp__core__api__matlab_8h_1a3562acf6377e23ece2d613acff25417f" kindref="member">csDestroy</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><ref refid="nsp__base__def_8h_1a779136663193567a853b1b8d3e8bd6b5" kindref="member">EXPORT_DLL</ref><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nsp__core__api__matlab_8h_1a0750b4c76850a722e7ff1144733d78d4" kindref="member">csRegister</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sensor_cal_file_path);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><ref refid="nsp__base__def_8h_1a779136663193567a853b1b8d3e8bd6b5" kindref="member">EXPORT_DLL</ref><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nsp__core__api__matlab_8h_1afa7581e28559c5b8675bafcd4ee00805" kindref="member">csCapacity</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><ref refid="nsp__base__def_8h_1a779136663193567a853b1b8d3e8bd6b5" kindref="member">EXPORT_DLL</ref><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nsp__core__api__matlab_8h_1afe1b0ae408cfc4026ec6af68ead31a21" kindref="member">csGetSensorList</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>sensor_list_out);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><ref refid="nsp__base__def_8h_1a779136663193567a853b1b8d3e8bd6b5" kindref="member">EXPORT_DLL</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nsp__core__api__matlab_8h_1af242bfbfd64bc5ff4c234bc19eea8a44" kindref="member">csGetSensorID</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sensor_id_str);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><ref refid="nsp__base__def_8h_1a779136663193567a853b1b8d3e8bd6b5" kindref="member">EXPORT_DLL</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nsp__core__api__matlab_8h_1ad2d608775e5873738c9638e96efe0b40" kindref="member">csActivateSensorWithID</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sensor_id_str);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><ref refid="nsp__base__def_8h_1a779136663193567a853b1b8d3e8bd6b5" kindref="member">EXPORT_DLL</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nsp__core__api__matlab_8h_1aa22e44d2dba3697f6eb754d35a682dd7" kindref="member">csGetWavelengthInfo</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*start_wavelength,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*end_wavelength,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*interval_wavelength);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><ref refid="nsp__base__def_8h_1a779136663193567a853b1b8d3e8bd6b5" kindref="member">EXPORT_DLL</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nsp__core__api__matlab_8h_1ad771b83317747d7eb90d193a5cf8df48" kindref="member">csGetResolution</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>resolution);<sp/></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><ref refid="nsp__base__def_8h_1a779136663193567a853b1b8d3e8bd6b5" kindref="member">EXPORT_DLL</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nsp__core__api__matlab_8h_1a2330c866f1744de7595d293198a8798e" kindref="member">csGetSpectrumLength</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><ref refid="nsp__base__def_8h_1a779136663193567a853b1b8d3e8bd6b5" kindref="member">EXPORT_DLL</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nsp__core__api__matlab_8h_1a82f1c3a44ef8dd9690745bd4033b9d18" kindref="member">csGetSensorParameters</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>adc_gain,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>adc_range);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><ref refid="nsp__base__def_8h_1a779136663193567a853b1b8d3e8bd6b5" kindref="member">EXPORT_DLL</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nsp__core__api__matlab_8h_1ae821ba76e9c57dab1f320be2bf8567fb" kindref="member">csSetBackground</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*background_data);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><ref refid="nsp__base__def_8h_1a779136663193567a853b1b8d3e8bd6b5" kindref="member">EXPORT_DLL</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nsp__core__api__matlab_8h_1a2a54dfee902c8868978066ae9d962e64" kindref="member">csCalculateSpectrum</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>filter_input,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cur_ss,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>spec_output,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>wavelength_output);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="comment">//********************************************************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="comment">//<sp/>function<sp/>prefix:<sp/>ac<sp/>-<sp/>Application<sp/>Color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><ref refid="nsp__base__def_8h_1a779136663193567a853b1b8d3e8bd6b5" kindref="member">EXPORT_DLL</ref><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nsp__core__api__matlab_8h_1a668c957f4c5934c0ba557a84974a11e2" kindref="member">acInitialize</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><ref refid="nsp__base__def_8h_1a779136663193567a853b1b8d3e8bd6b5" kindref="member">EXPORT_DLL</ref><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nsp__core__api__matlab_8h_1aa89131f0fb87c272668f93a468890eb5" kindref="member">acFinalize</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><ref refid="nsp__base__def_8h_1a779136663193567a853b1b8d3e8bd6b5" kindref="member">EXPORT_DLL</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nsp__core__api__matlab_8h_1a415545c201d3b7b821aa777472bf356c" kindref="member">acCalculateColor</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>spectrum,<sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>wavelength,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>spectrum_length,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>X,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>Y,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>Z,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>r,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>g,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>b,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*y,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>z,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>cct);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>__NSP_CORE_API_MATLAB_H__</highlight></codeline>
    </programlisting>
    <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/core/nsp_core_api_matlab.h"/>
  </compounddef>
</doxygen>
