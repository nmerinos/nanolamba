<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="libusb_8h" kind="file" language="C++">
    <compoundname>libusb.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">sys/types.h</includes>
    <includes local="no">time.h</includes>
    <includes local="no">limits.h</includes>
    <includedby refid="lusb_8h" local="yes">D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/lusb.h</includedby>
    <incdepgraph>
      <node id="127">
        <label>D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h</label>
        <link refid="libusb_8h"/>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
      </node>
      <node id="128">
        <label>stdint.h</label>
      </node>
      <node id="131">
        <label>limits.h</label>
      </node>
      <node id="129">
        <label>sys/types.h</label>
      </node>
      <node id="130">
        <label>time.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="132">
        <label>D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h</label>
        <link refid="libusb_8h"/>
        <childnode refid="133" relation="include">
        </childnode>
      </node>
      <node id="133">
        <label>D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/lusb.h</label>
        <link refid="lusb_8h"/>
        <childnode refid="134" relation="include">
        </childnode>
      </node>
      <node id="134">
        <label>D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface.h</label>
        <link refid="nsp__device__interface_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structlibusb__device__descriptor" prot="public">libusb_device_descriptor</innerclass>
    <innerclass refid="structlibusb__endpoint__descriptor" prot="public">libusb_endpoint_descriptor</innerclass>
    <innerclass refid="structlibusb__interface__descriptor" prot="public">libusb_interface_descriptor</innerclass>
    <innerclass refid="structlibusb__interface" prot="public">libusb_interface</innerclass>
    <innerclass refid="structlibusb__config__descriptor" prot="public">libusb_config_descriptor</innerclass>
    <innerclass refid="structlibusb__ss__endpoint__companion__descriptor" prot="public">libusb_ss_endpoint_companion_descriptor</innerclass>
    <innerclass refid="structlibusb__bos__dev__capability__descriptor" prot="public">libusb_bos_dev_capability_descriptor</innerclass>
    <innerclass refid="structlibusb__bos__descriptor" prot="public">libusb_bos_descriptor</innerclass>
    <innerclass refid="structlibusb__usb__2__0__extension__descriptor" prot="public">libusb_usb_2_0_extension_descriptor</innerclass>
    <innerclass refid="structlibusb__ss__usb__device__capability__descriptor" prot="public">libusb_ss_usb_device_capability_descriptor</innerclass>
    <innerclass refid="structlibusb__container__id__descriptor" prot="public">libusb_container_id_descriptor</innerclass>
    <innerclass refid="structlibusb__control__setup" prot="public">libusb_control_setup</innerclass>
    <innerclass refid="structlibusb__version" prot="public">libusb_version</innerclass>
    <innerclass refid="structlibusb__iso__packet__descriptor" prot="public">libusb_iso_packet_descriptor</innerclass>
    <innerclass refid="structlibusb__transfer" prot="public">libusb_transfer</innerclass>
    <innerclass refid="structlibusb__pollfd" prot="public">libusb_pollfd</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="libusb_8h_1a2698d3115702f9a9999c806872951cdd" prot="public" static="no">
        <name>LIBUSB_DEPRECATED_FOR</name>
        <param><defname>f</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="85" column="10" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" prot="public" static="no">
        <name>LIBUSB_CALL</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>libusbx&apos;s Windows calling convention.</para><para>Under Windows, the selection of available compilers and configurations means that, unlike other platforms, there is not <emphasis>one true calling convention</emphasis> (calling convention: the manner in which parameters are passed to funcions in the generated assembly code).</para><para>Matching the Windows API itself, libusbx uses the WINAPI convention (which translates to the <computeroutput>stdcall</computeroutput> convention) and guarantees that the library is compiled in this way. The public header file also includes appropriate annotations so that your own software will use the right convention, even if another convention is being used by default within your codebase.</para><para>The one consideration that you must apply in your software is to mark all functions which you use as libusbx callbacks with this LIBUSB_CALL annotation, so that they too get compiled for the correct calling convention.</para><para>On non-Windows operating systems, this macro is defined as nothing. This means that you can apply it to your code without worrying about cross-platform compatibility. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="123" column="10" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="libusb_8h_1aa83ecded256e0767220bcc21cc92365d" prot="public" static="no">
        <name>LIBUSBX_API_VERSION</name>
        <initializer>0x01000102</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>libusbx&apos;s API version.</para><para>Since version 1.0.13, to help with feature detection, libusbx defines a LIBUSBX_API_VERSION macro that gets increased every time there is a significant change to the API, such as the introduction of a new call, the definition of a new macro/enum member, or any other element that libusbx applications may want to detect at compilation time.</para><para>The macro is typically used in an application as follows: <programlisting><codeline><highlight class="normal">#if<sp/>defined(LIBUSBX_API_VERSION)<sp/>&amp;&amp;<sp/>(LIBUSBX_API_VERSION<sp/>&gt;=<sp/>0x01001234)</highlight></codeline>
<codeline><highlight class="normal">//<sp/>Use<sp/>one<sp/>of<sp/>the<sp/>newer<sp/>features<sp/>from<sp/>the<sp/>libusbx<sp/>API</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
</programlisting></para><para>Another feature of LIBUSBX_API_VERSION is that it can be used to detect whether you are compiling against the libusb or the libusbx library.</para><para>Internally, LIBUSBX_API_VERSION is defined as follows: (libusbx major &lt;&lt; 24) | (libusbx minor &lt;&lt; 16) | (16 bit incremental) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="149" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="libusb_8h_1a22961bb8cb0d6a9b22c88079efb59b8b" prot="public" static="no">
        <name>libusb_le16_to_cpu</name>
        <initializer>libusb_cpu_to_le16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a 16-bit value from little-endian to host-endian format. On little endian systems, this function does nothing. On big endian systems, the bytes are swapped. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the little-endian value to convert </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value in host-endian byte order </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="182" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="libusb_8h_1ae508b6ba07730085fb3af2891406ab8f" prot="public" static="no">
        <name>LIBUSB_DT_DEVICE_SIZE</name>
        <initializer>18</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="292" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="libusb_8h_1ab7001b519280b66cf9c707f87c6005b3" prot="public" static="no">
        <name>LIBUSB_DT_CONFIG_SIZE</name>
        <initializer>9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="293" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="libusb_8h_1ac7327580a45c1028c93b8bb7db6a5e57" prot="public" static="no">
        <name>LIBUSB_DT_INTERFACE_SIZE</name>
        <initializer>9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="294" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="libusb_8h_1ae552a669c2f058e790f28dc2003ca950" prot="public" static="no">
        <name>LIBUSB_DT_ENDPOINT_SIZE</name>
        <initializer>7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="295" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="libusb_8h_1ac58326aebf1aa7689277004bdeb341d4" prot="public" static="no">
        <name>LIBUSB_DT_ENDPOINT_AUDIO_SIZE</name>
        <initializer>9	/* Audio extension */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="296" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="libusb_8h_1ac265b185cdb5fb3a060ff55ef5d143f4" prot="public" static="no">
        <name>LIBUSB_DT_HUB_NONVAR_SIZE</name>
        <initializer>7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="297" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="libusb_8h_1a979bdc4ea2d9ced3597fbac9fa662498" prot="public" static="no">
        <name>LIBUSB_DT_SS_ENDPOINT_COMPANION_SIZE</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="298" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="libusb_8h_1adb2eff5a633eb521aa4f1d5511ad5dbb" prot="public" static="no">
        <name>LIBUSB_DT_BOS_SIZE</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="299" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="libusb_8h_1af86d8c390f27a8ef7eb842f0d4799ecb" prot="public" static="no">
        <name>LIBUSB_DT_DEVICE_CAPABILITY_SIZE</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="300" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="libusb_8h_1a291016200aa973044c586eb1dd1b0712" prot="public" static="no">
        <name>LIBUSB_BT_USB_2_0_EXTENSION_SIZE</name>
        <initializer>7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="303" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="303" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="libusb_8h_1a25ff6ca821e57fb551b9e07a025f510e" prot="public" static="no">
        <name>LIBUSB_BT_SS_USB_DEVICE_CAPABILITY_SIZE</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="304" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="libusb_8h_1a1c38198af7c00fd12b11919b74e2019a" prot="public" static="no">
        <name>LIBUSB_BT_CONTAINER_ID_SIZE</name>
        <initializer>20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="305" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="305" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="libusb_8h_1a8dac81b646ce578d008165869d477c5f" prot="public" static="no">
        <name>LIBUSB_DT_BOS_MAX_SIZE</name>
        <initializer>((<ref refid="libusb_8h_1adb2eff5a633eb521aa4f1d5511ad5dbb" kindref="member">LIBUSB_DT_BOS_SIZE</ref>)     +\
					(<ref refid="libusb_8h_1a291016200aa973044c586eb1dd1b0712" kindref="member">LIBUSB_BT_USB_2_0_EXTENSION_SIZE</ref>)       +\
					(<ref refid="libusb_8h_1a25ff6ca821e57fb551b9e07a025f510e" kindref="member">LIBUSB_BT_SS_USB_DEVICE_CAPABILITY_SIZE</ref>) +\
					(<ref refid="libusb_8h_1a1c38198af7c00fd12b11919b74e2019a" kindref="member">LIBUSB_BT_CONTAINER_ID_SIZE</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="308" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="libusb_8h_1a9c3a2631dd8aa2d78d68a91fd7bb299c" prot="public" static="no">
        <name>LIBUSB_ENDPOINT_ADDRESS_MASK</name>
        <initializer>0x0f    /* in bEndpointAddress */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="313" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="libusb_8h_1a44868bdcbb34eb58070f16fc7b912384" prot="public" static="no">
        <name>LIBUSB_ENDPOINT_DIR_MASK</name>
        <initializer>0x80</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="314" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="libusb_8h_1a5713da542b75569bbfd972b1422a4ddb" prot="public" static="no">
        <name>LIBUSB_TRANSFER_TYPE_MASK</name>
        <initializer>0x03    /* in bmAttributes */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="328" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="328" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="libusb_8h_1a98f14c9168a01b7cf3bea051e29e2d2c" prot="public" static="no">
        <name>LIBUSB_ISO_SYNC_TYPE_MASK</name>
        <initializer>0x0C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="432" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="432" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="libusb_8h_1a17158be32124e69ad91823f52e511123" prot="public" static="no">
        <name>LIBUSB_ISO_USAGE_TYPE_MASK</name>
        <initializer>0x30</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="453" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="453" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="libusb_8h_1af39dc5e7622e8559df7f1d3da5478717" prot="public" static="no">
        <name>LIBUSB_CONTROL_SETUP_SIZE</name>
        <initializer>(sizeof(struct <ref refid="structlibusb__control__setup" kindref="compound">libusb_control_setup</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="892" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="892" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="libusb_8h_1a784c39b6aab35cf2b21ee8f28a77edb0" prot="public" static="no">
        <name>LIBUSB_ERROR_COUNT</name>
        <initializer>14</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1101" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="1101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="libusb_8h_1a6d4f5e524a3b7ab4a25b751073335d4c" prot="public" static="no">
        <name>LIBUSB_HOTPLUG_MATCH_ANY</name>
        <initializer>-1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Wildcard matching for hotplug events </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1867" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="1867" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1" prot="public" static="no">
        <name>libusb_class_code</name>
        <enumvalue id="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1ac6d01c08f92219d625162271d9547550" prot="public">
          <name>LIBUSB_CLASS_PER_INTERFACE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>In the context of a <ref refid="structlibusb__device__descriptor" kindref="compound">device descriptor</ref>, this bDeviceClass value indicates that each interface specifies its own class information and all interfaces operate independently. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1a1f87be5c5c32c30e1e6831abdb61461a" prot="public">
          <name>LIBUSB_CLASS_AUDIO</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Audio class </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1a7db61f0ea65d1919962ac0370513183b" prot="public">
          <name>LIBUSB_CLASS_COMM</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Communications class </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1ad126069ffbc9cb3cda97fe0fe8c190f3" prot="public">
          <name>LIBUSB_CLASS_HID</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Human Interface Device class </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1a7abdd4f2d21f046622717f70ad0b6ea9" prot="public">
          <name>LIBUSB_CLASS_PHYSICAL</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Physical </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1ab1592f5d41d4ee3ccfe0adef8cbf04ee" prot="public">
          <name>LIBUSB_CLASS_PRINTER</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Printer class </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1abcd1d4f42671058f70ab9ae41c5ce303" prot="public">
          <name>LIBUSB_CLASS_PTP</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Image class </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1af393b0c8f1da0b9c558f6e5c113b59b2" prot="public">
          <name>LIBUSB_CLASS_IMAGE</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1ac84d2301375aef28bf5c3f4bda35f9d1" prot="public">
          <name>LIBUSB_CLASS_MASS_STORAGE</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Mass storage class </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1a28ba55c39b90ba3f281542e4ffdb626d" prot="public">
          <name>LIBUSB_CLASS_HUB</name>
          <initializer>= 9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Hub class </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1aa18621124b0db0f8972556647ad16827" prot="public">
          <name>LIBUSB_CLASS_DATA</name>
          <initializer>= 10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Data class </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1af4ec75b9ab816c46da747c80bbf9cca0" prot="public">
          <name>LIBUSB_CLASS_SMART_CARD</name>
          <initializer>= 0x0b</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Smart Card </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1a5d306be7a6fbfb331ce25c8c804eada8" prot="public">
          <name>LIBUSB_CLASS_CONTENT_SECURITY</name>
          <initializer>= 0x0d</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Content Security </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1a7deae7d18c3d99dda5bb3bd8b6ec01da" prot="public">
          <name>LIBUSB_CLASS_VIDEO</name>
          <initializer>= 0x0e</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Video </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1ab97e8441e102707252263abcdc29b4c0" prot="public">
          <name>LIBUSB_CLASS_PERSONAL_HEALTHCARE</name>
          <initializer>= 0x0f</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Personal Healthcare </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1a5f1089ee11b766a10a27c0c0600bebfa" prot="public">
          <name>LIBUSB_CLASS_DIAGNOSTIC_DEVICE</name>
          <initializer>= 0xdc</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Diagnostic Device </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1aaeea39cf3f500f56381cd6e05132d934" prot="public">
          <name>LIBUSB_CLASS_WIRELESS</name>
          <initializer>= 0xe0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Wireless class </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1a3a95beae54453469c4862efc1606dcc9" prot="public">
          <name>LIBUSB_CLASS_APPLICATION</name>
          <initializer>= 0xfe</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Application class </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1ad68e1d33a332360428f838c6ddd847f6" prot="public">
          <name>LIBUSB_CLASS_VENDOR_SPEC</name>
          <initializer>= 0xff</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Class is vendor-specific </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Device and/or Interface Class codes </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="188" column="1" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="188" bodyend="246"/>
      </memberdef>
      <memberdef kind="enum" id="libusb_8h_1a0a2e8a25dfdebf29fdd4764dcdbc1a9c" prot="public" static="no">
        <name>libusb_descriptor_type</name>
        <enumvalue id="libusb_8h_1a0a2e8a25dfdebf29fdd4764dcdbc1a9ca486e222e9f3053502ce4954a5bd89ba2" prot="public">
          <name>LIBUSB_DT_DEVICE</name>
          <initializer>= 0x01</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Device descriptor. See <ref refid="structlibusb__device__descriptor" kindref="compound">libusb_device_descriptor</ref>. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a0a2e8a25dfdebf29fdd4764dcdbc1a9ca2a3f906d7755932ab67f39701da0b508" prot="public">
          <name>LIBUSB_DT_CONFIG</name>
          <initializer>= 0x02</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Configuration descriptor. See <ref refid="structlibusb__config__descriptor" kindref="compound">libusb_config_descriptor</ref>. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a0a2e8a25dfdebf29fdd4764dcdbc1a9ca2b8ca4332dce1357767ecab20ed2f4c2" prot="public">
          <name>LIBUSB_DT_STRING</name>
          <initializer>= 0x03</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>String descriptor </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a0a2e8a25dfdebf29fdd4764dcdbc1a9ca797f18e35ee27434562aed0c20c46b78" prot="public">
          <name>LIBUSB_DT_INTERFACE</name>
          <initializer>= 0x04</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Interface descriptor. See <ref refid="structlibusb__interface__descriptor" kindref="compound">libusb_interface_descriptor</ref>. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a0a2e8a25dfdebf29fdd4764dcdbc1a9ca97df43465eec9e6db81346f521777815" prot="public">
          <name>LIBUSB_DT_ENDPOINT</name>
          <initializer>= 0x05</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Endpoint descriptor. See <ref refid="structlibusb__endpoint__descriptor" kindref="compound">libusb_endpoint_descriptor</ref>. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a0a2e8a25dfdebf29fdd4764dcdbc1a9caab1245826594605de870d70bffae7f2c" prot="public">
          <name>LIBUSB_DT_BOS</name>
          <initializer>= 0x0f</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>BOS descriptor </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a0a2e8a25dfdebf29fdd4764dcdbc1a9ca56875fd1a3df25bdea7680fa9047743c" prot="public">
          <name>LIBUSB_DT_DEVICE_CAPABILITY</name>
          <initializer>= 0x10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Device Capability descriptor </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a0a2e8a25dfdebf29fdd4764dcdbc1a9ca3085fb63563770bfa1ede7b27cbf4f5e" prot="public">
          <name>LIBUSB_DT_HID</name>
          <initializer>= 0x21</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>HID descriptor </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a0a2e8a25dfdebf29fdd4764dcdbc1a9ca3972f13fb6b6abdb0978dc43d9d24e6f" prot="public">
          <name>LIBUSB_DT_REPORT</name>
          <initializer>= 0x22</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>HID report descriptor </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a0a2e8a25dfdebf29fdd4764dcdbc1a9ca77c22f3dc80f2a505c22c68cc54c70d3" prot="public">
          <name>LIBUSB_DT_PHYSICAL</name>
          <initializer>= 0x23</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Physical descriptor </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a0a2e8a25dfdebf29fdd4764dcdbc1a9ca2186edbc7dc05b063ac41103a5ccfa9a" prot="public">
          <name>LIBUSB_DT_HUB</name>
          <initializer>= 0x29</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Hub descriptor </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a0a2e8a25dfdebf29fdd4764dcdbc1a9ca6892da187e642c8a9b7900e86bf38ba8" prot="public">
          <name>LIBUSB_DT_SUPERSPEED_HUB</name>
          <initializer>= 0x2a</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SuperSpeed Hub descriptor </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a0a2e8a25dfdebf29fdd4764dcdbc1a9ca9bdd0a16eb0647330c2b7085520db533" prot="public">
          <name>LIBUSB_DT_SS_ENDPOINT_COMPANION</name>
          <initializer>= 0x30</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SuperSpeed Endpoint Companion descriptor </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Descriptor types as defined by the USB specification. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="250" column="1" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="250" bodyend="289"/>
      </memberdef>
      <memberdef kind="enum" id="libusb_8h_1a86c880af878493aa8f805c2aba654b8b" prot="public" static="no">
        <name>libusb_endpoint_direction</name>
        <enumvalue id="libusb_8h_1a86c880af878493aa8f805c2aba654b8ba3829979c66e5344367f32f4a31d43613" prot="public">
          <name>LIBUSB_ENDPOINT_IN</name>
          <initializer>= 0x80</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>In: device-to-host </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a86c880af878493aa8f805c2aba654b8ba940484c16d44bdfc6eccc2de7a9ffcb2" prot="public">
          <name>LIBUSB_ENDPOINT_OUT</name>
          <initializer>= 0x00</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Out: host-to-device </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Endpoint direction. Values for bit 7 of the <ref refid="structlibusb__endpoint__descriptor_1a111d087a09cbeded8e15eda9127e23d2" kindref="member">endpoint address</ref> scheme. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="320" column="1" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="320" bodyend="326"/>
      </memberdef>
      <memberdef kind="enum" id="libusb_8h_1acb52027036a07de6ecc6c2bf07d07c71" prot="public" static="no">
        <name>libusb_transfer_type</name>
        <enumvalue id="libusb_8h_1acb52027036a07de6ecc6c2bf07d07c71a4c89624658c783ef9b2a2f08091bc7d7" prot="public">
          <name>LIBUSB_TRANSFER_TYPE_CONTROL</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Control endpoint </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1acb52027036a07de6ecc6c2bf07d07c71a40de9889554fc1785d784b3c31333300" prot="public">
          <name>LIBUSB_TRANSFER_TYPE_ISOCHRONOUS</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Isochronous endpoint </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1acb52027036a07de6ecc6c2bf07d07c71a7bdfa2fc5dadbaaa0e9262e1b4a228e2" prot="public">
          <name>LIBUSB_TRANSFER_TYPE_BULK</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bulk endpoint </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1acb52027036a07de6ecc6c2bf07d07c71aefb0e07862c0eed894ec9c2f957a7e3c" prot="public">
          <name>LIBUSB_TRANSFER_TYPE_INTERRUPT</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Interrupt endpoint </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Endpoint transfer type. Values for bits 0:1 of the <ref refid="structlibusb__endpoint__descriptor_1a932b84417c46467f9916ecf7b679160b" kindref="member">endpoint attributes</ref> field. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="334" column="1" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="334" bodyend="346"/>
      </memberdef>
      <memberdef kind="enum" id="libusb_8h_1a5b5912057c2d7e23b3ed5aa0c20236df" prot="public" static="no">
        <name>libusb_standard_request</name>
        <enumvalue id="libusb_8h_1a5b5912057c2d7e23b3ed5aa0c20236dfa42f2eefbbd7a5c5cce68ca5989a02a7a" prot="public">
          <name>LIBUSB_REQUEST_GET_STATUS</name>
          <initializer>= 0x00</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Request status of the specific recipient </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a5b5912057c2d7e23b3ed5aa0c20236dfa0b0f3b3ac6e8ebca120bf3581c5505de" prot="public">
          <name>LIBUSB_REQUEST_CLEAR_FEATURE</name>
          <initializer>= 0x01</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Clear or disable a specific feature </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a5b5912057c2d7e23b3ed5aa0c20236dfa6059966cdfccc4db0cccaab22a6d9a83" prot="public">
          <name>LIBUSB_REQUEST_SET_FEATURE</name>
          <initializer>= 0x03</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Set or enable a specific feature </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a5b5912057c2d7e23b3ed5aa0c20236dfa7c69aef99e548d128bc1f9e18c539c1d" prot="public">
          <name>LIBUSB_REQUEST_SET_ADDRESS</name>
          <initializer>= 0x05</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Set device address for all future accesses </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a5b5912057c2d7e23b3ed5aa0c20236dfa3ebb19fe897a2a36e90b2e8193b88b0f" prot="public">
          <name>LIBUSB_REQUEST_GET_DESCRIPTOR</name>
          <initializer>= 0x06</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Get the specified descriptor </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a5b5912057c2d7e23b3ed5aa0c20236dfa40ad5a26219379bbbeab2137b21dcb74" prot="public">
          <name>LIBUSB_REQUEST_SET_DESCRIPTOR</name>
          <initializer>= 0x07</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Used to update existing descriptors or add new descriptors </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a5b5912057c2d7e23b3ed5aa0c20236dfa7e33754fe6c088b94905c387155a8586" prot="public">
          <name>LIBUSB_REQUEST_GET_CONFIGURATION</name>
          <initializer>= 0x08</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Get the current device configuration value </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a5b5912057c2d7e23b3ed5aa0c20236dfaefcadf8a4b1f0d1dadd79764486b2cb3" prot="public">
          <name>LIBUSB_REQUEST_SET_CONFIGURATION</name>
          <initializer>= 0x09</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Set device configuration </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a5b5912057c2d7e23b3ed5aa0c20236dfa179b703deda249f6e48412bc2cf61d8c" prot="public">
          <name>LIBUSB_REQUEST_GET_INTERFACE</name>
          <initializer>= 0x0A</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Return the selected alternate setting for the specified interface </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a5b5912057c2d7e23b3ed5aa0c20236dfa72e910864721ebe3e5cb6a5b53de6061" prot="public">
          <name>LIBUSB_REQUEST_SET_INTERFACE</name>
          <initializer>= 0x0B</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Select an alternate interface for the specified interface </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a5b5912057c2d7e23b3ed5aa0c20236dfab4244333798720a3664e59187819f2d5" prot="public">
          <name>LIBUSB_REQUEST_SYNCH_FRAME</name>
          <initializer>= 0x0C</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Set then report an endpoint&apos;s synchronization frame </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a5b5912057c2d7e23b3ed5aa0c20236dfa8fc0213fcc23566ec28e88bee216777b" prot="public">
          <name>LIBUSB_REQUEST_SET_SEL</name>
          <initializer>= 0x30</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sets both the U1 and U2 Exit Latency </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a5b5912057c2d7e23b3ed5aa0c20236dfaa280efe17cdd0be55d528b9932142376" prot="public">
          <name>LIBUSB_SET_ISOCH_DELAY</name>
          <initializer>= 0x31</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Delay from the time a host transmits a packet to the time it is received by the device. </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Standard requests, as defined in table 9-5 of the USB 3.0 specifications </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="350" column="1" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="350" bodyend="394"/>
      </memberdef>
      <memberdef kind="enum" id="libusb_8h_1a0b0933ae70744726cde11254c39fac91" prot="public" static="no">
        <name>libusb_request_type</name>
        <enumvalue id="libusb_8h_1a0b0933ae70744726cde11254c39fac91a20eca62c34d2d25be7e1776510184209" prot="public">
          <name>LIBUSB_REQUEST_TYPE_STANDARD</name>
          <initializer>= (0x00 &lt;&lt; 5)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Standard </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a0b0933ae70744726cde11254c39fac91a43f45ae56bf339e3f984a4182fdd85f0" prot="public">
          <name>LIBUSB_REQUEST_TYPE_CLASS</name>
          <initializer>= (0x01 &lt;&lt; 5)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Class </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a0b0933ae70744726cde11254c39fac91a1585f40d2a73c752a5f60688612c1345" prot="public">
          <name>LIBUSB_REQUEST_TYPE_VENDOR</name>
          <initializer>= (0x02 &lt;&lt; 5)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Vendor </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a0b0933ae70744726cde11254c39fac91a8e2a1b00f9bcf05d3303c75c9e9cda69" prot="public">
          <name>LIBUSB_REQUEST_TYPE_RESERVED</name>
          <initializer>= (0x03 &lt;&lt; 5)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reserved </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Request type bits of the <ref refid="structlibusb__control__setup_1a39b148c231d675492ccd2383196926bf" kindref="member">bmRequestType</ref> field in control transfers. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="400" column="1" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="400" bodyend="412"/>
      </memberdef>
      <memberdef kind="enum" id="libusb_8h_1a20a4e8a729aa543fa742a5086596cbae" prot="public" static="no">
        <name>libusb_request_recipient</name>
        <enumvalue id="libusb_8h_1a20a4e8a729aa543fa742a5086596cbaeaf39ffde2a586d565a817bfd591f2dc33" prot="public">
          <name>LIBUSB_RECIPIENT_DEVICE</name>
          <initializer>= 0x00</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Device </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a20a4e8a729aa543fa742a5086596cbaea9e5f9678cb9b301ccc07a247d350aadc" prot="public">
          <name>LIBUSB_RECIPIENT_INTERFACE</name>
          <initializer>= 0x01</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Interface </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a20a4e8a729aa543fa742a5086596cbaea6873e84c5a1ae0160891ebab16e5d93b" prot="public">
          <name>LIBUSB_RECIPIENT_ENDPOINT</name>
          <initializer>= 0x02</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Endpoint </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a20a4e8a729aa543fa742a5086596cbaeae6f863cf9e2122d2194916876e9477eb" prot="public">
          <name>LIBUSB_RECIPIENT_OTHER</name>
          <initializer>= 0x03</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Other </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Recipient bits of the <ref refid="structlibusb__control__setup_1a39b148c231d675492ccd2383196926bf" kindref="member">bmRequestType</ref> field in control transfers. Values 4 through 31 are reserved. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="418" column="1" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="418" bodyend="430"/>
      </memberdef>
      <memberdef kind="enum" id="libusb_8h_1aa2231202dfe12eddca49b1193d44a441" prot="public" static="no">
        <name>libusb_iso_sync_type</name>
        <enumvalue id="libusb_8h_1aa2231202dfe12eddca49b1193d44a441a4a74eefd565a40b4ed911baaaaea1cee" prot="public">
          <name>LIBUSB_ISO_SYNC_TYPE_NONE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>No synchronization </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1aa2231202dfe12eddca49b1193d44a441ab97a868cd66bfcac50f9ccf8ff0b3a67" prot="public">
          <name>LIBUSB_ISO_SYNC_TYPE_ASYNC</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Asynchronous </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1aa2231202dfe12eddca49b1193d44a441a813f487563e5b61a8399e7512f0c303b" prot="public">
          <name>LIBUSB_ISO_SYNC_TYPE_ADAPTIVE</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Adaptive </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1aa2231202dfe12eddca49b1193d44a441a39244a977707c95c7f3ba0e978faba84" prot="public">
          <name>LIBUSB_ISO_SYNC_TYPE_SYNC</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Synchronous </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Synchronization type for isochronous endpoints. Values for bits 2:3 of the <ref refid="structlibusb__endpoint__descriptor_1a932b84417c46467f9916ecf7b679160b" kindref="member">bmAttributes</ref> field in <ref refid="structlibusb__endpoint__descriptor" kindref="compound">libusb_endpoint_descriptor</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="439" column="1" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="439" bodyend="451"/>
      </memberdef>
      <memberdef kind="enum" id="libusb_8h_1ab72474551b0eb965401e6febb856007c" prot="public" static="no">
        <name>libusb_iso_usage_type</name>
        <enumvalue id="libusb_8h_1ab72474551b0eb965401e6febb856007ca13edfd0d36d959bcf32d5cca341c7f38" prot="public">
          <name>LIBUSB_ISO_USAGE_TYPE_DATA</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Data endpoint </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1ab72474551b0eb965401e6febb856007ca2390aa76c4444e0b590fb65f305e4485" prot="public">
          <name>LIBUSB_ISO_USAGE_TYPE_FEEDBACK</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Feedback endpoint </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1ab72474551b0eb965401e6febb856007ca8e48a0bad38cfaf0e87dfdc225f91e32" prot="public">
          <name>LIBUSB_ISO_USAGE_TYPE_IMPLICIT</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Implicit feedback Data endpoint </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Usage type for isochronous endpoints. Values for bits 4:5 of the <ref refid="structlibusb__endpoint__descriptor_1a932b84417c46467f9916ecf7b679160b" kindref="member">bmAttributes</ref> field in <ref refid="structlibusb__endpoint__descriptor" kindref="compound">libusb_endpoint_descriptor</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="460" column="1" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="460" bodyend="469"/>
      </memberdef>
      <memberdef kind="enum" id="libusb_8h_1a2959abf1184f87b2ce06fe90db6ce614" prot="public" static="no">
        <name>libusb_speed</name>
        <enumvalue id="libusb_8h_1a2959abf1184f87b2ce06fe90db6ce614ace31df1e97e9a66146ac83dcab1e6cfb" prot="public">
          <name>LIBUSB_SPEED_UNKNOWN</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The OS doesn&apos;t report or know the device speed. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a2959abf1184f87b2ce06fe90db6ce614a6017f9ac2509cd523b51c1b72ad6991b" prot="public">
          <name>LIBUSB_SPEED_LOW</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The device is operating at low speed (1.5MBit/s). </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a2959abf1184f87b2ce06fe90db6ce614a0011bead7a48b873808795d8495b4d9e" prot="public">
          <name>LIBUSB_SPEED_FULL</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The device is operating at full speed (12MBit/s). </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a2959abf1184f87b2ce06fe90db6ce614a27bc0b9fe76f8ddf524f3d2ece0eefac" prot="public">
          <name>LIBUSB_SPEED_HIGH</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The device is operating at high speed (480MBit/s). </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a2959abf1184f87b2ce06fe90db6ce614ab8c71e1409cd555ae05937b4db9946a2" prot="public">
          <name>LIBUSB_SPEED_SUPER</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The device is operating at super speed (5000MBit/s). </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Speed codes. Indicates the speed at which the device is operating. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="974" column="1" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="974" bodyend="989"/>
      </memberdef>
      <memberdef kind="enum" id="libusb_8h_1a1454797ecc0de4d084c1619c420014f6" prot="public" static="no">
        <name>libusb_supported_speed</name>
        <enumvalue id="libusb_8h_1a1454797ecc0de4d084c1619c420014f6aa7707c4cef77f4be8aceef859fad2087" prot="public">
          <name>LIBUSB_LOW_SPEED_OPERATION</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Low speed operation supported (1.5MBit/s). </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a1454797ecc0de4d084c1619c420014f6adbebc659daf53947527259172f81b41a" prot="public">
          <name>LIBUSB_FULL_SPEED_OPERATION</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Full speed operation supported (12MBit/s). </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a1454797ecc0de4d084c1619c420014f6a2db8b2bb845a23ad1083521ff5b6e9a8" prot="public">
          <name>LIBUSB_HIGH_SPEED_OPERATION</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>High speed operation supported (480MBit/s). </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a1454797ecc0de4d084c1619c420014f6accd7b9361912b76e40348dc30e6dc7f4" prot="public">
          <name>LIBUSB_SUPER_SPEED_OPERATION</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Superspeed operation supported (5000MBit/s). </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Supported speeds (wSpeedSupported) bitfield. Indicates what speeds the device supports. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="995" column="1" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="995" bodyend="1007"/>
      </memberdef>
      <memberdef kind="enum" id="libusb_8h_1acb8cfa928bffdd0066a3dd2e6aba0558" prot="public" static="no">
        <name>libusb_usb_2_0_extension_attributes</name>
        <enumvalue id="libusb_8h_1acb8cfa928bffdd0066a3dd2e6aba0558a02f60b018f4bc01e8813da813779b792" prot="public">
          <name>LIBUSB_BM_LPM_SUPPORT</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Supports Link Power Management (LPM) </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Masks for the bits of the <ref refid="structlibusb__usb__2__0__extension__descriptor_1ab22e1857d38c9205aaecca52b2e20ae0" kindref="member">bmAttributes</ref> field of the USB 2.0 Extension descriptor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1014" column="1" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="1014" bodyend="1017"/>
      </memberdef>
      <memberdef kind="enum" id="libusb_8h_1aad5a5399176a35a64164dafad7fe4fcd" prot="public" static="no">
        <name>libusb_ss_usb_device_capability_attributes</name>
        <enumvalue id="libusb_8h_1aad5a5399176a35a64164dafad7fe4fcda5987a17b394338df71c1e04c5c75bc21" prot="public">
          <name>LIBUSB_BM_LTM_SUPPORT</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Supports Latency Tolerance Messages (LTM) </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Masks for the bits of the <ref refid="structlibusb__ss__usb__device__capability__descriptor_1ad387790c14d8d6eefe6aa1b4a55006bf" kindref="member">bmAttributes</ref> field field of the SuperSpeed USB Device Capability descriptor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1024" column="1" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="1024" bodyend="1027"/>
      </memberdef>
      <memberdef kind="enum" id="libusb_8h_1a6ccabbf3b3728ae69608ba83bba4e64c" prot="public" static="no">
        <name>libusb_bos_type</name>
        <enumvalue id="libusb_8h_1a6ccabbf3b3728ae69608ba83bba4e64cac05dcfcd0a5c0dbaef90b1d09e4b5505" prot="public">
          <name>LIBUSB_BT_WIRELESS_USB_DEVICE_CAPABILITY</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Wireless USB device capability </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a6ccabbf3b3728ae69608ba83bba4e64ca243b090db95a0fdf7104fbf581724b86" prot="public">
          <name>LIBUSB_BT_USB_2_0_EXTENSION</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>USB 2.0 extensions </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a6ccabbf3b3728ae69608ba83bba4e64ca2f1ab0d2d1e14d4942c079749b1b6c85" prot="public">
          <name>LIBUSB_BT_SS_USB_DEVICE_CAPABILITY</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SuperSpeed USB device capability </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a6ccabbf3b3728ae69608ba83bba4e64cac3c00e8861b4b596ea1f53c505809e5e" prot="public">
          <name>LIBUSB_BT_CONTAINER_ID</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Container ID type </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>USB capability types </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1032" column="1" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="1032" bodyend="1044"/>
      </memberdef>
      <memberdef kind="enum" id="libusb_8h_1ab2323aa0f04bc22038e7e1740b2f29ef" prot="public" static="no">
        <name>libusb_error</name>
        <enumvalue id="libusb_8h_1ab2323aa0f04bc22038e7e1740b2f29efa576d8d63f6e24b2e57cb2ca63b304f15" prot="public">
          <name>LIBUSB_SUCCESS</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Success (no error) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1ab2323aa0f04bc22038e7e1740b2f29efa790feab8b45d8c323038f4d7d15eceec" prot="public">
          <name>LIBUSB_ERROR_IO</name>
          <initializer>= -1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Input/output error </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1ab2323aa0f04bc22038e7e1740b2f29efa680e4bf39b66a36be3182be3ebf58062" prot="public">
          <name>LIBUSB_ERROR_INVALID_PARAM</name>
          <initializer>= -2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Invalid parameter </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1ab2323aa0f04bc22038e7e1740b2f29efa131f3c2f6f2bb40bc6fb60ccb6f3152f" prot="public">
          <name>LIBUSB_ERROR_ACCESS</name>
          <initializer>= -3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Access denied (insufficient permissions) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1ab2323aa0f04bc22038e7e1740b2f29efaf8d98f464314a8e202507a0e5c67336f" prot="public">
          <name>LIBUSB_ERROR_NO_DEVICE</name>
          <initializer>= -4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>No such device (it may have been disconnected) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1ab2323aa0f04bc22038e7e1740b2f29efa28214194dc4399e51777408b2c27f03f" prot="public">
          <name>LIBUSB_ERROR_NOT_FOUND</name>
          <initializer>= -5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Entity not found </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1ab2323aa0f04bc22038e7e1740b2f29efa34ede1140a8a16022f730ac80875ed3b" prot="public">
          <name>LIBUSB_ERROR_BUSY</name>
          <initializer>= -6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Resource busy </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1ab2323aa0f04bc22038e7e1740b2f29efa9b000ac2e6dc4ac864c59579dd08c8bd" prot="public">
          <name>LIBUSB_ERROR_TIMEOUT</name>
          <initializer>= -7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Operation timed out </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1ab2323aa0f04bc22038e7e1740b2f29efaf00ae4b8772fda64263ae6e4d6569af0" prot="public">
          <name>LIBUSB_ERROR_OVERFLOW</name>
          <initializer>= -8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Overflow </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1ab2323aa0f04bc22038e7e1740b2f29efa1406e98370900156484f5fe609270837" prot="public">
          <name>LIBUSB_ERROR_PIPE</name>
          <initializer>= -9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Pipe error </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1ab2323aa0f04bc22038e7e1740b2f29efa39c9284a18fb3277696d84d65f50dbea" prot="public">
          <name>LIBUSB_ERROR_INTERRUPTED</name>
          <initializer>= -10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>System call interrupted (perhaps due to signal) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1ab2323aa0f04bc22038e7e1740b2f29efaff885c8ef4522f22f6673059c7b9edec" prot="public">
          <name>LIBUSB_ERROR_NO_MEM</name>
          <initializer>= -11</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Insufficient memory </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1ab2323aa0f04bc22038e7e1740b2f29efa01b43115484f435627be755d5dc9509b" prot="public">
          <name>LIBUSB_ERROR_NOT_SUPPORTED</name>
          <initializer>= -12</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Operation not supported or unimplemented on this platform </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1ab2323aa0f04bc22038e7e1740b2f29efa9705eb232d1a5e249926d4e76599672e" prot="public">
          <name>LIBUSB_ERROR_OTHER</name>
          <initializer>= -99</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Other error </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Error codes. Most libusbx functions return 0 on success or one of these codes on failure. You can call <ref refid="libusb_8h_1a6b6ec80743847d896eb4029fb28b45e9" kindref="member">libusb_error_name()</ref> to retrieve a string representation of an error code or <ref refid="libusb_8h_1a5a7133eff6f8ade600a4ca1d8c31da2b" kindref="member">libusb_strerror()</ref> to get an end-user suitable description of an error code. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1053" column="1" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="1053" bodyend="1098"/>
      </memberdef>
      <memberdef kind="enum" id="libusb_8h_1a9fcb2aa23d342060ebda1d0cf7478856" prot="public" static="no">
        <name>libusb_transfer_status</name>
        <enumvalue id="libusb_8h_1a9fcb2aa23d342060ebda1d0cf7478856a4595f6532aab12352a58a0fd4ce48363" prot="public">
          <name>LIBUSB_TRANSFER_COMPLETED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transfer completed without error. Note that this does not indicate that the entire amount of requested data was transferred. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a9fcb2aa23d342060ebda1d0cf7478856aa8852ed719d03c2a3cc6f0312d919398" prot="public">
          <name>LIBUSB_TRANSFER_ERROR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transfer failed </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a9fcb2aa23d342060ebda1d0cf7478856ac2b7626d7b51cb980f83933b6ada1ddf" prot="public">
          <name>LIBUSB_TRANSFER_TIMED_OUT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transfer timed out </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a9fcb2aa23d342060ebda1d0cf7478856a8af1f19e46cccafdcf3feadce47e880b" prot="public">
          <name>LIBUSB_TRANSFER_CANCELLED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transfer was cancelled </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a9fcb2aa23d342060ebda1d0cf7478856a23cdfd929f5fe82cca9654f8075eeebb" prot="public">
          <name>LIBUSB_TRANSFER_STALL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>For bulk/interrupt endpoints: halt condition detected (endpoint stalled). For control endpoints: control request not supported. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a9fcb2aa23d342060ebda1d0cf7478856ab7dcb24f313ace407e0c070d6b2c5f13" prot="public">
          <name>LIBUSB_TRANSFER_NO_DEVICE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Device was disconnected </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a9fcb2aa23d342060ebda1d0cf7478856ab1b9cbcb1de27a8fbeceb3427fb2fb14" prot="public">
          <name>LIBUSB_TRANSFER_OVERFLOW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Device sent more data than requested </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Transfer status codes </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1105" column="1" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="1105" bodyend="1131"/>
      </memberdef>
      <memberdef kind="enum" id="libusb_8h_1a1fb47dd0f7c209b60a3609ff0c03d56d" prot="public" static="no">
        <name>libusb_transfer_flags</name>
        <enumvalue id="libusb_8h_1a1fb47dd0f7c209b60a3609ff0c03d56dae4c0697c266819c51c1734b3456e7276" prot="public">
          <name>LIBUSB_TRANSFER_SHORT_NOT_OK</name>
          <initializer>= 1&lt;&lt;0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Report short frames as errors </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a1fb47dd0f7c209b60a3609ff0c03d56dae993a26f495ac9949118e23eafa19e86" prot="public">
          <name>LIBUSB_TRANSFER_FREE_BUFFER</name>
          <initializer>= 1&lt;&lt;1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Automatically free() transfer buffer during <ref refid="libusb_8h_1a34956216e994484c68e17ff522d58cfd" kindref="member">libusb_free_transfer()</ref> </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a1fb47dd0f7c209b60a3609ff0c03d56dacf3f064997b283a14097c9f4d6f8ccc1" prot="public">
          <name>LIBUSB_TRANSFER_FREE_TRANSFER</name>
          <initializer>= 1&lt;&lt;2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Automatically call <ref refid="libusb_8h_1a34956216e994484c68e17ff522d58cfd" kindref="member">libusb_free_transfer()</ref> after callback returns. If this flag is set, it is illegal to call <ref refid="libusb_8h_1a34956216e994484c68e17ff522d58cfd" kindref="member">libusb_free_transfer()</ref> from your transfer callback, as this will result in a double-free when this flag is acted upon. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a1fb47dd0f7c209b60a3609ff0c03d56da26b66334b6ec0537c49841ca623d901f" prot="public">
          <name>LIBUSB_TRANSFER_ADD_ZERO_PACKET</name>
          <initializer>= 1 &lt;&lt; 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Terminate transfers that are a multiple of the endpoint&apos;s wMaxPacketSize with an extra zero length packet. This is useful when a device protocol mandates that each logical request is terminated by an incomplete packet (i.e. the logical requests are not separated by other means).</para><para>This flag only affects host-to-device transfers to bulk and interrupt endpoints. In other situations, it is ignored.</para><para>This flag only affects transfers with a length that is a multiple of the endpoint&apos;s wMaxPacketSize. On transfers of other lengths, this flag has no effect. Therefore, if you are working with a device that needs a ZLP whenever the end of the logical request falls on a packet boundary, then it is sensible to set this flag on <emphasis>every</emphasis> transfer (you do not have to worry about only setting it on transfers that end on the boundary).</para><para>This flag is currently only supported on Linux. On other systems, <ref refid="libusb_8h_1a1efa266ce465fb51a2395feb4c4a9ad5" kindref="member">libusb_submit_transfer()</ref> will return LIBUSB_ERROR_NOT_SUPPORTED for every transfer where this flag is set.</para><para>Available since libusb-1.0.9. </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="structlibusb__transfer_1ae26c063df30c2e29835212aad98c6e06" kindref="member">libusb_transfer.flags</ref> values </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1135" column="1" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="1135" bodyend="1172"/>
      </memberdef>
      <memberdef kind="enum" id="libusb_8h_1aab1b3fa0728c06fafbee897795889bd5" prot="public" static="no">
        <name>libusb_capability</name>
        <enumvalue id="libusb_8h_1aab1b3fa0728c06fafbee897795889bd5a24b79436d4bd088d169f9d1edb4b9649" prot="public">
          <name>LIBUSB_CAP_HAS_CAPABILITY</name>
          <initializer>= 0x0000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The <ref refid="libusb_8h_1a49c71913dddf7c5daf6a004d7da8c15f" kindref="member">libusb_has_capability()</ref> API is available. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1aab1b3fa0728c06fafbee897795889bd5a8b1bbccc648a6677cb9030a6ba827438" prot="public">
          <name>LIBUSB_CAP_HAS_HOTPLUG</name>
          <initializer>= 0x0001</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Hotplug support is available on this platform. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1aab1b3fa0728c06fafbee897795889bd5aa74726ef0af0e42d2d56532f82e873a5" prot="public">
          <name>LIBUSB_CAP_HAS_HID_ACCESS</name>
          <initializer>= 0x0100</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The library can access HID devices without requiring user intervention. Note that before being able to actually access an HID device, you may still have to call additional libusbx functions such as <ref refid="libusb_8h_1a4b1735fb58a237c2aab16d884d1db8aa" kindref="member">libusb_detach_kernel_driver()</ref>. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1aab1b3fa0728c06fafbee897795889bd5ad15a06b1aede635004f08bdc0fe561cc" prot="public">
          <name>LIBUSB_CAP_SUPPORTS_DETACH_KERNEL_DRIVER</name>
          <initializer>= 0x0101</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The library supports detaching of the default USB driver, using <ref refid="libusb_8h_1a4b1735fb58a237c2aab16d884d1db8aa" kindref="member">libusb_detach_kernel_driver()</ref>, if one is set by the OS kernel </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Capabilities supported by an instance of libusb on the current running platform. Test if the loaded library supports a given capability by calling <ref refid="libusb_8h_1a49c71913dddf7c5daf6a004d7da8c15f" kindref="member">libusb_has_capability()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1269" column="1" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="1269" bodyend="1282"/>
      </memberdef>
      <memberdef kind="enum" id="libusb_8h_1a2d6144203f0fc6d373677f6e2e89d2d2" prot="public" static="no">
        <name>libusb_log_level</name>
        <enumvalue id="libusb_8h_1a2d6144203f0fc6d373677f6e2e89d2d2af431dbe84c85599526cc0103f8178270" prot="public">
          <name>LIBUSB_LOG_LEVEL_NONE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a2d6144203f0fc6d373677f6e2e89d2d2ace959b4b99f6c460dfa929b6152e49a8" prot="public">
          <name>LIBUSB_LOG_LEVEL_ERROR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a2d6144203f0fc6d373677f6e2e89d2d2a1d141f7a981d9fcd4bc12e41a1a14e78" prot="public">
          <name>LIBUSB_LOG_LEVEL_WARNING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a2d6144203f0fc6d373677f6e2e89d2d2ab942d780c83ba4f30b9dd2e338002a07" prot="public">
          <name>LIBUSB_LOG_LEVEL_INFO</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a2d6144203f0fc6d373677f6e2e89d2d2afabee6826e913933f5d6fe4040bd7b9c" prot="public">
          <name>LIBUSB_LOG_LEVEL_DEBUG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Log message levels.<itemizedlist>
<listitem><para>LIBUSB_LOG_LEVEL_NONE (0) : no messages ever printed by the library (default)</para></listitem><listitem><para>LIBUSB_LOG_LEVEL_ERROR (1) : error messages are printed to stderr</para></listitem><listitem><para>LIBUSB_LOG_LEVEL_WARNING (2) : warning and error messages are printed to stderr</para></listitem><listitem><para>LIBUSB_LOG_LEVEL_INFO (3) : informational messages are printed to stdout, warning and error messages are printed to stderr</para></listitem><listitem><para>LIBUSB_LOG_LEVEL_DEBUG (4) : debug and informational messages are printed to stdout, warnings and errors to stderr </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1294" column="1" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="1294" bodyend="1300"/>
      </memberdef>
      <memberdef kind="enum" id="libusb_8h_1a95ce2ec85dec177854c423cea2853c52" prot="public" static="no">
        <name>libusb_hotplug_flag</name>
        <enumvalue id="libusb_8h_1a95ce2ec85dec177854c423cea2853c52a01a1c0c9f4e6852cb6df713f2e8a7f6b" prot="public">
          <name>LIBUSB_HOTPLUG_ENUMERATE</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Arm the callback and fire it for all matching currently attached devices. </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Since version 1.0.16, <ref refid="libusb_8h_1aa83ecded256e0767220bcc21cc92365d" kindref="member">LIBUSBX_API_VERSION</ref> &gt;= 0x01000102</para><para>Flags for hotplug events </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1845" column="1" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="1845" bodyend="1848"/>
      </memberdef>
      <memberdef kind="enum" id="libusb_8h_1a556d598ca379618a41bbec3597f55dcf" prot="public" static="no">
        <name>libusb_hotplug_event</name>
        <enumvalue id="libusb_8h_1a556d598ca379618a41bbec3597f55dcfac012270cba6e08dafe7e3bec204dffd6" prot="public">
          <name>LIBUSB_HOTPLUG_EVENT_DEVICE_ARRIVED</name>
          <initializer>= 0x01</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A device has been plugged in and is ready to use </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="libusb_8h_1a556d598ca379618a41bbec3597f55dcfac8234e02b673893ed549329ef3180a27" prot="public">
          <name>LIBUSB_HOTPLUG_EVENT_DEVICE_LEFT</name>
          <initializer>= 0x02</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A device has left and is no longer available. It is the user&apos;s responsibility to call libusb_close on any handle associated with a disconnected device. It is safe to call libusb_get_device_descriptor on a device that has left </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Since version 1.0.16, <ref refid="libusb_8h_1aa83ecded256e0767220bcc21cc92365d" kindref="member">LIBUSBX_API_VERSION</ref> &gt;= 0x01000102</para><para>Hotplug events </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1855" column="1" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="1855" bodyend="1863"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" prot="public" static="no">
        <type>struct <ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref></type>
        <definition>typedef struct libusb_context libusb_context</definition>
        <argsstring></argsstring>
        <name>libusb_context</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Structure representing a libusbx session. The concept of individual libusbx sessions allows for your program to use two libraries (or dynamically load two modules) which both independently use libusb. This will prevent interference between the individual libusbx users - for example <ref refid="libusb_8h_1ab4974e3de2973e8241801f2136805749" kindref="member">libusb_set_debug()</ref> will not affect the other user of the library, and <ref refid="libusb_8h_1aa9ff0ee5b1580833ad2e23eaa89529f0" kindref="member">libusb_exit()</ref> will not destroy resources that the other user is still using.</para><para>Sessions are created by <ref refid="libusb_8h_1a7c69ac34aaf043c495a9e0914662bc5f" kindref="member">libusb_init()</ref> and destroyed through <ref refid="libusb_8h_1aa9ff0ee5b1580833ad2e23eaa89529f0" kindref="member">libusb_exit()</ref>. If your application is guaranteed to only ever include a single libusbx user (i.e. you), you do not have to worry about contexts: pass NULL in every function call where a context is required. The default context will be used.</para><para>For more information, see contexts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="163" column="1" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="941" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" prot="public" static="no">
        <type>struct <ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref></type>
        <definition>typedef struct libusb_device libusb_device</definition>
        <argsstring></argsstring>
        <name>libusb_device</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Structure representing a USB device detected on the system. This is an opaque type for which you are only ever provided with a pointer, usually originating from <ref refid="libusb_8h_1a9a7d648701440279cbdd7b081c9084ee" kindref="member">libusb_get_device_list()</ref>.</para><para>Certain operations can be performed on a device, but in order to do any I/O you will have to first obtain a device handle using <ref refid="libusb_8h_1a2aad4916668a37ae3fa77a1b1ca817bd" kindref="member">libusb_open()</ref>.</para><para>Devices are reference counted with <ref refid="libusb_8h_1afbd116309d37c824da32c133c4e40c1d" kindref="member">libusb_ref_device()</ref> and <ref refid="libusb_8h_1aaf10116272e2c71121b6e09717305adc" kindref="member">libusb_unref_device()</ref>, and are freed when the reference count reaches 0. New devices presented by <ref refid="libusb_8h_1a9a7d648701440279cbdd7b081c9084ee" kindref="member">libusb_get_device_list()</ref> have a reference count of 1, and <ref refid="libusb_8h_1abb12b7139b9965bed377721762bb3437" kindref="member">libusb_free_device_list()</ref> can optionally decrease the reference count on all devices in the list. <ref refid="libusb_8h_1a2aad4916668a37ae3fa77a1b1ca817bd" kindref="member">libusb_open()</ref> adds another reference which is later destroyed by <ref refid="libusb_8h_1a6b8983695e63168a3d1e03e2d4def0e8" kindref="member">libusb_close()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="163" column="1" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="958" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" prot="public" static="no">
        <type>struct <ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref></type>
        <definition>typedef struct libusb_device_handle libusb_device_handle</definition>
        <argsstring></argsstring>
        <name>libusb_device_handle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Structure representing a handle on a USB device. This is an opaque type for which you are only ever provided with a pointer, usually originating from <ref refid="libusb_8h_1a2aad4916668a37ae3fa77a1b1ca817bd" kindref="member">libusb_open()</ref>.</para><para>A device handle is used to perform I/O and other operations. When finished with a device handle, you should call <ref refid="libusb_8h_1a6b8983695e63168a3d1e03e2d4def0e8" kindref="member">libusb_close()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="163" column="1" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="969" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="libusb_8h_1a291d7463aefd0de6209b537db4d06e70" prot="public" static="no">
        <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref>(<ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref> *</type>
        <definition>typedef void(LIBUSB_CALL * libusb_pollfd_added_cb) (int fd, short events, void *user_data)</definition>
        <argsstring>)(int fd, short events, void *user_data)</argsstring>
        <name>libusb_pollfd_added_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Callback function, invoked when a new file descriptor should be added to the set of file descriptors monitored for events. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>the new file descriptor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>events</parametername>
</parameternamelist>
<parameterdescription>
<para>events to monitor for, see <ref refid="structlibusb__pollfd" kindref="compound">libusb_pollfd</ref> for a description </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>User data pointer specified in <ref refid="libusb_8h_1a3b15e3912d7dee7146b36bad190d5e2e" kindref="member">libusb_set_pollfd_notifiers()</ref> call </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="libusb_8h_1a3b15e3912d7dee7146b36bad190d5e2e" kindref="member">libusb_set_pollfd_notifiers()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1806" column="1" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="1806" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="libusb_8h_1abff1d67f33725c93ef6dff699335c225" prot="public" static="no">
        <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref>(<ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref> *</type>
        <definition>typedef void(LIBUSB_CALL * libusb_pollfd_removed_cb) (int fd, void *user_data)</definition>
        <argsstring>)(int fd, void *user_data)</argsstring>
        <name>libusb_pollfd_removed_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Callback function, invoked when a file descriptor should be removed from the set of file descriptors being monitored for events. After returning from this callback, do not use that file descriptor again. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>the file descriptor to stop monitoring </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>User data pointer specified in <ref refid="libusb_8h_1a3b15e3912d7dee7146b36bad190d5e2e" kindref="member">libusb_set_pollfd_notifiers()</ref> call </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="libusb_8h_1a3b15e3912d7dee7146b36bad190d5e2e" kindref="member">libusb_set_pollfd_notifiers()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1818" column="1" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="1818" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="libusb_8h_1a4868157346bbf2c70b6af0cb0a6c0094" prot="public" static="no">
        <type>int</type>
        <definition>typedef int libusb_hotplug_callback_handle</definition>
        <argsstring></argsstring>
        <name>libusb_hotplug_callback_handle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Callback handle.</para><para>Callbacks handles are generated by <ref refid="libusb_8h_1a54961ed4615afb54c8cf50236b2e40d0" kindref="member">libusb_hotplug_register_callback()</ref> and can be used to deregister callbacks. Callback handles are unique per libusb_context and it is safe to call <ref refid="libusb_8h_1afe4401894825a2671daa78cbf7094f55" kindref="member">libusb_hotplug_deregister_callback()</ref> on an already deregisted callback.</para><para>Since version 1.0.16, <ref refid="libusb_8h_1aa83ecded256e0767220bcc21cc92365d" kindref="member">LIBUSBX_API_VERSION</ref> &gt;= 0x01000102</para><para>For more information, see hotplug. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1838" column="1" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="1838" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="libusb_8h_1a34e9904eb8e5124057a866f777cc99a8" prot="public" static="no">
        <type>int(<ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref> *</type>
        <definition>typedef int(LIBUSB_CALL * libusb_hotplug_callback_fn) (libusb_context *ctx, libusb_device *device, libusb_hotplug_event event, void *user_data)</definition>
        <argsstring>)(libusb_context *ctx, libusb_device *device, libusb_hotplug_event event, void *user_data)</argsstring>
        <name>libusb_hotplug_callback_fn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Hotplug callback function type. When requesting hotplug event notifications, you pass a pointer to a callback function of this type.</para><para>This callback may be called by an internal event thread and as such it is recommended the callback do minimal processing before returning.</para><para>libusbx will call this function later, when a matching event had happened on a matching device. See hotplug for more information.</para><para>It is safe to call either <ref refid="libusb_8h_1a54961ed4615afb54c8cf50236b2e40d0" kindref="member">libusb_hotplug_register_callback()</ref> or <ref refid="libusb_8h_1afe4401894825a2671daa78cbf7094f55" kindref="member">libusb_hotplug_deregister_callback()</ref> from within a callback function.</para><para>Since version 1.0.16, <ref refid="libusb_8h_1aa83ecded256e0767220bcc21cc92365d" kindref="member">LIBUSBX_API_VERSION</ref> &gt;= 0x01000102</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>context of this notification </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>libusb_device this event occurred on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>event that occurred </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>user data provided when this callback was registered </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool whether this callback is finished processing events. returning 1 will cause this callback to be deregistered </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1891" column="1" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="1891" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="libusb_8h_1ae3b1162b8e69b49bbf74dcbbdeeadbda" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint16_t</type>
        <definition>static uint16_t libusb_cpu_to_le16</definition>
        <argsstring>(const uint16_t x)</argsstring>
        <name>libusb_cpu_to_le16</name>
        <param>
          <type>const uint16_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="163" column="1" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="163" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>typedef</type>
        <definition>typedef void</definition>
        <argsstring>(LIBUSB_CALL *libusb_transfer_cb_fn)(struct libusb_transfer *transfer)</argsstring>
        <name>void</name>
        <param>
          <type><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref> *</type>
          <declname>libusb_transfer_cb_fn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Asynchronous transfer callback function type. When submitting asynchronous transfers, you pass a pointer to a callback function of this type via the <ref refid="structlibusb__transfer_1a69c6df011ec23ff3e481cc98bfff0623" kindref="member">callback</ref> member of the <ref refid="structlibusb__transfer" kindref="compound">libusb_transfer</ref> structure. libusbx will call this function later, when the transfer has completed or failed. See asyncio for more information. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>transfer</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="structlibusb__transfer" kindref="compound">libusb_transfer</ref> struct the callback function is being notified about. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1198" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a7c69ac34aaf043c495a9e0914662bc5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_init</definition>
        <argsstring>(libusb_context **ctx)</argsstring>
        <name>libusb_init</name>
        <param>
          <type><ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref> **</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1302" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1aa9ff0ee5b1580833ad2e23eaa89529f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref> <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>void LIBUSB_CALL libusb_exit</definition>
        <argsstring>(libusb_context *ctx)</argsstring>
        <name>libusb_exit</name>
        <param>
          <type><ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1303" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1ab4974e3de2973e8241801f2136805749" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref> <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>void LIBUSB_CALL libusb_set_debug</definition>
        <argsstring>(libusb_context *ctx, int level)</argsstring>
        <name>libusb_set_debug</name>
        <param>
          <type><ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1304" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a1c77ca1a138363adc7231a27e060bd25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const struct <ref refid="structlibusb__version" kindref="compound">libusb_version</ref> *<ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>const struct libusb_version* LIBUSB_CALL libusb_get_version</definition>
        <argsstring>(void)</argsstring>
        <name>libusb_get_version</name>
        <param>
          <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1305" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a49c71913dddf7c5daf6a004d7da8c15f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_has_capability</definition>
        <argsstring>(uint32_t capability)</argsstring>
        <name>libusb_has_capability</name>
        <param>
          <type>uint32_t</type>
          <declname>capability</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1306" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a6b6ec80743847d896eb4029fb28b45e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *<ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>const char* LIBUSB_CALL libusb_error_name</definition>
        <argsstring>(int errcode)</argsstring>
        <name>libusb_error_name</name>
        <param>
          <type>int</type>
          <declname>errcode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1307" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1adc87f335a989c1adad2669aad6e1cc15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_setlocale</definition>
        <argsstring>(const char *locale)</argsstring>
        <name>libusb_setlocale</name>
        <param>
          <type>const char *</type>
          <declname>locale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1308" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a5a7133eff6f8ade600a4ca1d8c31da2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *<ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>const char* LIBUSB_CALL libusb_strerror</definition>
        <argsstring>(enum libusb_error errcode)</argsstring>
        <name>libusb_strerror</name>
        <param>
          <type>enum <ref refid="libusb_8h_1ab2323aa0f04bc22038e7e1740b2f29ef" kindref="member">libusb_error</ref></type>
          <declname>errcode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1309" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a9a7d648701440279cbdd7b081c9084ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_get_device_list</definition>
        <argsstring>(libusb_context *ctx, libusb_device ***list)</argsstring>
        <name>libusb_get_device_list</name>
        <param>
          <type><ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref> ***</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1311" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1abb12b7139b9965bed377721762bb3437" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref> <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>void LIBUSB_CALL libusb_free_device_list</definition>
        <argsstring>(libusb_device **list, int unref_devices)</argsstring>
        <name>libusb_free_device_list</name>
        <param>
          <type><ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref> **</type>
          <declname>list</declname>
        </param>
        <param>
          <type>int</type>
          <declname>unref_devices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1313" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1afbd116309d37c824da32c133c4e40c1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref> *<ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>libusb_device* LIBUSB_CALL libusb_ref_device</definition>
        <argsstring>(libusb_device *dev)</argsstring>
        <name>libusb_ref_device</name>
        <param>
          <type><ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1315" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1aaf10116272e2c71121b6e09717305adc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref> <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>void LIBUSB_CALL libusb_unref_device</definition>
        <argsstring>(libusb_device *dev)</argsstring>
        <name>libusb_unref_device</name>
        <param>
          <type><ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1316" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a4c4d114a3fa491a26bc0f33c449a3aa7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_get_configuration</definition>
        <argsstring>(libusb_device_handle *dev, int *config)</argsstring>
        <name>libusb_get_configuration</name>
        <param>
          <type><ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1318" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1aad2f581b52853c0ef9f751185288b44f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_get_device_descriptor</definition>
        <argsstring>(libusb_device *dev, struct libusb_device_descriptor *desc)</argsstring>
        <name>libusb_get_device_descriptor</name>
        <param>
          <type><ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>struct <ref refid="structlibusb__device__descriptor" kindref="compound">libusb_device_descriptor</ref> *</type>
          <declname>desc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1320" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1aefab62a09572b743bf810db2dbdc0d43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_get_active_config_descriptor</definition>
        <argsstring>(libusb_device *dev, struct libusb_config_descriptor **config)</argsstring>
        <name>libusb_get_active_config_descriptor</name>
        <param>
          <type><ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>struct <ref refid="structlibusb__config__descriptor" kindref="compound">libusb_config_descriptor</ref> **</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1322" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a017ef159662d53b1acc5912fd2bc4e9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_get_config_descriptor</definition>
        <argsstring>(libusb_device *dev, uint8_t config_index, struct libusb_config_descriptor **config)</argsstring>
        <name>libusb_get_config_descriptor</name>
        <param>
          <type><ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>config_index</declname>
        </param>
        <param>
          <type>struct <ref refid="structlibusb__config__descriptor" kindref="compound">libusb_config_descriptor</ref> **</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1324" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a0be2a59c71f44089c98c7eaad667c91a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_get_config_descriptor_by_value</definition>
        <argsstring>(libusb_device *dev, uint8_t bConfigurationValue, struct libusb_config_descriptor **config)</argsstring>
        <name>libusb_get_config_descriptor_by_value</name>
        <param>
          <type><ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>bConfigurationValue</declname>
        </param>
        <param>
          <type>struct <ref refid="structlibusb__config__descriptor" kindref="compound">libusb_config_descriptor</ref> **</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1326" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a4b5db80a76a72cb55d0232bf65d390d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref> <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>void LIBUSB_CALL libusb_free_config_descriptor</definition>
        <argsstring>(struct libusb_config_descriptor *config)</argsstring>
        <name>libusb_free_config_descriptor</name>
        <param>
          <type>struct <ref refid="structlibusb__config__descriptor" kindref="compound">libusb_config_descriptor</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1328" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a1e001174e31ae3a66905eee43566bd0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_get_ss_endpoint_companion_descriptor</definition>
        <argsstring>(struct libusb_context *ctx, const struct libusb_endpoint_descriptor *endpoint, struct libusb_ss_endpoint_companion_descriptor **ep_comp)</argsstring>
        <name>libusb_get_ss_endpoint_companion_descriptor</name>
        <param>
          <type>struct <ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const struct <ref refid="structlibusb__endpoint__descriptor" kindref="compound">libusb_endpoint_descriptor</ref> *</type>
          <declname>endpoint</declname>
        </param>
        <param>
          <type>struct <ref refid="structlibusb__ss__endpoint__companion__descriptor" kindref="compound">libusb_ss_endpoint_companion_descriptor</ref> **</type>
          <declname>ep_comp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1330" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a4b640425543fa89ce9a4470786e4f6d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref> <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>void LIBUSB_CALL libusb_free_ss_endpoint_companion_descriptor</definition>
        <argsstring>(struct libusb_ss_endpoint_companion_descriptor *ep_comp)</argsstring>
        <name>libusb_free_ss_endpoint_companion_descriptor</name>
        <param>
          <type>struct <ref refid="structlibusb__ss__endpoint__companion__descriptor" kindref="compound">libusb_ss_endpoint_companion_descriptor</ref> *</type>
          <declname>ep_comp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1334" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1af88e6a836fe8734a888aa0c325f82da8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_get_bos_descriptor</definition>
        <argsstring>(libusb_device_handle *handle, struct libusb_bos_descriptor **bos)</argsstring>
        <name>libusb_get_bos_descriptor</name>
        <param>
          <type><ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>struct <ref refid="structlibusb__bos__descriptor" kindref="compound">libusb_bos_descriptor</ref> **</type>
          <declname>bos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1336" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1aaf4540be83694853389f7f322f9a0d03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref> <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>void LIBUSB_CALL libusb_free_bos_descriptor</definition>
        <argsstring>(struct libusb_bos_descriptor *bos)</argsstring>
        <name>libusb_free_bos_descriptor</name>
        <param>
          <type>struct <ref refid="structlibusb__bos__descriptor" kindref="compound">libusb_bos_descriptor</ref> *</type>
          <declname>bos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1338" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a9d2cb2b4fb2d6d7ea6505dc707329203" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_get_usb_2_0_extension_descriptor</definition>
        <argsstring>(struct libusb_context *ctx, struct libusb_bos_dev_capability_descriptor *dev_cap, struct libusb_usb_2_0_extension_descriptor **usb_2_0_extension)</argsstring>
        <name>libusb_get_usb_2_0_extension_descriptor</name>
        <param>
          <type>struct <ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>struct <ref refid="structlibusb__bos__dev__capability__descriptor" kindref="compound">libusb_bos_dev_capability_descriptor</ref> *</type>
          <declname>dev_cap</declname>
        </param>
        <param>
          <type>struct <ref refid="structlibusb__usb__2__0__extension__descriptor" kindref="compound">libusb_usb_2_0_extension_descriptor</ref> **</type>
          <declname>usb_2_0_extension</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1339" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a59fdd4df58407d5f4bbe7701f1097fc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref> <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>void LIBUSB_CALL libusb_free_usb_2_0_extension_descriptor</definition>
        <argsstring>(struct libusb_usb_2_0_extension_descriptor *usb_2_0_extension)</argsstring>
        <name>libusb_free_usb_2_0_extension_descriptor</name>
        <param>
          <type>struct <ref refid="structlibusb__usb__2__0__extension__descriptor" kindref="compound">libusb_usb_2_0_extension_descriptor</ref> *</type>
          <declname>usb_2_0_extension</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1343" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a31659349f469ed9d76e907afc0dac2db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_get_ss_usb_device_capability_descriptor</definition>
        <argsstring>(struct libusb_context *ctx, struct libusb_bos_dev_capability_descriptor *dev_cap, struct libusb_ss_usb_device_capability_descriptor **ss_usb_device_cap)</argsstring>
        <name>libusb_get_ss_usb_device_capability_descriptor</name>
        <param>
          <type>struct <ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>struct <ref refid="structlibusb__bos__dev__capability__descriptor" kindref="compound">libusb_bos_dev_capability_descriptor</ref> *</type>
          <declname>dev_cap</declname>
        </param>
        <param>
          <type>struct <ref refid="structlibusb__ss__usb__device__capability__descriptor" kindref="compound">libusb_ss_usb_device_capability_descriptor</ref> **</type>
          <declname>ss_usb_device_cap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1345" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1ad3a13b544fab7ee816e50c2e159fc735" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref> <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>void LIBUSB_CALL libusb_free_ss_usb_device_capability_descriptor</definition>
        <argsstring>(struct libusb_ss_usb_device_capability_descriptor *ss_usb_device_cap)</argsstring>
        <name>libusb_free_ss_usb_device_capability_descriptor</name>
        <param>
          <type>struct <ref refid="structlibusb__ss__usb__device__capability__descriptor" kindref="compound">libusb_ss_usb_device_capability_descriptor</ref> *</type>
          <declname>ss_usb_device_cap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1349" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a154e9ec273f747412af25eafdfc3b626" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_get_container_id_descriptor</definition>
        <argsstring>(struct libusb_context *ctx, struct libusb_bos_dev_capability_descriptor *dev_cap, struct libusb_container_id_descriptor **container_id)</argsstring>
        <name>libusb_get_container_id_descriptor</name>
        <param>
          <type>struct <ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>struct <ref refid="structlibusb__bos__dev__capability__descriptor" kindref="compound">libusb_bos_dev_capability_descriptor</ref> *</type>
          <declname>dev_cap</declname>
        </param>
        <param>
          <type>struct <ref refid="structlibusb__container__id__descriptor" kindref="compound">libusb_container_id_descriptor</ref> **</type>
          <declname>container_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1351" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a52187277d9b7311ffc4325ed819bf4f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref> <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>void LIBUSB_CALL libusb_free_container_id_descriptor</definition>
        <argsstring>(struct libusb_container_id_descriptor *container_id)</argsstring>
        <name>libusb_free_container_id_descriptor</name>
        <param>
          <type>struct <ref refid="structlibusb__container__id__descriptor" kindref="compound">libusb_container_id_descriptor</ref> *</type>
          <declname>container_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1354" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1abb2ee74c03bf4233c5375d7d36d8c57a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>uint8_t LIBUSB_CALL libusb_get_bus_number</definition>
        <argsstring>(libusb_device *dev)</argsstring>
        <name>libusb_get_bus_number</name>
        <param>
          <type><ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1356" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a0b0646c2b16d4b1a23a224d1f99d5ffa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>uint8_t LIBUSB_CALL libusb_get_port_number</definition>
        <argsstring>(libusb_device *dev)</argsstring>
        <name>libusb_get_port_number</name>
        <param>
          <type><ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1357" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a7f06ad11e532c3f1b29daa63bd677e1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_get_port_numbers</definition>
        <argsstring>(libusb_device *dev, uint8_t *port_numbers, int port_numbers_len)</argsstring>
        <name>libusb_get_port_numbers</name>
        <param>
          <type><ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>port_numbers</declname>
        </param>
        <param>
          <type>int</type>
          <declname>port_numbers_len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1358" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1af0b9a8dd687a7fb5175683cc58e64982" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_get_port_path</definition>
        <argsstring>(libusb_context *ctx, libusb_device *dev, uint8_t *path, uint8_t path_length)</argsstring>
        <name>libusb_get_port_path</name>
        <param>
          <type><ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>path_length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1360" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1aafe6da9efced1a7343736815099bf498" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref> *<ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>libusb_device* LIBUSB_CALL libusb_get_parent</definition>
        <argsstring>(libusb_device *dev)</argsstring>
        <name>libusb_get_parent</name>
        <param>
          <type><ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1361" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a6a06bf356c6e3b507795126e1f7bed43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>uint8_t LIBUSB_CALL libusb_get_device_address</definition>
        <argsstring>(libusb_device *dev)</argsstring>
        <name>libusb_get_device_address</name>
        <param>
          <type><ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1362" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1ad30927a916c351127877a113dfae3afd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_get_device_speed</definition>
        <argsstring>(libusb_device *dev)</argsstring>
        <name>libusb_get_device_speed</name>
        <param>
          <type><ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1363" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a66e96708a258696986d4d1b779b37a75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_get_max_packet_size</definition>
        <argsstring>(libusb_device *dev, unsigned char endpoint)</argsstring>
        <name>libusb_get_max_packet_size</name>
        <param>
          <type><ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>endpoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1364" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1aee6523f5b8874fc96030892ffd11f70b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_get_max_iso_packet_size</definition>
        <argsstring>(libusb_device *dev, unsigned char endpoint)</argsstring>
        <name>libusb_get_max_iso_packet_size</name>
        <param>
          <type><ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>endpoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1366" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a2aad4916668a37ae3fa77a1b1ca817bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_open</definition>
        <argsstring>(libusb_device *dev, libusb_device_handle **handle)</argsstring>
        <name>libusb_open</name>
        <param>
          <type><ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref> **</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1369" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a6b8983695e63168a3d1e03e2d4def0e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref> <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>void LIBUSB_CALL libusb_close</definition>
        <argsstring>(libusb_device_handle *dev_handle)</argsstring>
        <name>libusb_close</name>
        <param>
          <type><ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref> *</type>
          <declname>dev_handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1370" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1adff9d5b89080631889260794992e7cdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref> *<ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>libusb_device* LIBUSB_CALL libusb_get_device</definition>
        <argsstring>(libusb_device_handle *dev_handle)</argsstring>
        <name>libusb_get_device</name>
        <param>
          <type><ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref> *</type>
          <declname>dev_handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1371" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a99cc162f5ed2072a487ba1ba44150101" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_set_configuration</definition>
        <argsstring>(libusb_device_handle *dev, int configuration)</argsstring>
        <name>libusb_set_configuration</name>
        <param>
          <type><ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>int</type>
          <declname>configuration</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1373" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1ae0bd63d1857b6d6dd40cb71b658b51c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_claim_interface</definition>
        <argsstring>(libusb_device_handle *dev, int interface_number)</argsstring>
        <name>libusb_claim_interface</name>
        <param>
          <type><ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>int</type>
          <declname>interface_number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1375" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1ac90d856dace626f6adb83f83f97791f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_release_interface</definition>
        <argsstring>(libusb_device_handle *dev, int interface_number)</argsstring>
        <name>libusb_release_interface</name>
        <param>
          <type><ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>int</type>
          <declname>interface_number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1377" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1af9b11d89143bcfa2ecf8eab2cec06317" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref> *<ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>libusb_device_handle* LIBUSB_CALL libusb_open_device_with_vid_pid</definition>
        <argsstring>(libusb_context *ctx, uint16_t vendor_id, uint16_t product_id)</argsstring>
        <name>libusb_open_device_with_vid_pid</name>
        <param>
          <type><ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>vendor_id</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>product_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1380" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a65e0cd89617316f855ebe9010f823b4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_set_interface_alt_setting</definition>
        <argsstring>(libusb_device_handle *dev, int interface_number, int alternate_setting)</argsstring>
        <name>libusb_set_interface_alt_setting</name>
        <param>
          <type><ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>int</type>
          <declname>interface_number</declname>
        </param>
        <param>
          <type>int</type>
          <declname>alternate_setting</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1383" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1acf98691739f712a4a95ed170d56eac9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_clear_halt</definition>
        <argsstring>(libusb_device_handle *dev, unsigned char endpoint)</argsstring>
        <name>libusb_clear_halt</name>
        <param>
          <type><ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>endpoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1385" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1ac7273a49b93f9e6cf4317ac55c8b3500" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_reset_device</definition>
        <argsstring>(libusb_device_handle *dev)</argsstring>
        <name>libusb_reset_device</name>
        <param>
          <type><ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1387" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a1ec7a2df1d7100def350c2e2e78c4b01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_kernel_driver_active</definition>
        <argsstring>(libusb_device_handle *dev, int interface_number)</argsstring>
        <name>libusb_kernel_driver_active</name>
        <param>
          <type><ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>int</type>
          <declname>interface_number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1389" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a4b1735fb58a237c2aab16d884d1db8aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_detach_kernel_driver</definition>
        <argsstring>(libusb_device_handle *dev, int interface_number)</argsstring>
        <name>libusb_detach_kernel_driver</name>
        <param>
          <type><ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>int</type>
          <declname>interface_number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1391" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1ab64602ac1e82ec3caf94eb0d6a43c8ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_attach_kernel_driver</definition>
        <argsstring>(libusb_device_handle *dev, int interface_number)</argsstring>
        <name>libusb_attach_kernel_driver</name>
        <param>
          <type><ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>int</type>
          <declname>interface_number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1393" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a44a383fedbdb029b214750b0ee700b72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_set_auto_detach_kernel_driver</definition>
        <argsstring>(libusb_device_handle *dev, int enable)</argsstring>
        <name>libusb_set_auto_detach_kernel_driver</name>
        <param>
          <type><ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>int</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1395" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1adf9c633586dde54ce62a3d66a4d7554c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned char *</type>
        <definition>static unsigned char* libusb_control_transfer_get_data</definition>
        <argsstring>(struct libusb_transfer *transfer)</argsstring>
        <name>libusb_control_transfer_get_data</name>
        <param>
          <type>struct <ref refid="structlibusb__transfer" kindref="compound">libusb_transfer</ref> *</type>
          <declname>transfer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the data section of a control transfer. This convenience function is here to remind you that the data does not start until 8 bytes into the actual buffer, as the setup packet comes first.</para><para>Calling this function only makes sense from a transfer callback function, or situations where you have already allocated a suitably sized buffer at transfer-&gt;buffer.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>transfer</parametername>
</parameternamelist>
<parameterdescription>
<para>a transfer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to the first byte of the data section </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1412" column="1" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="1412" bodyend="1416"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a6ab02f15e11b5b03b1174fbd7c3bc061" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structlibusb__control__setup" kindref="compound">libusb_control_setup</ref> *</type>
        <definition>static struct libusb_control_setup* libusb_control_transfer_get_setup</definition>
        <argsstring>(struct libusb_transfer *transfer)</argsstring>
        <name>libusb_control_transfer_get_setup</name>
        <param>
          <type>struct <ref refid="structlibusb__transfer" kindref="compound">libusb_transfer</ref> *</type>
          <declname>transfer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the control setup packet of a control transfer. This convenience function is here to remind you that the control setup occupies the first 8 bytes of the transfer data buffer.</para><para>Calling this function only makes sense from a transfer callback function, or situations where you have already allocated a suitably sized buffer at transfer-&gt;buffer.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>transfer</parametername>
</parameternamelist>
<parameterdescription>
<para>a transfer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a casted pointer to the start of the transfer data buffer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1430" column="1" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="1430" bodyend="1434"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a5447311149ec2bd954b5f1a640a8e231" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref></type>
        <definition>static void libusb_fill_control_setup</definition>
        <argsstring>(unsigned char *buffer, uint8_t bmRequestType, uint8_t bRequest, uint16_t wValue, uint16_t wIndex, uint16_t wLength)</argsstring>
        <name>libusb_fill_control_setup</name>
        <param>
          <type>unsigned char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>bmRequestType</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>bRequest</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>wValue</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>wIndex</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>wLength</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Helper function to populate the setup packet (first 8 bytes of the data buffer) for a control transfer. The wIndex, wValue and wLength values should be given in host-endian byte order.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer to output the setup packet into This pointer must be aligned to at least 2 bytes boundary. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bmRequestType</parametername>
</parameternamelist>
<parameterdescription>
<para>see the <ref refid="structlibusb__control__setup_1a39b148c231d675492ccd2383196926bf" kindref="member">bmRequestType</ref> field of <ref refid="structlibusb__control__setup" kindref="compound">libusb_control_setup</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bRequest</parametername>
</parameternamelist>
<parameterdescription>
<para>see the <ref refid="structlibusb__control__setup_1a1b80a28b8d4e8586fc54358194e70087" kindref="member">bRequest</ref> field of <ref refid="structlibusb__control__setup" kindref="compound">libusb_control_setup</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wValue</parametername>
</parameternamelist>
<parameterdescription>
<para>see the <ref refid="structlibusb__control__setup_1abbb6daa01fe4b6a05dc43492e4e53a7d" kindref="member">wValue</ref> field of <ref refid="structlibusb__control__setup" kindref="compound">libusb_control_setup</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>see the <ref refid="structlibusb__control__setup_1a70c2ae456344b200a19d434ace85ae2b" kindref="member">wIndex</ref> field of <ref refid="structlibusb__control__setup" kindref="compound">libusb_control_setup</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wLength</parametername>
</parameternamelist>
<parameterdescription>
<para>see the <ref refid="structlibusb__control__setup_1a3c442c64fd7619b43b782367235766cc" kindref="member">wLength</ref> field of <ref refid="structlibusb__control__setup" kindref="compound">libusb_control_setup</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1459" column="1" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="1459" bodyend="1469"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a5b104728be7ee367d252c4568029f1f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structlibusb__transfer" kindref="compound">libusb_transfer</ref> *<ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>struct libusb_transfer* LIBUSB_CALL libusb_alloc_transfer</definition>
        <argsstring>(int iso_packets)</argsstring>
        <name>libusb_alloc_transfer</name>
        <param>
          <type>int</type>
          <declname>iso_packets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1471" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a1efa266ce465fb51a2395feb4c4a9ad5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_submit_transfer</definition>
        <argsstring>(struct libusb_transfer *transfer)</argsstring>
        <name>libusb_submit_transfer</name>
        <param>
          <type>struct <ref refid="structlibusb__transfer" kindref="compound">libusb_transfer</ref> *</type>
          <declname>transfer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1472" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a99bb7eae6ec9697cda2c194ab318f50b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_cancel_transfer</definition>
        <argsstring>(struct libusb_transfer *transfer)</argsstring>
        <name>libusb_cancel_transfer</name>
        <param>
          <type>struct <ref refid="structlibusb__transfer" kindref="compound">libusb_transfer</ref> *</type>
          <declname>transfer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1473" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a34956216e994484c68e17ff522d58cfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref> <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>void LIBUSB_CALL libusb_free_transfer</definition>
        <argsstring>(struct libusb_transfer *transfer)</argsstring>
        <name>libusb_free_transfer</name>
        <param>
          <type>struct <ref refid="structlibusb__transfer" kindref="compound">libusb_transfer</ref> *</type>
          <declname>transfer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1474" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a3a8513ed87229fe2c9771ef0bf17206e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref></type>
        <definition>static void libusb_fill_control_transfer</definition>
        <argsstring>(struct libusb_transfer *transfer, libusb_device_handle *dev_handle, unsigned char *buffer, libusb_transfer_cb_fn callback, void *user_data, unsigned int timeout)</argsstring>
        <name>libusb_fill_control_transfer</name>
        <param>
          <type>struct <ref refid="structlibusb__transfer" kindref="compound">libusb_transfer</ref> *</type>
          <declname>transfer</declname>
        </param>
        <param>
          <type><ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref> *</type>
          <declname>dev_handle</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>libusb_transfer_cb_fn</type>
          <declname>callback</declname>
        </param>
        <param>
          <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref> *</type>
          <declname>user_data</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Helper function to populate the required <ref refid="structlibusb__transfer" kindref="compound">libusb_transfer</ref> fields for a control transfer.</para><para>If you pass a transfer buffer to this function, the first 8 bytes will be interpreted as a control setup packet, and the wLength field will be used to automatically populate the <ref refid="structlibusb__transfer_1a68c023e1f40b50aa8604a2495b6a391e" kindref="member">length</ref> field of the transfer. Therefore the recommended approach is:<orderedlist>
<listitem><para>Allocate a suitably sized data buffer (including space for control setup)</para></listitem><listitem><para>Call libusb_fill_control_setup()</para></listitem><listitem><para>If this is a host-to-device transfer with a data stage, put the data in place after the setup packet</para></listitem><listitem><para>Call this function</para></listitem><listitem><para>Call <ref refid="libusb_8h_1a1efa266ce465fb51a2395feb4c4a9ad5" kindref="member">libusb_submit_transfer()</ref></para></listitem></orderedlist>
</para><para>It is also legal to pass a NULL buffer to this function, in which case this function will not attempt to populate the length field. Remember that you must then populate the buffer and length fields later.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>transfer</parametername>
</parameternamelist>
<parameterdescription>
<para>the transfer to populate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dev_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>handle of the device that will handle the transfer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>data buffer. If provided, this function will interpret the first 8 bytes as a setup packet and infer the transfer length from that. This pointer must be aligned to at least 2 bytes boundary. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>callback function to be invoked on transfer completion </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>user data to pass to callback function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>timeout for the transfer in milliseconds </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1504" column="1" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="1504" bodyend="1520"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1ad4ddb1a5c6c7fefc979a44d7300b95d7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref></type>
        <definition>static void libusb_fill_bulk_transfer</definition>
        <argsstring>(struct libusb_transfer *transfer, libusb_device_handle *dev_handle, unsigned char endpoint, unsigned char *buffer, int length, libusb_transfer_cb_fn callback, void *user_data, unsigned int timeout)</argsstring>
        <name>libusb_fill_bulk_transfer</name>
        <param>
          <type>struct <ref refid="structlibusb__transfer" kindref="compound">libusb_transfer</ref> *</type>
          <declname>transfer</declname>
        </param>
        <param>
          <type><ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref> *</type>
          <declname>dev_handle</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>endpoint</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <param>
          <type>libusb_transfer_cb_fn</type>
          <declname>callback</declname>
        </param>
        <param>
          <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref> *</type>
          <declname>user_data</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Helper function to populate the required <ref refid="structlibusb__transfer" kindref="compound">libusb_transfer</ref> fields for a bulk transfer.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>transfer</parametername>
</parameternamelist>
<parameterdescription>
<para>the transfer to populate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dev_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>handle of the device that will handle the transfer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>endpoint</parametername>
</parameternamelist>
<parameterdescription>
<para>address of the endpoint where this transfer will be sent </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>data buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>length of data buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>callback function to be invoked on transfer completion </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>user data to pass to callback function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>timeout for the transfer in milliseconds </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1535" column="1" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="1535" bodyend="1548"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a90f53cea1124a7566df1aa1202b77510" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref></type>
        <definition>static void libusb_fill_interrupt_transfer</definition>
        <argsstring>(struct libusb_transfer *transfer, libusb_device_handle *dev_handle, unsigned char endpoint, unsigned char *buffer, int length, libusb_transfer_cb_fn callback, void *user_data, unsigned int timeout)</argsstring>
        <name>libusb_fill_interrupt_transfer</name>
        <param>
          <type>struct <ref refid="structlibusb__transfer" kindref="compound">libusb_transfer</ref> *</type>
          <declname>transfer</declname>
        </param>
        <param>
          <type><ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref> *</type>
          <declname>dev_handle</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>endpoint</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <param>
          <type>libusb_transfer_cb_fn</type>
          <declname>callback</declname>
        </param>
        <param>
          <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref> *</type>
          <declname>user_data</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Helper function to populate the required <ref refid="structlibusb__transfer" kindref="compound">libusb_transfer</ref> fields for an interrupt transfer.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>transfer</parametername>
</parameternamelist>
<parameterdescription>
<para>the transfer to populate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dev_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>handle of the device that will handle the transfer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>endpoint</parametername>
</parameternamelist>
<parameterdescription>
<para>address of the endpoint where this transfer will be sent </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>data buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>length of data buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>callback function to be invoked on transfer completion </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>user data to pass to callback function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>timeout for the transfer in milliseconds </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1563" column="1" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="1563" bodyend="1576"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a30fdce8c461e851f0aa4c851014e1aa7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref></type>
        <definition>static void libusb_fill_iso_transfer</definition>
        <argsstring>(struct libusb_transfer *transfer, libusb_device_handle *dev_handle, unsigned char endpoint, unsigned char *buffer, int length, int num_iso_packets, libusb_transfer_cb_fn callback, void *user_data, unsigned int timeout)</argsstring>
        <name>libusb_fill_iso_transfer</name>
        <param>
          <type>struct <ref refid="structlibusb__transfer" kindref="compound">libusb_transfer</ref> *</type>
          <declname>transfer</declname>
        </param>
        <param>
          <type><ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref> *</type>
          <declname>dev_handle</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>endpoint</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_iso_packets</declname>
        </param>
        <param>
          <type>libusb_transfer_cb_fn</type>
          <declname>callback</declname>
        </param>
        <param>
          <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref> *</type>
          <declname>user_data</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Helper function to populate the required <ref refid="structlibusb__transfer" kindref="compound">libusb_transfer</ref> fields for an isochronous transfer.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>transfer</parametername>
</parameternamelist>
<parameterdescription>
<para>the transfer to populate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dev_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>handle of the device that will handle the transfer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>endpoint</parametername>
</parameternamelist>
<parameterdescription>
<para>address of the endpoint where this transfer will be sent </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>data buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>length of data buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_iso_packets</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of isochronous packets </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>callback function to be invoked on transfer completion </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>user data to pass to callback function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>timeout for the transfer in milliseconds </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1592" column="1" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="1592" bodyend="1606"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1acbdecd6f50093f0c1d0e72ee35ace274" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref></type>
        <definition>static void libusb_set_iso_packet_lengths</definition>
        <argsstring>(struct libusb_transfer *transfer, unsigned int length)</argsstring>
        <name>libusb_set_iso_packet_lengths</name>
        <param>
          <type>struct <ref refid="structlibusb__transfer" kindref="compound">libusb_transfer</ref> *</type>
          <declname>transfer</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convenience function to set the length of all packets in an isochronous transfer, based on the num_iso_packets field in the transfer structure.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>transfer</parametername>
</parameternamelist>
<parameterdescription>
<para>a transfer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>the length to set in each isochronous packet descriptor </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="libusb_8h_1a66e96708a258696986d4d1b779b37a75" kindref="member">libusb_get_max_packet_size()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1616" column="1" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="1616" bodyend="1622"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a7f6ea0eb35a216d19d984977e454a7b3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned char *</type>
        <definition>static unsigned char* libusb_get_iso_packet_buffer</definition>
        <argsstring>(struct libusb_transfer *transfer, unsigned int packet)</argsstring>
        <name>libusb_get_iso_packet_buffer</name>
        <param>
          <type>struct <ref refid="structlibusb__transfer" kindref="compound">libusb_transfer</ref> *</type>
          <declname>transfer</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>packet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convenience function to locate the position of an isochronous packet within the buffer of an isochronous transfer.</para><para>This is a thorough function which loops through all preceding packets, accumulating their lengths to find the position of the specified packet. Typically you will assign equal lengths to each packet in the transfer, and hence the above method is sub-optimal. You may wish to use libusb_get_iso_packet_buffer_simple() instead.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>transfer</parametername>
</parameternamelist>
<parameterdescription>
<para>a transfer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>packet</parametername>
</parameternamelist>
<parameterdescription>
<para>the packet to return the address of </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the base address of the packet buffer inside the transfer buffer, or NULL if the packet does not exist. </para></simplesect>
<simplesect kind="see"><para>libusb_get_iso_packet_buffer_simple() </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1640" column="1" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="1640" bodyend="1661"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a3df9a28c4f5c8f1850181ddb5efd12fd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned char *</type>
        <definition>static unsigned char* libusb_get_iso_packet_buffer_simple</definition>
        <argsstring>(struct libusb_transfer *transfer, unsigned int packet)</argsstring>
        <name>libusb_get_iso_packet_buffer_simple</name>
        <param>
          <type>struct <ref refid="structlibusb__transfer" kindref="compound">libusb_transfer</ref> *</type>
          <declname>transfer</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>packet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convenience function to locate the position of an isochronous packet within the buffer of an isochronous transfer, for transfers where each packet is of identical size.</para><para>This function relies on the assumption that every packet within the transfer is of identical size to the first packet. Calculating the location of the packet buffer is then just a simple calculation: <computeroutput>buffer + (packet_size * packet)</computeroutput></para><para>Do not use this function on transfers other than those that have identical packet lengths for each packet.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>transfer</parametername>
</parameternamelist>
<parameterdescription>
<para>a transfer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>packet</parametername>
</parameternamelist>
<parameterdescription>
<para>the packet to return the address of </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the base address of the packet buffer inside the transfer buffer, or NULL if the packet does not exist. </para></simplesect>
<simplesect kind="see"><para>libusb_get_iso_packet_buffer() </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1682" column="1" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="1682" bodyend="1698"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1afc37d4ff91227cbda590e3393a97336f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_control_transfer</definition>
        <argsstring>(libusb_device_handle *dev_handle, uint8_t request_type, uint8_t bRequest, uint16_t wValue, uint16_t wIndex, unsigned char *data, uint16_t wLength, unsigned int timeout)</argsstring>
        <name>libusb_control_transfer</name>
        <param>
          <type><ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref> *</type>
          <declname>dev_handle</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>request_type</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>bRequest</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>wValue</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>wIndex</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>wLength</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1702" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1af67100376b025b3cf118377554c6a6cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_bulk_transfer</definition>
        <argsstring>(libusb_device_handle *dev_handle, unsigned char endpoint, unsigned char *data, int length, int *actual_length, unsigned int timeout)</argsstring>
        <name>libusb_bulk_transfer</name>
        <param>
          <type><ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref> *</type>
          <declname>dev_handle</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>endpoint</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>actual_length</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1706" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1ac7a9982dc7bc7f1f452baadd8dff8396" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_interrupt_transfer</definition>
        <argsstring>(libusb_device_handle *dev_handle, unsigned char endpoint, unsigned char *data, int length, int *actual_length, unsigned int timeout)</argsstring>
        <name>libusb_interrupt_transfer</name>
        <param>
          <type><ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref> *</type>
          <declname>dev_handle</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>endpoint</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>actual_length</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1710" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a465642422af4ba2a988e188c6c86d7f0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int libusb_get_descriptor</definition>
        <argsstring>(libusb_device_handle *dev, uint8_t desc_type, uint8_t desc_index, unsigned char *data, int length)</argsstring>
        <name>libusb_get_descriptor</name>
        <param>
          <type><ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>desc_type</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>desc_index</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieve a descriptor from the default control pipe. This is a convenience function which formulates the appropriate control message to retrieve the descriptor.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>a device handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>desc_type</parametername>
</parameternamelist>
<parameterdescription>
<para>the descriptor type, see <ref refid="libusb_8h_1a0a2e8a25dfdebf29fdd4764dcdbc1a9c" kindref="member">libusb_descriptor_type</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>desc_index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the descriptor to retrieve </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>output buffer for descriptor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>size of data buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of bytes returned in data, or LIBUSB_ERROR code on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1726" column="1" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="1726" bodyend="1732"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1ab89c2119087308c6bfa6a4be30f39bc3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int libusb_get_string_descriptor</definition>
        <argsstring>(libusb_device_handle *dev, uint8_t desc_index, uint16_t langid, unsigned char *data, int length)</argsstring>
        <name>libusb_get_string_descriptor</name>
        <param>
          <type><ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>desc_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>langid</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieve a descriptor from a device. This is a convenience function which formulates the appropriate control message to retrieve the descriptor. The string returned is Unicode, as detailed in the USB specifications.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>a device handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>desc_index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the descriptor to retrieve </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>langid</parametername>
</parameternamelist>
<parameterdescription>
<para>the language ID for the string descriptor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>output buffer for descriptor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>size of data buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of bytes returned in data, or LIBUSB_ERROR code on failure </para></simplesect>
<simplesect kind="see"><para><ref refid="libusb_8h_1a71a757eb75ba6c68071abd5c1e7d16e3" kindref="member">libusb_get_string_descriptor_ascii()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1748" column="1" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" bodystart="1748" bodyend="1754"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a71a757eb75ba6c68071abd5c1e7d16e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_get_string_descriptor_ascii</definition>
        <argsstring>(libusb_device_handle *dev, uint8_t desc_index, unsigned char *data, int length)</argsstring>
        <name>libusb_get_string_descriptor_ascii</name>
        <param>
          <type><ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>desc_index</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1756" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a568c771954c882fb5b8a27c8a242fb48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_try_lock_events</definition>
        <argsstring>(libusb_context *ctx)</argsstring>
        <name>libusb_try_lock_events</name>
        <param>
          <type><ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1761" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a998ccdc623daf815e0139c8a22e79089" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref> <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>void LIBUSB_CALL libusb_lock_events</definition>
        <argsstring>(libusb_context *ctx)</argsstring>
        <name>libusb_lock_events</name>
        <param>
          <type><ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1762" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1aa4e57b8c4559de5cc9b6939cefe3a3f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref> <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>void LIBUSB_CALL libusb_unlock_events</definition>
        <argsstring>(libusb_context *ctx)</argsstring>
        <name>libusb_unlock_events</name>
        <param>
          <type><ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1763" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a67ad7b677f2a1db96fc9ff3f93d6f9dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_event_handling_ok</definition>
        <argsstring>(libusb_context *ctx)</argsstring>
        <name>libusb_event_handling_ok</name>
        <param>
          <type><ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1764" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a1b39913b0ad99f86c58f7de908e63f4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_event_handler_active</definition>
        <argsstring>(libusb_context *ctx)</argsstring>
        <name>libusb_event_handler_active</name>
        <param>
          <type><ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1765" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1aa2e9009e74250d455eaed4283c03e882" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref> <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>void LIBUSB_CALL libusb_lock_event_waiters</definition>
        <argsstring>(libusb_context *ctx)</argsstring>
        <name>libusb_lock_event_waiters</name>
        <param>
          <type><ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1766" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a946372598e1c673ae73980c9100352f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref> <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>void LIBUSB_CALL libusb_unlock_event_waiters</definition>
        <argsstring>(libusb_context *ctx)</argsstring>
        <name>libusb_unlock_event_waiters</name>
        <param>
          <type><ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1767" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a5c4b3038d1dccc6caa9c4ce27450d3b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_wait_for_event</definition>
        <argsstring>(libusb_context *ctx, struct timeval *tv)</argsstring>
        <name>libusb_wait_for_event</name>
        <param>
          <type><ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>struct timeval *</type>
          <declname>tv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1768" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a857c11585f1364a42ceef94e181930e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_handle_events_timeout</definition>
        <argsstring>(libusb_context *ctx, struct timeval *tv)</argsstring>
        <name>libusb_handle_events_timeout</name>
        <param>
          <type><ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>struct timeval *</type>
          <declname>tv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1770" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a85bd06da903179fabaea797ba5767163" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_handle_events_timeout_completed</definition>
        <argsstring>(libusb_context *ctx, struct timeval *tv, int *completed)</argsstring>
        <name>libusb_handle_events_timeout_completed</name>
        <param>
          <type><ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>struct timeval *</type>
          <declname>tv</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>completed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1772" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a6959bab068afc01988f851144ebc8a85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_handle_events</definition>
        <argsstring>(libusb_context *ctx)</argsstring>
        <name>libusb_handle_events</name>
        <param>
          <type><ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1774" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1af7dbc98d3dc10deecc9a8b840ffdc5e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_handle_events_completed</definition>
        <argsstring>(libusb_context *ctx, int *completed)</argsstring>
        <name>libusb_handle_events_completed</name>
        <param>
          <type><ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>completed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1775" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1ab4c07164a9f5b03576813717ff79a86a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_handle_events_locked</definition>
        <argsstring>(libusb_context *ctx, struct timeval *tv)</argsstring>
        <name>libusb_handle_events_locked</name>
        <param>
          <type><ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>struct timeval *</type>
          <declname>tv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1776" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a4dc6ca6794442ddf1842f47752b6f6cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_pollfds_handle_timeouts</definition>
        <argsstring>(libusb_context *ctx)</argsstring>
        <name>libusb_pollfds_handle_timeouts</name>
        <param>
          <type><ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1778" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a14e06f2ebb63d8430ddaddce92d611ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_get_next_timeout</definition>
        <argsstring>(libusb_context *ctx, struct timeval *tv)</argsstring>
        <name>libusb_get_next_timeout</name>
        <param>
          <type><ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>struct timeval *</type>
          <declname>tv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1779" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1ac815ac878eb250533c8c5a92827d2594" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const struct <ref refid="structlibusb__pollfd" kindref="compound">libusb_pollfd</ref> **<ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>const struct libusb_pollfd** LIBUSB_CALL libusb_get_pollfds</definition>
        <argsstring>(libusb_context *ctx)</argsstring>
        <name>libusb_get_pollfds</name>
        <param>
          <type><ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1820" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a3b15e3912d7dee7146b36bad190d5e2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref> <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>void LIBUSB_CALL libusb_set_pollfd_notifiers</definition>
        <argsstring>(libusb_context *ctx, libusb_pollfd_added_cb added_cb, libusb_pollfd_removed_cb removed_cb, void *user_data)</argsstring>
        <name>libusb_set_pollfd_notifiers</name>
        <param>
          <type><ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="libusb_8h_1a291d7463aefd0de6209b537db4d06e70" kindref="member">libusb_pollfd_added_cb</ref></type>
          <declname>added_cb</declname>
        </param>
        <param>
          <type><ref refid="libusb_8h_1abff1d67f33725c93ef6dff699335c225" kindref="member">libusb_pollfd_removed_cb</ref></type>
          <declname>removed_cb</declname>
        </param>
        <param>
          <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref> *</type>
          <declname>user_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1822" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1a54961ed4615afb54c8cf50236b2e40d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>int LIBUSB_CALL libusb_hotplug_register_callback</definition>
        <argsstring>(libusb_context *ctx, libusb_hotplug_event events, libusb_hotplug_flag flags, int vendor_id, int product_id, int dev_class, libusb_hotplug_callback_fn cb_fn, void *user_data, libusb_hotplug_callback_handle *handle)</argsstring>
        <name>libusb_hotplug_register_callback</name>
        <param>
          <type><ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="libusb_8h_1a556d598ca379618a41bbec3597f55dcf" kindref="member">libusb_hotplug_event</ref></type>
          <declname>events</declname>
        </param>
        <param>
          <type><ref refid="libusb_8h_1a95ce2ec85dec177854c423cea2853c52" kindref="member">libusb_hotplug_flag</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type>int</type>
          <declname>vendor_id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>product_id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dev_class</declname>
        </param>
        <param>
          <type><ref refid="libusb_8h_1a34e9904eb8e5124057a866f777cc99a8" kindref="member">libusb_hotplug_callback_fn</ref></type>
          <declname>cb_fn</declname>
        </param>
        <param>
          <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref> *</type>
          <declname>user_data</declname>
        </param>
        <param>
          <type><ref refid="libusb_8h_1a4868157346bbf2c70b6af0cb0a6c0094" kindref="member">libusb_hotplug_callback_handle</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Register a hotplug callback function</para><para>Register a callback with the libusb_context. The callback will fire when a matching event occurs on a matching device. The callback is armed until either it is deregistered with <ref refid="libusb_8h_1afe4401894825a2671daa78cbf7094f55" kindref="member">libusb_hotplug_deregister_callback()</ref> or the supplied callback returns 1 to indicate it is finished processing events.</para><para>If the <ref refid="libusb_8h_1a95ce2ec85dec177854c423cea2853c52a01a1c0c9f4e6852cb6df713f2e8a7f6b" kindref="member">LIBUSB_HOTPLUG_ENUMERATE</ref> is passed the callback will be called with a <ref refid="libusb_8h_1a556d598ca379618a41bbec3597f55dcfac012270cba6e08dafe7e3bec204dffd6" kindref="member">LIBUSB_HOTPLUG_EVENT_DEVICE_ARRIVED</ref> for all devices already plugged into the machine. Note that libusbx modifies its internal device list from a separate thread, while calling hotplug callbacks from <ref refid="libusb_8h_1a6959bab068afc01988f851144ebc8a85" kindref="member">libusb_handle_events()</ref>, so it is possible for a device to already be present on, or removed from, its internal device list, while the hotplug callbacks still need to be dispatched. This means that when using <ref refid="libusb_8h_1a95ce2ec85dec177854c423cea2853c52a01a1c0c9f4e6852cb6df713f2e8a7f6b" kindref="member">LIBUSB_HOTPLUG_ENUMERATE</ref>, your callback may be called twice for the arrival of the same device, once from <ref refid="libusb_8h_1a54961ed4615afb54c8cf50236b2e40d0" kindref="member">libusb_hotplug_register_callback()</ref> and once from <ref refid="libusb_8h_1a6959bab068afc01988f851144ebc8a85" kindref="member">libusb_handle_events()</ref>; and/or your callback may be called for the removal of a device for which an arrived call was never made.</para><para>Since version 1.0.16, <ref refid="libusb_8h_1aa83ecded256e0767220bcc21cc92365d" kindref="member">LIBUSBX_API_VERSION</ref> &gt;= 0x01000102</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>context to register this callback with </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">events</parametername>
</parameternamelist>
<parameterdescription>
<para>bitwise or of events that will trigger this callback. See <ref refid="libusb_8h_1a556d598ca379618a41bbec3597f55dcf" kindref="member">libusb_hotplug_event</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>hotplug callback flags. See <ref refid="libusb_8h_1a95ce2ec85dec177854c423cea2853c52" kindref="member">libusb_hotplug_flag</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">vendor_id</parametername>
</parameternamelist>
<parameterdescription>
<para>the vendor id to match or <ref refid="libusb_8h_1a6d4f5e524a3b7ab4a25b751073335d4c" kindref="member">LIBUSB_HOTPLUG_MATCH_ANY</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">product_id</parametername>
</parameternamelist>
<parameterdescription>
<para>the product id to match or <ref refid="libusb_8h_1a6d4f5e524a3b7ab4a25b751073335d4c" kindref="member">LIBUSB_HOTPLUG_MATCH_ANY</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dev_class</parametername>
</parameternamelist>
<parameterdescription>
<para>the device class to match or <ref refid="libusb_8h_1a6d4f5e524a3b7ab4a25b751073335d4c" kindref="member">LIBUSB_HOTPLUG_MATCH_ANY</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cb_fn</parametername>
</parameternamelist>
<parameterdescription>
<para>the function to be invoked on a matching event/device </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>user data to pass to the callback function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to store the handle of the allocated callback (can be NULL) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>LIBUSB_SUCCESS on success LIBUSB_ERROR code on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1930" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libusb_8h_1afe4401894825a2671daa78cbf7094f55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref> <ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref></type>
        <definition>void LIBUSB_CALL libusb_hotplug_deregister_callback</definition>
        <argsstring>(libusb_context *ctx, libusb_hotplug_callback_handle handle)</argsstring>
        <name>libusb_hotplug_deregister_callback</name>
        <param>
          <type><ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="libusb_8h_1a4868157346bbf2c70b6af0cb0a6c0094" kindref="member">libusb_hotplug_callback_handle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Deregisters a hotplug callback.</para><para>Deregister a callback from a libusb_context. This function is safe to call from within a hotplug callback.</para><para>Since version 1.0.16, <ref refid="libusb_8h_1aa83ecded256e0767220bcc21cc92365d" kindref="member">LIBUSBX_API_VERSION</ref> &gt;= 0x01000102</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>context this callback is registered with </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the handle of the callback to deregister </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h" line="1950" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Public<sp/>libusbx<sp/>header<sp/>file</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>©<sp/>2001<sp/>Johannes<sp/>Erdfelt<sp/>&lt;johannes@erdfelt.com&gt;</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>©<sp/>2007-2008<sp/>Daniel<sp/>Drake<sp/>&lt;dsd@gentoo.org&gt;</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>©<sp/>2012<sp/>Pete<sp/>Batard<sp/>&lt;pete@akeo.ie&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>©<sp/>2012<sp/>Nathan<sp/>Hjelm<sp/>&lt;hjelmn@cs.unm.edu&gt;</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>For<sp/>more<sp/>information,<sp/>please<sp/>visit:<sp/>http://libusbx.org</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/>02110-1301<sp/>USA</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LIBUSB_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIBUSB_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>on<sp/>MS<sp/>environments,<sp/>the<sp/>inline<sp/>keyword<sp/>is<sp/>available<sp/>in<sp/>C++<sp/>only<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(__cplusplus)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>inline<sp/>__inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ssize_t<sp/>is<sp/>also<sp/>not<sp/>available<sp/>(copy/paste<sp/>from<sp/>MinGW)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_SSIZE_T_DEFINED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SSIZE_T_DEFINED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>ssize_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>__int64<sp/>ssize_t;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ssize_t;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_WIN64<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_SSIZE_T_DEFINED<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_MSC_VER<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>stdint.h<sp/>is<sp/>not<sp/>available<sp/>on<sp/>older<sp/>MSVC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)<sp/>&amp;&amp;<sp/>(_MSC_VER<sp/>&lt;<sp/>1600)<sp/>&amp;&amp;<sp/>(!defined(_STDINT))<sp/>&amp;&amp;<sp/>(!defined(_STDINT_H))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>__int8<sp/><sp/><sp/>uint8_t;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>__int16<sp/><sp/>uint16_t;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>__int32<sp/><sp/>uint32_t;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(_WIN32_WCE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__linux)<sp/>||<sp/>defined(__APPLE__)<sp/>||<sp/>defined(__CYGWIN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&apos;interface&apos;<sp/>might<sp/>be<sp/>defined<sp/>as<sp/>a<sp/>macro<sp/>on<sp/>Windows,<sp/>so<sp/>we<sp/>need<sp/>to</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/>undefine<sp/>it<sp/>so<sp/>as<sp/>not<sp/>to<sp/>break<sp/>the<sp/>current<sp/>libusbx<sp/>API,<sp/>because</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/>libusb_config_descriptor<sp/>has<sp/>an<sp/>&apos;interface&apos;<sp/>member</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*<sp/>As<sp/>this<sp/>can<sp/>be<sp/>problematic<sp/>if<sp/>you<sp/>include<sp/>windows.h<sp/>after<sp/>libusb.h</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/>in<sp/>your<sp/>sources,<sp/>we<sp/>force<sp/>windows.h<sp/>to<sp/>be<sp/>included<sp/>first.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_WIN32)<sp/>||<sp/>defined(__CYGWIN__)<sp/>||<sp/>defined(_WIN32_WCE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;windows.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(interface)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(__CYGWIN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;winsock.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__GNUC__<sp/>&gt;<sp/>4<sp/>||<sp/>(__GNUC__<sp/>==<sp/>4<sp/>&amp;&amp;<sp/>__GNUC_MINOR__<sp/>&gt;=<sp/>5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIBUSB_DEPRECATED_FOR(f)<sp/>\</highlight></codeline>
<codeline lineno="83"><highlight class="preprocessor"><sp/><sp/>__attribute__((deprecated(&quot;Use<sp/>&quot;<sp/>#f<sp/>&quot;<sp/>instead&quot;)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="libusb_8h_1a2698d3115702f9a9999c806872951cdd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIBUSB_DEPRECATED_FOR(f)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__GNUC__<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="comment">/*<sp/>LIBUSB_CALL<sp/>must<sp/>be<sp/>defined<sp/>on<sp/>both<sp/>definition<sp/>and<sp/>declaration<sp/>of<sp/>libusbx</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>*<sp/>functions.<sp/>You&apos;d<sp/>think<sp/>that<sp/>declaration<sp/>would<sp/>be<sp/>enough,<sp/>but<sp/>cygwin<sp/>will</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>*<sp/>complain<sp/>about<sp/>conflicting<sp/>types<sp/>unless<sp/>both<sp/>are<sp/>marked<sp/>this<sp/>way.</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>*<sp/>The<sp/>placement<sp/>of<sp/>this<sp/>macro<sp/>is<sp/>important<sp/>too;<sp/>it<sp/>must<sp/>appear<sp/>after<sp/>the</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/>*<sp/>return<sp/>type,<sp/>before<sp/>the<sp/>function<sp/>name.<sp/>See<sp/>internal<sp/>documentation<sp/>for</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/>*<sp/>API_EXPORTED.</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_WIN32)<sp/>||<sp/>defined(__CYGWIN__)<sp/>||<sp/>defined(_WIN32_WCE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIBUSB_CALL<sp/>WINAPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIBUSB_CALL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="libusb_8h_1aa83ecded256e0767220bcc21cc92365d" refkind="member"><highlight class="preprocessor">#define<sp/>LIBUSBX_API_VERSION<sp/>0x01000102</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint16_t<sp/>libusb_cpu_to_le16(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>x)</highlight></codeline>
<codeline lineno="164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/>b8[2];</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>b16;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>_tmp;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>_tmp.b8[1]<sp/>=<sp/>(uint8_t)<sp/>(x<sp/>&gt;&gt;<sp/>8);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>_tmp.b8[0]<sp/>=<sp/>(uint8_t)<sp/>(x<sp/>&amp;<sp/>0xff);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_tmp.b16;</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="libusb_8h_1a22961bb8cb0d6a9b22c88079efb59b8b" refkind="member"><highlight class="preprocessor">#define<sp/>libusb_le16_to_cpu<sp/>libusb_cpu_to_le16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>standard<sp/>USB<sp/>stuff<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1" kindref="member">libusb_class_code</ref><sp/>{</highlight></codeline>
<codeline lineno="193" refid="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1ac6d01c08f92219d625162271d9547550" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1ac6d01c08f92219d625162271d9547550" kindref="member">LIBUSB_CLASS_PER_INTERFACE</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1a1f87be5c5c32c30e1e6831abdb61461a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1a1f87be5c5c32c30e1e6831abdb61461a" kindref="member">LIBUSB_CLASS_AUDIO</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1a7db61f0ea65d1919962ac0370513183b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1a7db61f0ea65d1919962ac0370513183b" kindref="member">LIBUSB_CLASS_COMM</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1ad126069ffbc9cb3cda97fe0fe8c190f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1ad126069ffbc9cb3cda97fe0fe8c190f3" kindref="member">LIBUSB_CLASS_HID</ref><sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1a7abdd4f2d21f046622717f70ad0b6ea9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1a7abdd4f2d21f046622717f70ad0b6ea9" kindref="member">LIBUSB_CLASS_PHYSICAL</ref><sp/>=<sp/>5,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1ab1592f5d41d4ee3ccfe0adef8cbf04ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1ab1592f5d41d4ee3ccfe0adef8cbf04ee" kindref="member">LIBUSB_CLASS_PRINTER</ref><sp/>=<sp/>7,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1abcd1d4f42671058f70ab9ae41c5ce303" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1abcd1d4f42671058f70ab9ae41c5ce303" kindref="member">LIBUSB_CLASS_PTP</ref><sp/>=<sp/>6,<sp/></highlight><highlight class="comment">/*<sp/>legacy<sp/>name<sp/>from<sp/>libusb-0.1<sp/>usb.h<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212" refid="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1af393b0c8f1da0b9c558f6e5c113b59b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1af393b0c8f1da0b9c558f6e5c113b59b2" kindref="member">LIBUSB_CLASS_IMAGE</ref><sp/>=<sp/>6,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1ac84d2301375aef28bf5c3f4bda35f9d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1ac84d2301375aef28bf5c3f4bda35f9d1" kindref="member">LIBUSB_CLASS_MASS_STORAGE</ref><sp/>=<sp/>8,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1a28ba55c39b90ba3f281542e4ffdb626d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1a28ba55c39b90ba3f281542e4ffdb626d" kindref="member">LIBUSB_CLASS_HUB</ref><sp/>=<sp/>9,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1aa18621124b0db0f8972556647ad16827" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1aa18621124b0db0f8972556647ad16827" kindref="member">LIBUSB_CLASS_DATA</ref><sp/>=<sp/>10,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1af4ec75b9ab816c46da747c80bbf9cca0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1af4ec75b9ab816c46da747c80bbf9cca0" kindref="member">LIBUSB_CLASS_SMART_CARD</ref><sp/>=<sp/>0x0b,</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1a5d306be7a6fbfb331ce25c8c804eada8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1a5d306be7a6fbfb331ce25c8c804eada8" kindref="member">LIBUSB_CLASS_CONTENT_SECURITY</ref><sp/>=<sp/>0x0d,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1a7deae7d18c3d99dda5bb3bd8b6ec01da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1a7deae7d18c3d99dda5bb3bd8b6ec01da" kindref="member">LIBUSB_CLASS_VIDEO</ref><sp/>=<sp/>0x0e,</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="233" refid="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1ab97e8441e102707252263abcdc29b4c0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1ab97e8441e102707252263abcdc29b4c0" kindref="member">LIBUSB_CLASS_PERSONAL_HEALTHCARE</ref><sp/>=<sp/>0x0f,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1a5f1089ee11b766a10a27c0c0600bebfa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1a5f1089ee11b766a10a27c0c0600bebfa" kindref="member">LIBUSB_CLASS_DIAGNOSTIC_DEVICE</ref><sp/>=<sp/>0xdc,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1aaeea39cf3f500f56381cd6e05132d934" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1aaeea39cf3f500f56381cd6e05132d934" kindref="member">LIBUSB_CLASS_WIRELESS</ref><sp/>=<sp/>0xe0,</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1a3a95beae54453469c4862efc1606dcc9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1a3a95beae54453469c4862efc1606dcc9" kindref="member">LIBUSB_CLASS_APPLICATION</ref><sp/>=<sp/>0xfe,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="245" refid="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1ad68e1d33a332360428f838c6ddd847f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1ac529888effbefef8af4f9d17ebc903a1ad68e1d33a332360428f838c6ddd847f6" kindref="member">LIBUSB_CLASS_VENDOR_SPEC</ref><sp/>=<sp/>0xff</highlight></codeline>
<codeline lineno="246"><highlight class="normal">};</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="libusb_8h_1a0a2e8a25dfdebf29fdd4764dcdbc1a9c" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1a0a2e8a25dfdebf29fdd4764dcdbc1a9c" kindref="member">libusb_descriptor_type</ref><sp/>{</highlight></codeline>
<codeline lineno="252" refid="libusb_8h_1a0a2e8a25dfdebf29fdd4764dcdbc1a9ca486e222e9f3053502ce4954a5bd89ba2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a0a2e8a25dfdebf29fdd4764dcdbc1a9ca486e222e9f3053502ce4954a5bd89ba2" kindref="member">LIBUSB_DT_DEVICE</ref><sp/>=<sp/>0x01,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="libusb_8h_1a0a2e8a25dfdebf29fdd4764dcdbc1a9ca2a3f906d7755932ab67f39701da0b508" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a0a2e8a25dfdebf29fdd4764dcdbc1a9ca2a3f906d7755932ab67f39701da0b508" kindref="member">LIBUSB_DT_CONFIG</ref><sp/>=<sp/>0x02,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="258" refid="libusb_8h_1a0a2e8a25dfdebf29fdd4764dcdbc1a9ca2b8ca4332dce1357767ecab20ed2f4c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a0a2e8a25dfdebf29fdd4764dcdbc1a9ca2b8ca4332dce1357767ecab20ed2f4c2" kindref="member">LIBUSB_DT_STRING</ref><sp/>=<sp/>0x03,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="261" refid="libusb_8h_1a0a2e8a25dfdebf29fdd4764dcdbc1a9ca797f18e35ee27434562aed0c20c46b78" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a0a2e8a25dfdebf29fdd4764dcdbc1a9ca797f18e35ee27434562aed0c20c46b78" kindref="member">LIBUSB_DT_INTERFACE</ref><sp/>=<sp/>0x04,</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="264" refid="libusb_8h_1a0a2e8a25dfdebf29fdd4764dcdbc1a9ca97df43465eec9e6db81346f521777815" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a0a2e8a25dfdebf29fdd4764dcdbc1a9ca97df43465eec9e6db81346f521777815" kindref="member">LIBUSB_DT_ENDPOINT</ref><sp/>=<sp/>0x05,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="libusb_8h_1a0a2e8a25dfdebf29fdd4764dcdbc1a9caab1245826594605de870d70bffae7f2c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a0a2e8a25dfdebf29fdd4764dcdbc1a9caab1245826594605de870d70bffae7f2c" kindref="member">LIBUSB_DT_BOS</ref><sp/>=<sp/>0x0f,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="270" refid="libusb_8h_1a0a2e8a25dfdebf29fdd4764dcdbc1a9ca56875fd1a3df25bdea7680fa9047743c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a0a2e8a25dfdebf29fdd4764dcdbc1a9ca56875fd1a3df25bdea7680fa9047743c" kindref="member">LIBUSB_DT_DEVICE_CAPABILITY</ref><sp/>=<sp/>0x10,</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="273" refid="libusb_8h_1a0a2e8a25dfdebf29fdd4764dcdbc1a9ca3085fb63563770bfa1ede7b27cbf4f5e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a0a2e8a25dfdebf29fdd4764dcdbc1a9ca3085fb63563770bfa1ede7b27cbf4f5e" kindref="member">LIBUSB_DT_HID</ref><sp/>=<sp/>0x21,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="libusb_8h_1a0a2e8a25dfdebf29fdd4764dcdbc1a9ca3972f13fb6b6abdb0978dc43d9d24e6f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a0a2e8a25dfdebf29fdd4764dcdbc1a9ca3972f13fb6b6abdb0978dc43d9d24e6f" kindref="member">LIBUSB_DT_REPORT</ref><sp/>=<sp/>0x22,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="279" refid="libusb_8h_1a0a2e8a25dfdebf29fdd4764dcdbc1a9ca77c22f3dc80f2a505c22c68cc54c70d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a0a2e8a25dfdebf29fdd4764dcdbc1a9ca77c22f3dc80f2a505c22c68cc54c70d3" kindref="member">LIBUSB_DT_PHYSICAL</ref><sp/>=<sp/>0x23,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="282" refid="libusb_8h_1a0a2e8a25dfdebf29fdd4764dcdbc1a9ca2186edbc7dc05b063ac41103a5ccfa9a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a0a2e8a25dfdebf29fdd4764dcdbc1a9ca2186edbc7dc05b063ac41103a5ccfa9a" kindref="member">LIBUSB_DT_HUB</ref><sp/>=<sp/>0x29,</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="285" refid="libusb_8h_1a0a2e8a25dfdebf29fdd4764dcdbc1a9ca6892da187e642c8a9b7900e86bf38ba8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a0a2e8a25dfdebf29fdd4764dcdbc1a9ca6892da187e642c8a9b7900e86bf38ba8" kindref="member">LIBUSB_DT_SUPERSPEED_HUB</ref><sp/>=<sp/>0x2a,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="288" refid="libusb_8h_1a0a2e8a25dfdebf29fdd4764dcdbc1a9ca9bdd0a16eb0647330c2b7085520db533" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a0a2e8a25dfdebf29fdd4764dcdbc1a9ca9bdd0a16eb0647330c2b7085520db533" kindref="member">LIBUSB_DT_SS_ENDPOINT_COMPANION</ref><sp/>=<sp/>0x30</highlight></codeline>
<codeline lineno="289"><highlight class="normal">};</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Descriptor<sp/>sizes<sp/>per<sp/>descriptor<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="libusb_8h_1ae508b6ba07730085fb3af2891406ab8f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIBUSB_DT_DEVICE_SIZE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>18</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293" refid="libusb_8h_1ab7001b519280b66cf9c707f87c6005b3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIBUSB_DT_CONFIG_SIZE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294" refid="libusb_8h_1ac7327580a45c1028c93b8bb7db6a5e57" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIBUSB_DT_INTERFACE_SIZE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295" refid="libusb_8h_1ae552a669c2f058e790f28dc2003ca950" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIBUSB_DT_ENDPOINT_SIZE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296" refid="libusb_8h_1ac58326aebf1aa7689277004bdeb341d4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIBUSB_DT_ENDPOINT_AUDIO_SIZE<sp/><sp/><sp/><sp/><sp/><sp/><sp/>9<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Audio<sp/>extension<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297" refid="libusb_8h_1ac265b185cdb5fb3a060ff55ef5d143f4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIBUSB_DT_HUB_NONVAR_SIZE<sp/><sp/><sp/><sp/><sp/><sp/><sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298" refid="libusb_8h_1a979bdc4ea2d9ced3597fbac9fa662498" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIBUSB_DT_SS_ENDPOINT_COMPANION_SIZE<sp/><sp/><sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299" refid="libusb_8h_1adb2eff5a633eb521aa4f1d5511ad5dbb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIBUSB_DT_BOS_SIZE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300" refid="libusb_8h_1af86d8c390f27a8ef7eb842f0d4799ecb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIBUSB_DT_DEVICE_CAPABILITY_SIZE<sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>BOS<sp/>descriptor<sp/>sizes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303" refid="libusb_8h_1a291016200aa973044c586eb1dd1b0712" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIBUSB_BT_USB_2_0_EXTENSION_SIZE<sp/><sp/><sp/><sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304" refid="libusb_8h_1a25ff6ca821e57fb551b9e07a025f510e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIBUSB_BT_SS_USB_DEVICE_CAPABILITY_SIZE<sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305" refid="libusb_8h_1a1c38198af7c00fd12b11919b74e2019a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIBUSB_BT_CONTAINER_ID_SIZE<sp/><sp/><sp/><sp/><sp/>20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>We<sp/>unwrap<sp/>the<sp/>BOS<sp/>=&gt;<sp/>define<sp/>its<sp/>max<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308" refid="libusb_8h_1a8dac81b646ce578d008165869d477c5f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIBUSB_DT_BOS_MAX_SIZE<sp/><sp/><sp/><sp/><sp/><sp/>((LIBUSB_DT_BOS_SIZE)<sp/><sp/><sp/><sp/><sp/>+\</highlight></codeline>
<codeline lineno="309"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(LIBUSB_BT_USB_2_0_EXTENSION_SIZE)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>+\</highlight></codeline>
<codeline lineno="310"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(LIBUSB_BT_SS_USB_DEVICE_CAPABILITY_SIZE)<sp/>+\</highlight></codeline>
<codeline lineno="311"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(LIBUSB_BT_CONTAINER_ID_SIZE))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313" refid="libusb_8h_1a9c3a2631dd8aa2d78d68a91fd7bb299c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIBUSB_ENDPOINT_ADDRESS_MASK<sp/><sp/><sp/><sp/>0x0f<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>in<sp/>bEndpointAddress<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="libusb_8h_1a44868bdcbb34eb58070f16fc7b912384" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIBUSB_ENDPOINT_DIR_MASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x80</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="320" refid="libusb_8h_1a86c880af878493aa8f805c2aba654b8b" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1a86c880af878493aa8f805c2aba654b8b" kindref="member">libusb_endpoint_direction</ref><sp/>{</highlight></codeline>
<codeline lineno="322" refid="libusb_8h_1a86c880af878493aa8f805c2aba654b8ba3829979c66e5344367f32f4a31d43613" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a86c880af878493aa8f805c2aba654b8ba3829979c66e5344367f32f4a31d43613" kindref="member">LIBUSB_ENDPOINT_IN</ref><sp/>=<sp/>0x80,</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="325" refid="libusb_8h_1a86c880af878493aa8f805c2aba654b8ba940484c16d44bdfc6eccc2de7a9ffcb2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a86c880af878493aa8f805c2aba654b8ba940484c16d44bdfc6eccc2de7a9ffcb2" kindref="member">LIBUSB_ENDPOINT_OUT</ref><sp/>=<sp/>0x00</highlight></codeline>
<codeline lineno="326"><highlight class="normal">};</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328" refid="libusb_8h_1a5713da542b75569bbfd972b1422a4ddb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIBUSB_TRANSFER_TYPE_MASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x03<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>in<sp/>bmAttributes<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="334" refid="libusb_8h_1acb52027036a07de6ecc6c2bf07d07c71" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1acb52027036a07de6ecc6c2bf07d07c71" kindref="member">libusb_transfer_type</ref><sp/>{</highlight></codeline>
<codeline lineno="336" refid="libusb_8h_1acb52027036a07de6ecc6c2bf07d07c71a4c89624658c783ef9b2a2f08091bc7d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1acb52027036a07de6ecc6c2bf07d07c71a4c89624658c783ef9b2a2f08091bc7d7" kindref="member">LIBUSB_TRANSFER_TYPE_CONTROL</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="339" refid="libusb_8h_1acb52027036a07de6ecc6c2bf07d07c71a40de9889554fc1785d784b3c31333300" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1acb52027036a07de6ecc6c2bf07d07c71a40de9889554fc1785d784b3c31333300" kindref="member">LIBUSB_TRANSFER_TYPE_ISOCHRONOUS</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="342" refid="libusb_8h_1acb52027036a07de6ecc6c2bf07d07c71a7bdfa2fc5dadbaaa0e9262e1b4a228e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1acb52027036a07de6ecc6c2bf07d07c71a7bdfa2fc5dadbaaa0e9262e1b4a228e2" kindref="member">LIBUSB_TRANSFER_TYPE_BULK</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="345" refid="libusb_8h_1acb52027036a07de6ecc6c2bf07d07c71aefb0e07862c0eed894ec9c2f957a7e3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1acb52027036a07de6ecc6c2bf07d07c71aefb0e07862c0eed894ec9c2f957a7e3c" kindref="member">LIBUSB_TRANSFER_TYPE_INTERRUPT</ref><sp/>=<sp/>3</highlight></codeline>
<codeline lineno="346"><highlight class="normal">};</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="350" refid="libusb_8h_1a5b5912057c2d7e23b3ed5aa0c20236df" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1a5b5912057c2d7e23b3ed5aa0c20236df" kindref="member">libusb_standard_request</ref><sp/>{</highlight></codeline>
<codeline lineno="352" refid="libusb_8h_1a5b5912057c2d7e23b3ed5aa0c20236dfa42f2eefbbd7a5c5cce68ca5989a02a7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a5b5912057c2d7e23b3ed5aa0c20236dfa42f2eefbbd7a5c5cce68ca5989a02a7a" kindref="member">LIBUSB_REQUEST_GET_STATUS</ref><sp/>=<sp/>0x00,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="355" refid="libusb_8h_1a5b5912057c2d7e23b3ed5aa0c20236dfa0b0f3b3ac6e8ebca120bf3581c5505de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a5b5912057c2d7e23b3ed5aa0c20236dfa0b0f3b3ac6e8ebca120bf3581c5505de" kindref="member">LIBUSB_REQUEST_CLEAR_FEATURE</ref><sp/>=<sp/>0x01,</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>0x02<sp/>is<sp/>reserved<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="360" refid="libusb_8h_1a5b5912057c2d7e23b3ed5aa0c20236dfa6059966cdfccc4db0cccaab22a6d9a83" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a5b5912057c2d7e23b3ed5aa0c20236dfa6059966cdfccc4db0cccaab22a6d9a83" kindref="member">LIBUSB_REQUEST_SET_FEATURE</ref><sp/>=<sp/>0x03,</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>0x04<sp/>is<sp/>reserved<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="365" refid="libusb_8h_1a5b5912057c2d7e23b3ed5aa0c20236dfa7c69aef99e548d128bc1f9e18c539c1d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a5b5912057c2d7e23b3ed5aa0c20236dfa7c69aef99e548d128bc1f9e18c539c1d" kindref="member">LIBUSB_REQUEST_SET_ADDRESS</ref><sp/>=<sp/>0x05,</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="368" refid="libusb_8h_1a5b5912057c2d7e23b3ed5aa0c20236dfa3ebb19fe897a2a36e90b2e8193b88b0f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a5b5912057c2d7e23b3ed5aa0c20236dfa3ebb19fe897a2a36e90b2e8193b88b0f" kindref="member">LIBUSB_REQUEST_GET_DESCRIPTOR</ref><sp/>=<sp/>0x06,</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="371" refid="libusb_8h_1a5b5912057c2d7e23b3ed5aa0c20236dfa40ad5a26219379bbbeab2137b21dcb74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a5b5912057c2d7e23b3ed5aa0c20236dfa40ad5a26219379bbbeab2137b21dcb74" kindref="member">LIBUSB_REQUEST_SET_DESCRIPTOR</ref><sp/>=<sp/>0x07,</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="374" refid="libusb_8h_1a5b5912057c2d7e23b3ed5aa0c20236dfa7e33754fe6c088b94905c387155a8586" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a5b5912057c2d7e23b3ed5aa0c20236dfa7e33754fe6c088b94905c387155a8586" kindref="member">LIBUSB_REQUEST_GET_CONFIGURATION</ref><sp/>=<sp/>0x08,</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="377" refid="libusb_8h_1a5b5912057c2d7e23b3ed5aa0c20236dfaefcadf8a4b1f0d1dadd79764486b2cb3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a5b5912057c2d7e23b3ed5aa0c20236dfaefcadf8a4b1f0d1dadd79764486b2cb3" kindref="member">LIBUSB_REQUEST_SET_CONFIGURATION</ref><sp/>=<sp/>0x09,</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="380" refid="libusb_8h_1a5b5912057c2d7e23b3ed5aa0c20236dfa179b703deda249f6e48412bc2cf61d8c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a5b5912057c2d7e23b3ed5aa0c20236dfa179b703deda249f6e48412bc2cf61d8c" kindref="member">LIBUSB_REQUEST_GET_INTERFACE</ref><sp/>=<sp/>0x0A,</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="383" refid="libusb_8h_1a5b5912057c2d7e23b3ed5aa0c20236dfa72e910864721ebe3e5cb6a5b53de6061" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a5b5912057c2d7e23b3ed5aa0c20236dfa72e910864721ebe3e5cb6a5b53de6061" kindref="member">LIBUSB_REQUEST_SET_INTERFACE</ref><sp/>=<sp/>0x0B,</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="386" refid="libusb_8h_1a5b5912057c2d7e23b3ed5aa0c20236dfab4244333798720a3664e59187819f2d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a5b5912057c2d7e23b3ed5aa0c20236dfab4244333798720a3664e59187819f2d5" kindref="member">LIBUSB_REQUEST_SYNCH_FRAME</ref><sp/>=<sp/>0x0C,</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="389" refid="libusb_8h_1a5b5912057c2d7e23b3ed5aa0c20236dfa8fc0213fcc23566ec28e88bee216777b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a5b5912057c2d7e23b3ed5aa0c20236dfa8fc0213fcc23566ec28e88bee216777b" kindref="member">LIBUSB_REQUEST_SET_SEL</ref><sp/>=<sp/>0x30,</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="393" refid="libusb_8h_1a5b5912057c2d7e23b3ed5aa0c20236dfaa280efe17cdd0be55d528b9932142376" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a5b5912057c2d7e23b3ed5aa0c20236dfaa280efe17cdd0be55d528b9932142376" kindref="member">LIBUSB_SET_ISOCH_DELAY</ref><sp/>=<sp/>0x31,</highlight></codeline>
<codeline lineno="394"><highlight class="normal">};</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="400" refid="libusb_8h_1a0b0933ae70744726cde11254c39fac91" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1a0b0933ae70744726cde11254c39fac91" kindref="member">libusb_request_type</ref><sp/>{</highlight></codeline>
<codeline lineno="402" refid="libusb_8h_1a0b0933ae70744726cde11254c39fac91a20eca62c34d2d25be7e1776510184209" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a0b0933ae70744726cde11254c39fac91a20eca62c34d2d25be7e1776510184209" kindref="member">LIBUSB_REQUEST_TYPE_STANDARD</ref><sp/>=<sp/>(0x00<sp/>&lt;&lt;<sp/>5),</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="405" refid="libusb_8h_1a0b0933ae70744726cde11254c39fac91a43f45ae56bf339e3f984a4182fdd85f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a0b0933ae70744726cde11254c39fac91a43f45ae56bf339e3f984a4182fdd85f0" kindref="member">LIBUSB_REQUEST_TYPE_CLASS</ref><sp/>=<sp/>(0x01<sp/>&lt;&lt;<sp/>5),</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="408" refid="libusb_8h_1a0b0933ae70744726cde11254c39fac91a1585f40d2a73c752a5f60688612c1345" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a0b0933ae70744726cde11254c39fac91a1585f40d2a73c752a5f60688612c1345" kindref="member">LIBUSB_REQUEST_TYPE_VENDOR</ref><sp/>=<sp/>(0x02<sp/>&lt;&lt;<sp/>5),</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="411" refid="libusb_8h_1a0b0933ae70744726cde11254c39fac91a8e2a1b00f9bcf05d3303c75c9e9cda69" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a0b0933ae70744726cde11254c39fac91a8e2a1b00f9bcf05d3303c75c9e9cda69" kindref="member">LIBUSB_REQUEST_TYPE_RESERVED</ref><sp/>=<sp/>(0x03<sp/>&lt;&lt;<sp/>5)</highlight></codeline>
<codeline lineno="412"><highlight class="normal">};</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="418" refid="libusb_8h_1a20a4e8a729aa543fa742a5086596cbae" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1a20a4e8a729aa543fa742a5086596cbae" kindref="member">libusb_request_recipient</ref><sp/>{</highlight></codeline>
<codeline lineno="420" refid="libusb_8h_1a20a4e8a729aa543fa742a5086596cbaeaf39ffde2a586d565a817bfd591f2dc33" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a20a4e8a729aa543fa742a5086596cbaeaf39ffde2a586d565a817bfd591f2dc33" kindref="member">LIBUSB_RECIPIENT_DEVICE</ref><sp/>=<sp/>0x00,</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="423" refid="libusb_8h_1a20a4e8a729aa543fa742a5086596cbaea9e5f9678cb9b301ccc07a247d350aadc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a20a4e8a729aa543fa742a5086596cbaea9e5f9678cb9b301ccc07a247d350aadc" kindref="member">LIBUSB_RECIPIENT_INTERFACE</ref><sp/>=<sp/>0x01,</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="426" refid="libusb_8h_1a20a4e8a729aa543fa742a5086596cbaea6873e84c5a1ae0160891ebab16e5d93b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a20a4e8a729aa543fa742a5086596cbaea6873e84c5a1ae0160891ebab16e5d93b" kindref="member">LIBUSB_RECIPIENT_ENDPOINT</ref><sp/>=<sp/>0x02,</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="429" refid="libusb_8h_1a20a4e8a729aa543fa742a5086596cbaeae6f863cf9e2122d2194916876e9477eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a20a4e8a729aa543fa742a5086596cbaeae6f863cf9e2122d2194916876e9477eb" kindref="member">LIBUSB_RECIPIENT_OTHER</ref><sp/>=<sp/>0x03,</highlight></codeline>
<codeline lineno="430"><highlight class="normal">};</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432" refid="libusb_8h_1a98f14c9168a01b7cf3bea051e29e2d2c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIBUSB_ISO_SYNC_TYPE_MASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="439" refid="libusb_8h_1aa2231202dfe12eddca49b1193d44a441" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa2231202dfe12eddca49b1193d44a441" kindref="member">libusb_iso_sync_type</ref><sp/>{</highlight></codeline>
<codeline lineno="441" refid="libusb_8h_1aa2231202dfe12eddca49b1193d44a441a4a74eefd565a40b4ed911baaaaea1cee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1aa2231202dfe12eddca49b1193d44a441a4a74eefd565a40b4ed911baaaaea1cee" kindref="member">LIBUSB_ISO_SYNC_TYPE_NONE</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="444" refid="libusb_8h_1aa2231202dfe12eddca49b1193d44a441ab97a868cd66bfcac50f9ccf8ff0b3a67" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1aa2231202dfe12eddca49b1193d44a441ab97a868cd66bfcac50f9ccf8ff0b3a67" kindref="member">LIBUSB_ISO_SYNC_TYPE_ASYNC</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="447" refid="libusb_8h_1aa2231202dfe12eddca49b1193d44a441a813f487563e5b61a8399e7512f0c303b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1aa2231202dfe12eddca49b1193d44a441a813f487563e5b61a8399e7512f0c303b" kindref="member">LIBUSB_ISO_SYNC_TYPE_ADAPTIVE</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="450" refid="libusb_8h_1aa2231202dfe12eddca49b1193d44a441a39244a977707c95c7f3ba0e978faba84" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1aa2231202dfe12eddca49b1193d44a441a39244a977707c95c7f3ba0e978faba84" kindref="member">LIBUSB_ISO_SYNC_TYPE_SYNC</ref><sp/>=<sp/>3</highlight></codeline>
<codeline lineno="451"><highlight class="normal">};</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453" refid="libusb_8h_1a17158be32124e69ad91823f52e511123" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIBUSB_ISO_USAGE_TYPE_MASK<sp/>0x30</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="460" refid="libusb_8h_1ab72474551b0eb965401e6febb856007c" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1ab72474551b0eb965401e6febb856007c" kindref="member">libusb_iso_usage_type</ref><sp/>{</highlight></codeline>
<codeline lineno="462" refid="libusb_8h_1ab72474551b0eb965401e6febb856007ca13edfd0d36d959bcf32d5cca341c7f38" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1ab72474551b0eb965401e6febb856007ca13edfd0d36d959bcf32d5cca341c7f38" kindref="member">LIBUSB_ISO_USAGE_TYPE_DATA</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="465" refid="libusb_8h_1ab72474551b0eb965401e6febb856007ca2390aa76c4444e0b590fb65f305e4485" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1ab72474551b0eb965401e6febb856007ca2390aa76c4444e0b590fb65f305e4485" kindref="member">LIBUSB_ISO_USAGE_TYPE_FEEDBACK</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="468" refid="libusb_8h_1ab72474551b0eb965401e6febb856007ca8e48a0bad38cfaf0e87dfdc225f91e32" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1ab72474551b0eb965401e6febb856007ca8e48a0bad38cfaf0e87dfdc225f91e32" kindref="member">LIBUSB_ISO_USAGE_TYPE_IMPLICIT</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="469"><highlight class="normal">};</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="476" refid="structlibusb__device__descriptor" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlibusb__device__descriptor" kindref="compound">libusb_device_descriptor</ref><sp/>{</highlight></codeline>
<codeline lineno="478" refid="structlibusb__device__descriptor_1affda0be3fe1c37092ddc7cb120428f30" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__device__descriptor_1affda0be3fe1c37092ddc7cb120428f30" kindref="member">bLength</ref>;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="483" refid="structlibusb__device__descriptor_1a63c4b109725ce829fc81c5c9cad8c87a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__device__descriptor_1a63c4b109725ce829fc81c5c9cad8c87a" kindref="member">bDescriptorType</ref>;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="487" refid="structlibusb__device__descriptor_1af0682f293291db942b5d253092d472e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structlibusb__device__descriptor_1af0682f293291db942b5d253092d472e4" kindref="member">bcdUSB</ref>;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="490" refid="structlibusb__device__descriptor_1ab86c8f43e75d4d54fccbc199cfa9703b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__device__descriptor_1ab86c8f43e75d4d54fccbc199cfa9703b" kindref="member">bDeviceClass</ref>;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="494" refid="structlibusb__device__descriptor_1a9c3a91102d3d53d9414d0dda0191c5ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__device__descriptor_1a9c3a91102d3d53d9414d0dda0191c5ab" kindref="member">bDeviceSubClass</ref>;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="498" refid="structlibusb__device__descriptor_1a480a0b5345a2e59987e20fa7247c3f0e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__device__descriptor_1a480a0b5345a2e59987e20fa7247c3f0e" kindref="member">bDeviceProtocol</ref>;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="501" refid="structlibusb__device__descriptor_1a3b60170f077c9b26fc9f86e0cdb1d28a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__device__descriptor_1a3b60170f077c9b26fc9f86e0cdb1d28a" kindref="member">bMaxPacketSize0</ref>;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="504" refid="structlibusb__device__descriptor_1ad26c5e2fbd16ce3ee143f4bac5d49bda" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structlibusb__device__descriptor_1ad26c5e2fbd16ce3ee143f4bac5d49bda" kindref="member">idVendor</ref>;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="507" refid="structlibusb__device__descriptor_1a568d479fb0b76ea572a739c961fd3047" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structlibusb__device__descriptor_1a568d479fb0b76ea572a739c961fd3047" kindref="member">idProduct</ref>;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="510" refid="structlibusb__device__descriptor_1afb5e0fc6f0cfe51de900d35506fb9317" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structlibusb__device__descriptor_1afb5e0fc6f0cfe51de900d35506fb9317" kindref="member">bcdDevice</ref>;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="513" refid="structlibusb__device__descriptor_1ab9e9a064265f2833d1d3f216f15a487a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__device__descriptor_1ab9e9a064265f2833d1d3f216f15a487a" kindref="member">iManufacturer</ref>;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="516" refid="structlibusb__device__descriptor_1a20082f9e03f1cbffef3d9472a8dcfd64" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__device__descriptor_1a20082f9e03f1cbffef3d9472a8dcfd64" kindref="member">iProduct</ref>;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="519" refid="structlibusb__device__descriptor_1a327e8ede51268b38955ef035cf6de875" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__device__descriptor_1a327e8ede51268b38955ef035cf6de875" kindref="member">iSerialNumber</ref>;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="522" refid="structlibusb__device__descriptor_1a0f3f80cd931628a0531a815b59d067dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__device__descriptor_1a0f3f80cd931628a0531a815b59d067dd" kindref="member">bNumConfigurations</ref>;</highlight></codeline>
<codeline lineno="523"><highlight class="normal">};</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="530" refid="structlibusb__endpoint__descriptor" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlibusb__endpoint__descriptor" kindref="compound">libusb_endpoint_descriptor</ref><sp/>{</highlight></codeline>
<codeline lineno="532" refid="structlibusb__endpoint__descriptor_1aa47a5fa31c179e7cb92818c0572c18a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__endpoint__descriptor_1aa47a5fa31c179e7cb92818c0572c18a3" kindref="member">bLength</ref>;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="537" refid="structlibusb__endpoint__descriptor_1a609c257394a574af229293bddf26986e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__endpoint__descriptor_1a609c257394a574af229293bddf26986e" kindref="member">bDescriptorType</ref>;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="543" refid="structlibusb__endpoint__descriptor_1a111d087a09cbeded8e15eda9127e23d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__endpoint__descriptor_1a111d087a09cbeded8e15eda9127e23d2" kindref="member">bEndpointAddress</ref>;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="552" refid="structlibusb__endpoint__descriptor_1a932b84417c46467f9916ecf7b679160b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__endpoint__descriptor_1a932b84417c46467f9916ecf7b679160b" kindref="member">bmAttributes</ref>;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="555" refid="structlibusb__endpoint__descriptor_1ac1feafc3d7310b2c8ab360513bcfa7b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structlibusb__endpoint__descriptor_1ac1feafc3d7310b2c8ab360513bcfa7b4" kindref="member">wMaxPacketSize</ref>;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="558" refid="structlibusb__endpoint__descriptor_1a3194f3f04ebd860d59cbdb07d758f9d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__endpoint__descriptor_1a3194f3f04ebd860d59cbdb07d758f9d8" kindref="member">bInterval</ref>;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="562" refid="structlibusb__endpoint__descriptor_1a9176a6d206a48731244e33a89a2bea0b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__endpoint__descriptor_1a9176a6d206a48731244e33a89a2bea0b" kindref="member">bRefresh</ref>;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="565" refid="structlibusb__endpoint__descriptor_1ab8408ca33f4e135039b1900c6f50ce6d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__endpoint__descriptor_1ab8408ca33f4e135039b1900c6f50ce6d" kindref="member">bSynchAddress</ref>;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="569" refid="structlibusb__endpoint__descriptor_1a27a637679d4cd75fd6af5b8ea19a88d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structlibusb__endpoint__descriptor_1a27a637679d4cd75fd6af5b8ea19a88d6" kindref="member">extra</ref>;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="572" refid="structlibusb__endpoint__descriptor_1a0b34ea2919834df309eba8f2775491ae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structlibusb__endpoint__descriptor_1a0b34ea2919834df309eba8f2775491ae" kindref="member">extra_length</ref>;</highlight></codeline>
<codeline lineno="573"><highlight class="normal">};</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="580" refid="structlibusb__interface__descriptor" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlibusb__interface__descriptor" kindref="compound">libusb_interface_descriptor</ref><sp/>{</highlight></codeline>
<codeline lineno="582" refid="structlibusb__interface__descriptor_1a646b7bf875e5b927796d47e57c9182b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__interface__descriptor_1a646b7bf875e5b927796d47e57c9182b8" kindref="member">bLength</ref>;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="587" refid="structlibusb__interface__descriptor_1affe977ae83d3bbf07513d87ebfb6ed0e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__interface__descriptor_1affe977ae83d3bbf07513d87ebfb6ed0e" kindref="member">bDescriptorType</ref>;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="590" refid="structlibusb__interface__descriptor_1a75046f443d3330f590f3d3fb1f9df863" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__interface__descriptor_1a75046f443d3330f590f3d3fb1f9df863" kindref="member">bInterfaceNumber</ref>;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="593" refid="structlibusb__interface__descriptor_1a2c94bce217e8ecd5fd23728510e9c838" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__interface__descriptor_1a2c94bce217e8ecd5fd23728510e9c838" kindref="member">bAlternateSetting</ref>;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="597" refid="structlibusb__interface__descriptor_1a487bd2058bfbe749d370c6e7d3add20e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__interface__descriptor_1a487bd2058bfbe749d370c6e7d3add20e" kindref="member">bNumEndpoints</ref>;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="600" refid="structlibusb__interface__descriptor_1a19dcf80e6a5fedf3d3673630897ad649" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__interface__descriptor_1a19dcf80e6a5fedf3d3673630897ad649" kindref="member">bInterfaceClass</ref>;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="604" refid="structlibusb__interface__descriptor_1a0b9b890f84694a4e6a0103944e1247f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__interface__descriptor_1a0b9b890f84694a4e6a0103944e1247f4" kindref="member">bInterfaceSubClass</ref>;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="608" refid="structlibusb__interface__descriptor_1a5062bbb17fc76e6c3624ea7ca68d554c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__interface__descriptor_1a5062bbb17fc76e6c3624ea7ca68d554c" kindref="member">bInterfaceProtocol</ref>;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="611" refid="structlibusb__interface__descriptor_1a19227cc111c27e27c2c07430777e1ab8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__interface__descriptor_1a19227cc111c27e27c2c07430777e1ab8" kindref="member">iInterface</ref>;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="615" refid="structlibusb__interface__descriptor_1a42bd0c63b361cf6c0bda5ecdf73e1c75" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlibusb__endpoint__descriptor" kindref="compound">libusb_endpoint_descriptor</ref><sp/>*<ref refid="structlibusb__interface__descriptor_1a42bd0c63b361cf6c0bda5ecdf73e1c75" kindref="member">endpoint</ref>;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="619" refid="structlibusb__interface__descriptor_1aa1169e8c0b22a9928bbd51169609f31d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structlibusb__interface__descriptor_1aa1169e8c0b22a9928bbd51169609f31d" kindref="member">extra</ref>;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="622" refid="structlibusb__interface__descriptor_1ad77fa0b951a83d0c7eac28920367f200" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structlibusb__interface__descriptor_1ad77fa0b951a83d0c7eac28920367f200" kindref="member">extra_length</ref>;</highlight></codeline>
<codeline lineno="623"><highlight class="normal">};</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="628" refid="structlibusb__interface" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlibusb__interface" kindref="compound">libusb_interface</ref><sp/>{</highlight></codeline>
<codeline lineno="631" refid="structlibusb__interface_1a072dc48e34a98aeafbd23591ffe694ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlibusb__interface__descriptor" kindref="compound">libusb_interface_descriptor</ref><sp/>*<ref refid="structlibusb__interface_1a072dc48e34a98aeafbd23591ffe694ce" kindref="member">altsetting</ref>;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="634" refid="structlibusb__interface_1afc930be16a60980424f64a88b23c10e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structlibusb__interface_1afc930be16a60980424f64a88b23c10e9" kindref="member">num_altsetting</ref>;</highlight></codeline>
<codeline lineno="635"><highlight class="normal">};</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="642" refid="structlibusb__config__descriptor" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlibusb__config__descriptor" kindref="compound">libusb_config_descriptor</ref><sp/>{</highlight></codeline>
<codeline lineno="644" refid="structlibusb__config__descriptor_1a18ccd46a86328fd9c849e17ca8f01738" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__config__descriptor_1a18ccd46a86328fd9c849e17ca8f01738" kindref="member">bLength</ref>;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="649" refid="structlibusb__config__descriptor_1abc4f9a751c5b2ed968b045cb17528f74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__config__descriptor_1abc4f9a751c5b2ed968b045cb17528f74" kindref="member">bDescriptorType</ref>;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="652" refid="structlibusb__config__descriptor_1a819c160c66c1bd7b569399e6a6fc278f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structlibusb__config__descriptor_1a819c160c66c1bd7b569399e6a6fc278f" kindref="member">wTotalLength</ref>;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="655" refid="structlibusb__config__descriptor_1a2c89b2d0a9ec0440801b97a8f8145792" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__config__descriptor_1a2c89b2d0a9ec0440801b97a8f8145792" kindref="member">bNumInterfaces</ref>;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="658" refid="structlibusb__config__descriptor_1a04549d99d38080857e0256fcad8dcce7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__config__descriptor_1a04549d99d38080857e0256fcad8dcce7" kindref="member">bConfigurationValue</ref>;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="661" refid="structlibusb__config__descriptor_1a06dbb2e068b3999dd23954e63640d953" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__config__descriptor_1a06dbb2e068b3999dd23954e63640d953" kindref="member">iConfiguration</ref>;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="664" refid="structlibusb__config__descriptor_1adb65fe86ce28394110caad982c566525" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__config__descriptor_1adb65fe86ce28394110caad982c566525" kindref="member">bmAttributes</ref>;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="669" refid="structlibusb__config__descriptor_1a527518147a0c7321a195f2d8dac2ea01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__config__descriptor_1a527518147a0c7321a195f2d8dac2ea01" kindref="member">MaxPower</ref>;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="673" refid="structlibusb__config__descriptor_1afe04b70611b0ac83866639103d27df76" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlibusb__interface" kindref="compound">libusb_interface</ref><sp/>*<ref refid="structlibusb__config__descriptor_1afe04b70611b0ac83866639103d27df76" kindref="member">interface</ref>;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="677" refid="structlibusb__config__descriptor_1acc982e6c82f7183dfa41076d28d991f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structlibusb__config__descriptor_1acc982e6c82f7183dfa41076d28d991f7" kindref="member">extra</ref>;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="680" refid="structlibusb__config__descriptor_1a18439e83e8f46606a13d70c00a48a9d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structlibusb__config__descriptor_1a18439e83e8f46606a13d70c00a48a9d9" kindref="member">extra_length</ref>;</highlight></codeline>
<codeline lineno="681"><highlight class="normal">};</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="689" refid="structlibusb__ss__endpoint__companion__descriptor" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlibusb__ss__endpoint__companion__descriptor" kindref="compound">libusb_ss_endpoint_companion_descriptor</ref><sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="692" refid="structlibusb__ss__endpoint__companion__descriptor_1a576f037f393bf45926a2d45a80c3c3ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__ss__endpoint__companion__descriptor_1a576f037f393bf45926a2d45a80c3c3ce" kindref="member">bLength</ref>;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="697" refid="structlibusb__ss__endpoint__companion__descriptor_1a85344cb4f4d8d03014d9cc2cf90c748f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__ss__endpoint__companion__descriptor_1a85344cb4f4d8d03014d9cc2cf90c748f" kindref="member">bDescriptorType</ref>;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="702" refid="structlibusb__ss__endpoint__companion__descriptor_1a85b999ffaff20e9e1518597339e0a7dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__ss__endpoint__companion__descriptor_1a85b999ffaff20e9e1518597339e0a7dc" kindref="member">bMaxBurst</ref>;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="708" refid="structlibusb__ss__endpoint__companion__descriptor_1aa7097b478f5e46e8cdd160fb4aaccc1f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__ss__endpoint__companion__descriptor_1aa7097b478f5e46e8cdd160fb4aaccc1f" kindref="member">bmAttributes</ref>;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="712" refid="structlibusb__ss__endpoint__companion__descriptor_1a13605afcfe00291bc86ebb415226ece6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structlibusb__ss__endpoint__companion__descriptor_1a13605afcfe00291bc86ebb415226ece6" kindref="member">wBytesPerInterval</ref>;</highlight></codeline>
<codeline lineno="713"><highlight class="normal">};</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="720" refid="structlibusb__bos__dev__capability__descriptor" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlibusb__bos__dev__capability__descriptor" kindref="compound">libusb_bos_dev_capability_descriptor</ref><sp/>{</highlight></codeline>
<codeline lineno="722" refid="structlibusb__bos__dev__capability__descriptor_1a02cfb0bb72c092b12d76ca4676506b10" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structlibusb__bos__dev__capability__descriptor_1a02cfb0bb72c092b12d76ca4676506b10" kindref="member">bLength</ref>;</highlight></codeline>
<codeline lineno="726" refid="structlibusb__bos__dev__capability__descriptor_1a3d86cfc459f933fd825366279671e263" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structlibusb__bos__dev__capability__descriptor_1a3d86cfc459f933fd825366279671e263" kindref="member">bDescriptorType</ref>;</highlight></codeline>
<codeline lineno="728" refid="structlibusb__bos__dev__capability__descriptor_1a8e0b85cb554e5227a3ef860c1c97cdb0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structlibusb__bos__dev__capability__descriptor_1a8e0b85cb554e5227a3ef860c1c97cdb0" kindref="member">bDevCapabilityType</ref>;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>dev_capability_data</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__STDC_VERSION__)<sp/>&amp;&amp;<sp/>(__STDC_VERSION__<sp/>&gt;=<sp/>199901L)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>[]<sp/></highlight><highlight class="comment">/*<sp/>valid<sp/>C99<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>[0]<sp/></highlight><highlight class="comment">/*<sp/>non-standard,<sp/>but<sp/>usually<sp/>working<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736" refid="structlibusb__bos__dev__capability__descriptor_1af29ebe54a2123fee4c1cb48bea3d2199" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="737"><highlight class="normal">};</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="744" refid="structlibusb__bos__descriptor" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlibusb__bos__descriptor" kindref="compound">libusb_bos_descriptor</ref><sp/>{</highlight></codeline>
<codeline lineno="746" refid="structlibusb__bos__descriptor_1ae0684cd2fd0a519c711b2c5169c6a54e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__bos__descriptor_1ae0684cd2fd0a519c711b2c5169c6a54e" kindref="member">bLength</ref>;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="751" refid="structlibusb__bos__descriptor_1ae6dcffa81a4885e1cf677656f7ae9ff7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__bos__descriptor_1ae6dcffa81a4885e1cf677656f7ae9ff7" kindref="member">bDescriptorType</ref>;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="754" refid="structlibusb__bos__descriptor_1a02490a8cfd9d1b53ef8f19190a2a1a2c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structlibusb__bos__descriptor_1a02490a8cfd9d1b53ef8f19190a2a1a2c" kindref="member">wTotalLength</ref>;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="758" refid="structlibusb__bos__descriptor_1aba92a4ee25d13195f80651a79add48d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__bos__descriptor_1aba92a4ee25d13195f80651a79add48d6" kindref="member">bNumDeviceCaps</ref>;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="761" refid="structlibusb__bos__descriptor_1ab96881b56bdbfd53fb850c4db2fac4fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlibusb__bos__dev__capability__descriptor" kindref="compound">libusb_bos_dev_capability_descriptor</ref><sp/>*dev_capability</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__STDC_VERSION__)<sp/>&amp;&amp;<sp/>(__STDC_VERSION__<sp/>&gt;=<sp/>199901L)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>[]<sp/></highlight><highlight class="comment">/*<sp/>valid<sp/>C99<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>[0]<sp/></highlight><highlight class="comment">/*<sp/>non-standard,<sp/>but<sp/>usually<sp/>working<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="768"><highlight class="normal">};</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="775" refid="structlibusb__usb__2__0__extension__descriptor" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlibusb__usb__2__0__extension__descriptor" kindref="compound">libusb_usb_2_0_extension_descriptor</ref><sp/>{</highlight></codeline>
<codeline lineno="777" refid="structlibusb__usb__2__0__extension__descriptor_1a11b9f042687aec219e0e777530df0664" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__usb__2__0__extension__descriptor_1a11b9f042687aec219e0e777530df0664" kindref="member">bLength</ref>;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="782" refid="structlibusb__usb__2__0__extension__descriptor_1ab3f73eeaabab1e8db659bcb6b2cb59c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__usb__2__0__extension__descriptor_1ab3f73eeaabab1e8db659bcb6b2cb59c5" kindref="member">bDescriptorType</ref>;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="787" refid="structlibusb__usb__2__0__extension__descriptor_1aa6a3e671c23b77eef252f17ce865734e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__usb__2__0__extension__descriptor_1aa6a3e671c23b77eef252f17ce865734e" kindref="member">bDevCapabilityType</ref>;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="793" refid="structlibusb__usb__2__0__extension__descriptor_1ab22e1857d38c9205aaecca52b2e20ae0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><ref refid="structlibusb__usb__2__0__extension__descriptor_1ab22e1857d38c9205aaecca52b2e20ae0" kindref="member">bmAttributes</ref>;</highlight></codeline>
<codeline lineno="794"><highlight class="normal">};</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="801" refid="structlibusb__ss__usb__device__capability__descriptor" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlibusb__ss__usb__device__capability__descriptor" kindref="compound">libusb_ss_usb_device_capability_descriptor</ref><sp/>{</highlight></codeline>
<codeline lineno="803" refid="structlibusb__ss__usb__device__capability__descriptor_1a64379238b9225de97b67db770c3c15e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__ss__usb__device__capability__descriptor_1a64379238b9225de97b67db770c3c15e9" kindref="member">bLength</ref>;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="808" refid="structlibusb__ss__usb__device__capability__descriptor_1ae8a297e3fb16cb5199df99816d48321a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__ss__usb__device__capability__descriptor_1ae8a297e3fb16cb5199df99816d48321a" kindref="member">bDescriptorType</ref>;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="813" refid="structlibusb__ss__usb__device__capability__descriptor_1a25c10ea11b37e6adc0aca8c6701bcbff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__ss__usb__device__capability__descriptor_1a25c10ea11b37e6adc0aca8c6701bcbff" kindref="member">bDevCapabilityType</ref>;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="819" refid="structlibusb__ss__usb__device__capability__descriptor_1ad387790c14d8d6eefe6aa1b4a55006bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__ss__usb__device__capability__descriptor_1ad387790c14d8d6eefe6aa1b4a55006bf" kindref="member">bmAttributes</ref>;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="823" refid="structlibusb__ss__usb__device__capability__descriptor_1a391eb2350276e0902776831d41b23017" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structlibusb__ss__usb__device__capability__descriptor_1a391eb2350276e0902776831d41b23017" kindref="member">wSpeedSupported</ref>;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="829" refid="structlibusb__ss__usb__device__capability__descriptor_1a522e3ade3bfd1139c9e8af3876d0a843" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__ss__usb__device__capability__descriptor_1a522e3ade3bfd1139c9e8af3876d0a843" kindref="member">bFunctionalitySupport</ref>;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="832" refid="structlibusb__ss__usb__device__capability__descriptor_1ad9f0f87cfbf810e691580d3e702ddf3a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__ss__usb__device__capability__descriptor_1ad9f0f87cfbf810e691580d3e702ddf3a" kindref="member">bU1DevExitLat</ref>;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="835" refid="structlibusb__ss__usb__device__capability__descriptor_1a530ae59b4e6c8e3b23f6c49f59597994" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structlibusb__ss__usb__device__capability__descriptor_1a530ae59b4e6c8e3b23f6c49f59597994" kindref="member">bU2DevExitLat</ref>;</highlight></codeline>
<codeline lineno="836"><highlight class="normal">};</highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight></codeline>
<codeline lineno="843" refid="structlibusb__container__id__descriptor" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlibusb__container__id__descriptor" kindref="compound">libusb_container_id_descriptor</ref><sp/>{</highlight></codeline>
<codeline lineno="845" refid="structlibusb__container__id__descriptor_1aa95ab98f88151e5d05f0c6d3d983abd8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__container__id__descriptor_1aa95ab98f88151e5d05f0c6d3d983abd8" kindref="member">bLength</ref>;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="850" refid="structlibusb__container__id__descriptor_1a4773f74ef9411441e59e9b31bc61c44b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__container__id__descriptor_1a4773f74ef9411441e59e9b31bc61c44b" kindref="member">bDescriptorType</ref>;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="855" refid="structlibusb__container__id__descriptor_1a9c6771495f9010d2cceb86f9738053ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__container__id__descriptor_1a9c6771495f9010d2cceb86f9738053ac" kindref="member">bDevCapabilityType</ref>;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="858" refid="structlibusb__container__id__descriptor_1ae9c428c25e90439904e97f697f32545b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structlibusb__container__id__descriptor_1ae9c428c25e90439904e97f697f32545b" kindref="member">bReserved</ref>;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="861" refid="structlibusb__container__id__descriptor_1a0c74613e2be1d8da0e349024a8b73621" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/>ContainerID[16];</highlight></codeline>
<codeline lineno="862"><highlight class="normal">};</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="866" refid="structlibusb__control__setup" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlibusb__control__setup" kindref="compound">libusb_control_setup</ref><sp/>{</highlight></codeline>
<codeline lineno="872" refid="structlibusb__control__setup_1a39b148c231d675492ccd2383196926bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__control__setup_1a39b148c231d675492ccd2383196926bf" kindref="member">bmRequestType</ref>;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="879" refid="structlibusb__control__setup_1a1b80a28b8d4e8586fc54358194e70087" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structlibusb__control__setup_1a1b80a28b8d4e8586fc54358194e70087" kindref="member">bRequest</ref>;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="882" refid="structlibusb__control__setup_1abbb6daa01fe4b6a05dc43492e4e53a7d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structlibusb__control__setup_1abbb6daa01fe4b6a05dc43492e4e53a7d" kindref="member">wValue</ref>;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="886" refid="structlibusb__control__setup_1a70c2ae456344b200a19d434ace85ae2b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structlibusb__control__setup_1a70c2ae456344b200a19d434ace85ae2b" kindref="member">wIndex</ref>;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="889" refid="structlibusb__control__setup_1a3c442c64fd7619b43b782367235766cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structlibusb__control__setup_1a3c442c64fd7619b43b782367235766cc" kindref="member">wLength</ref>;</highlight></codeline>
<codeline lineno="890"><highlight class="normal">};</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="892" refid="libusb_8h_1af39dc5e7622e8559df7f1d3da5478717" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIBUSB_CONTROL_SETUP_SIZE<sp/>(sizeof(struct<sp/>libusb_control_setup))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>libusbx<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref>;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref>;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref>;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">libusb_hotplug_callback;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="904" refid="structlibusb__version" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlibusb__version" kindref="compound">libusb_version</ref><sp/>{</highlight></codeline>
<codeline lineno="906" refid="structlibusb__version_1a7f80ed3e95566b639fa09380e94f8d59" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="structlibusb__version_1a7f80ed3e95566b639fa09380e94f8d59" kindref="member">major</ref>;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="909" refid="structlibusb__version_1ac886b798704bb9ca2b6cd3ae0234591f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="structlibusb__version_1ac886b798704bb9ca2b6cd3ae0234591f" kindref="member">minor</ref>;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="912" refid="structlibusb__version_1a6a73a21564237c1fa0e6e5b038e98605" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="structlibusb__version_1a6a73a21564237c1fa0e6e5b038e98605" kindref="member">micro</ref>;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="915" refid="structlibusb__version_1afbe4cf431bea706294667e333878508c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="structlibusb__version_1afbe4cf431bea706294667e333878508c" kindref="member">nano</ref>;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight></codeline>
<codeline lineno="918" refid="structlibusb__version_1a99937642131c0559025bad92e7f51f27" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structlibusb__version_1a99937642131c0559025bad92e7f51f27" kindref="member">rc</ref>;</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
<codeline lineno="921" refid="structlibusb__version_1af42453a3421515fa2db3fdf30f2367c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="structlibusb__version_1af42453a3421515fa2db3fdf30f2367c3" kindref="member">describe</ref>;</highlight></codeline>
<codeline lineno="922"><highlight class="normal">};</highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="941" refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref><sp/><ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref>;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight></codeline>
<codeline lineno="958" refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref><sp/><ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref>;</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight></codeline>
<codeline lineno="969" refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref><sp/><ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref>;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight></codeline>
<codeline lineno="974" refid="libusb_8h_1a2959abf1184f87b2ce06fe90db6ce614" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1a2959abf1184f87b2ce06fe90db6ce614" kindref="member">libusb_speed</ref><sp/>{</highlight></codeline>
<codeline lineno="976" refid="libusb_8h_1a2959abf1184f87b2ce06fe90db6ce614ace31df1e97e9a66146ac83dcab1e6cfb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a2959abf1184f87b2ce06fe90db6ce614ace31df1e97e9a66146ac83dcab1e6cfb" kindref="member">LIBUSB_SPEED_UNKNOWN</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="979" refid="libusb_8h_1a2959abf1184f87b2ce06fe90db6ce614a6017f9ac2509cd523b51c1b72ad6991b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a2959abf1184f87b2ce06fe90db6ce614a6017f9ac2509cd523b51c1b72ad6991b" kindref="member">LIBUSB_SPEED_LOW</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight></codeline>
<codeline lineno="982" refid="libusb_8h_1a2959abf1184f87b2ce06fe90db6ce614a0011bead7a48b873808795d8495b4d9e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a2959abf1184f87b2ce06fe90db6ce614a0011bead7a48b873808795d8495b4d9e" kindref="member">LIBUSB_SPEED_FULL</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight></codeline>
<codeline lineno="985" refid="libusb_8h_1a2959abf1184f87b2ce06fe90db6ce614a27bc0b9fe76f8ddf524f3d2ece0eefac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a2959abf1184f87b2ce06fe90db6ce614a27bc0b9fe76f8ddf524f3d2ece0eefac" kindref="member">LIBUSB_SPEED_HIGH</ref><sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight></codeline>
<codeline lineno="988" refid="libusb_8h_1a2959abf1184f87b2ce06fe90db6ce614ab8c71e1409cd555ae05937b4db9946a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a2959abf1184f87b2ce06fe90db6ce614ab8c71e1409cd555ae05937b4db9946a2" kindref="member">LIBUSB_SPEED_SUPER</ref><sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="989"><highlight class="normal">};</highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight></codeline>
<codeline lineno="995" refid="libusb_8h_1a1454797ecc0de4d084c1619c420014f6" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1a1454797ecc0de4d084c1619c420014f6" kindref="member">libusb_supported_speed</ref><sp/>{</highlight></codeline>
<codeline lineno="997" refid="libusb_8h_1a1454797ecc0de4d084c1619c420014f6aa7707c4cef77f4be8aceef859fad2087" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a1454797ecc0de4d084c1619c420014f6aa7707c4cef77f4be8aceef859fad2087" kindref="member">LIBUSB_LOW_SPEED_OPERATION</ref><sp/><sp/><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000" refid="libusb_8h_1a1454797ecc0de4d084c1619c420014f6adbebc659daf53947527259172f81b41a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a1454797ecc0de4d084c1619c420014f6adbebc659daf53947527259172f81b41a" kindref="member">LIBUSB_FULL_SPEED_OPERATION</ref><sp/><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight></codeline>
<codeline lineno="1003" refid="libusb_8h_1a1454797ecc0de4d084c1619c420014f6a2db8b2bb845a23ad1083521ff5b6e9a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a1454797ecc0de4d084c1619c420014f6a2db8b2bb845a23ad1083521ff5b6e9a8" kindref="member">LIBUSB_HIGH_SPEED_OPERATION</ref><sp/><sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1006" refid="libusb_8h_1a1454797ecc0de4d084c1619c420014f6accd7b9361912b76e40348dc30e6dc7f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a1454797ecc0de4d084c1619c420014f6accd7b9361912b76e40348dc30e6dc7f4" kindref="member">LIBUSB_SUPER_SPEED_OPERATION</ref><sp/>=<sp/>8,</highlight></codeline>
<codeline lineno="1007"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight></codeline>
<codeline lineno="1014" refid="libusb_8h_1acb8cfa928bffdd0066a3dd2e6aba0558" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1acb8cfa928bffdd0066a3dd2e6aba0558" kindref="member">libusb_usb_2_0_extension_attributes</ref><sp/>{</highlight></codeline>
<codeline lineno="1016" refid="libusb_8h_1acb8cfa928bffdd0066a3dd2e6aba0558a02f60b018f4bc01e8813da813779b792" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1acb8cfa928bffdd0066a3dd2e6aba0558a02f60b018f4bc01e8813da813779b792" kindref="member">LIBUSB_BM_LPM_SUPPORT</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="1017"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight></codeline>
<codeline lineno="1024" refid="libusb_8h_1aad5a5399176a35a64164dafad7fe4fcd" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aad5a5399176a35a64164dafad7fe4fcd" kindref="member">libusb_ss_usb_device_capability_attributes</ref><sp/>{</highlight></codeline>
<codeline lineno="1026" refid="libusb_8h_1aad5a5399176a35a64164dafad7fe4fcda5987a17b394338df71c1e04c5c75bc21" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1aad5a5399176a35a64164dafad7fe4fcda5987a17b394338df71c1e04c5c75bc21" kindref="member">LIBUSB_BM_LTM_SUPPORT</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="1027"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight></codeline>
<codeline lineno="1032" refid="libusb_8h_1a6ccabbf3b3728ae69608ba83bba4e64c" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1a6ccabbf3b3728ae69608ba83bba4e64c" kindref="member">libusb_bos_type</ref><sp/>{</highlight></codeline>
<codeline lineno="1034" refid="libusb_8h_1a6ccabbf3b3728ae69608ba83bba4e64cac05dcfcd0a5c0dbaef90b1d09e4b5505" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a6ccabbf3b3728ae69608ba83bba4e64cac05dcfcd0a5c0dbaef90b1d09e4b5505" kindref="member">LIBUSB_BT_WIRELESS_USB_DEVICE_CAPABILITY</ref><sp/><sp/><sp/><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight></codeline>
<codeline lineno="1037" refid="libusb_8h_1a6ccabbf3b3728ae69608ba83bba4e64ca243b090db95a0fdf7104fbf581724b86" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a6ccabbf3b3728ae69608ba83bba4e64ca243b090db95a0fdf7104fbf581724b86" kindref="member">LIBUSB_BT_USB_2_0_EXTENSION</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1040" refid="libusb_8h_1a6ccabbf3b3728ae69608ba83bba4e64ca2f1ab0d2d1e14d4942c079749b1b6c85" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a6ccabbf3b3728ae69608ba83bba4e64ca2f1ab0d2d1e14d4942c079749b1b6c85" kindref="member">LIBUSB_BT_SS_USB_DEVICE_CAPABILITY</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight></codeline>
<codeline lineno="1043" refid="libusb_8h_1a6ccabbf3b3728ae69608ba83bba4e64cac3c00e8861b4b596ea1f53c505809e5e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a6ccabbf3b3728ae69608ba83bba4e64cac3c00e8861b4b596ea1f53c505809e5e" kindref="member">LIBUSB_BT_CONTAINER_ID</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="1044"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1053" refid="libusb_8h_1ab2323aa0f04bc22038e7e1740b2f29ef" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1ab2323aa0f04bc22038e7e1740b2f29ef" kindref="member">libusb_error</ref><sp/>{</highlight></codeline>
<codeline lineno="1055" refid="libusb_8h_1ab2323aa0f04bc22038e7e1740b2f29efa576d8d63f6e24b2e57cb2ca63b304f15" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1ab2323aa0f04bc22038e7e1740b2f29efa576d8d63f6e24b2e57cb2ca63b304f15" kindref="member">LIBUSB_SUCCESS</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight></codeline>
<codeline lineno="1058" refid="libusb_8h_1ab2323aa0f04bc22038e7e1740b2f29efa790feab8b45d8c323038f4d7d15eceec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1ab2323aa0f04bc22038e7e1740b2f29efa790feab8b45d8c323038f4d7d15eceec" kindref="member">LIBUSB_ERROR_IO</ref><sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight></codeline>
<codeline lineno="1061" refid="libusb_8h_1ab2323aa0f04bc22038e7e1740b2f29efa680e4bf39b66a36be3182be3ebf58062" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1ab2323aa0f04bc22038e7e1740b2f29efa680e4bf39b66a36be3182be3ebf58062" kindref="member">LIBUSB_ERROR_INVALID_PARAM</ref><sp/>=<sp/>-2,</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight></codeline>
<codeline lineno="1064" refid="libusb_8h_1ab2323aa0f04bc22038e7e1740b2f29efa131f3c2f6f2bb40bc6fb60ccb6f3152f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1ab2323aa0f04bc22038e7e1740b2f29efa131f3c2f6f2bb40bc6fb60ccb6f3152f" kindref="member">LIBUSB_ERROR_ACCESS</ref><sp/>=<sp/>-3,</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight></codeline>
<codeline lineno="1067" refid="libusb_8h_1ab2323aa0f04bc22038e7e1740b2f29efaf8d98f464314a8e202507a0e5c67336f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1ab2323aa0f04bc22038e7e1740b2f29efaf8d98f464314a8e202507a0e5c67336f" kindref="member">LIBUSB_ERROR_NO_DEVICE</ref><sp/>=<sp/>-4,</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight></codeline>
<codeline lineno="1070" refid="libusb_8h_1ab2323aa0f04bc22038e7e1740b2f29efa28214194dc4399e51777408b2c27f03f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1ab2323aa0f04bc22038e7e1740b2f29efa28214194dc4399e51777408b2c27f03f" kindref="member">LIBUSB_ERROR_NOT_FOUND</ref><sp/>=<sp/>-5,</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight></codeline>
<codeline lineno="1073" refid="libusb_8h_1ab2323aa0f04bc22038e7e1740b2f29efa34ede1140a8a16022f730ac80875ed3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1ab2323aa0f04bc22038e7e1740b2f29efa34ede1140a8a16022f730ac80875ed3b" kindref="member">LIBUSB_ERROR_BUSY</ref><sp/>=<sp/>-6,</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1076" refid="libusb_8h_1ab2323aa0f04bc22038e7e1740b2f29efa9b000ac2e6dc4ac864c59579dd08c8bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1ab2323aa0f04bc22038e7e1740b2f29efa9b000ac2e6dc4ac864c59579dd08c8bd" kindref="member">LIBUSB_ERROR_TIMEOUT</ref><sp/>=<sp/>-7,</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1079" refid="libusb_8h_1ab2323aa0f04bc22038e7e1740b2f29efaf00ae4b8772fda64263ae6e4d6569af0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1ab2323aa0f04bc22038e7e1740b2f29efaf00ae4b8772fda64263ae6e4d6569af0" kindref="member">LIBUSB_ERROR_OVERFLOW</ref><sp/>=<sp/>-8,</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight></codeline>
<codeline lineno="1082" refid="libusb_8h_1ab2323aa0f04bc22038e7e1740b2f29efa1406e98370900156484f5fe609270837" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1ab2323aa0f04bc22038e7e1740b2f29efa1406e98370900156484f5fe609270837" kindref="member">LIBUSB_ERROR_PIPE</ref><sp/>=<sp/>-9,</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight></codeline>
<codeline lineno="1085" refid="libusb_8h_1ab2323aa0f04bc22038e7e1740b2f29efa39c9284a18fb3277696d84d65f50dbea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1ab2323aa0f04bc22038e7e1740b2f29efa39c9284a18fb3277696d84d65f50dbea" kindref="member">LIBUSB_ERROR_INTERRUPTED</ref><sp/>=<sp/>-10,</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight></codeline>
<codeline lineno="1088" refid="libusb_8h_1ab2323aa0f04bc22038e7e1740b2f29efaff885c8ef4522f22f6673059c7b9edec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1ab2323aa0f04bc22038e7e1740b2f29efaff885c8ef4522f22f6673059c7b9edec" kindref="member">LIBUSB_ERROR_NO_MEM</ref><sp/>=<sp/>-11,</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight></codeline>
<codeline lineno="1091" refid="libusb_8h_1ab2323aa0f04bc22038e7e1740b2f29efa01b43115484f435627be755d5dc9509b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1ab2323aa0f04bc22038e7e1740b2f29efa01b43115484f435627be755d5dc9509b" kindref="member">LIBUSB_ERROR_NOT_SUPPORTED</ref><sp/>=<sp/>-12,</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NB:<sp/>Remember<sp/>to<sp/>update<sp/>LIBUSB_ERROR_COUNT<sp/>below<sp/>as<sp/>well<sp/>as<sp/>the</highlight></codeline>
<codeline lineno="1094"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message<sp/>strings<sp/>in<sp/>strerror.c<sp/>when<sp/>adding<sp/>new<sp/>error<sp/>codes<sp/>here.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight></codeline>
<codeline lineno="1097" refid="libusb_8h_1ab2323aa0f04bc22038e7e1740b2f29efa9705eb232d1a5e249926d4e76599672e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1ab2323aa0f04bc22038e7e1740b2f29efa9705eb232d1a5e249926d4e76599672e" kindref="member">LIBUSB_ERROR_OTHER</ref><sp/>=<sp/>-99,</highlight></codeline>
<codeline lineno="1098"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Total<sp/>number<sp/>of<sp/>error<sp/>codes<sp/>in<sp/>enum<sp/>libusb_error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1101" refid="libusb_8h_1a784c39b6aab35cf2b21ee8f28a77edb0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIBUSB_ERROR_COUNT<sp/>14</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105" refid="libusb_8h_1a9fcb2aa23d342060ebda1d0cf7478856" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1a9fcb2aa23d342060ebda1d0cf7478856" kindref="member">libusb_transfer_status</ref><sp/>{</highlight></codeline>
<codeline lineno="1108" refid="libusb_8h_1a9fcb2aa23d342060ebda1d0cf7478856a4595f6532aab12352a58a0fd4ce48363" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a9fcb2aa23d342060ebda1d0cf7478856a4595f6532aab12352a58a0fd4ce48363" kindref="member">LIBUSB_TRANSFER_COMPLETED</ref>,</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1111" refid="libusb_8h_1a9fcb2aa23d342060ebda1d0cf7478856aa8852ed719d03c2a3cc6f0312d919398" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a9fcb2aa23d342060ebda1d0cf7478856aa8852ed719d03c2a3cc6f0312d919398" kindref="member">LIBUSB_TRANSFER_ERROR</ref>,</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight></codeline>
<codeline lineno="1114" refid="libusb_8h_1a9fcb2aa23d342060ebda1d0cf7478856ac2b7626d7b51cb980f83933b6ada1ddf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a9fcb2aa23d342060ebda1d0cf7478856ac2b7626d7b51cb980f83933b6ada1ddf" kindref="member">LIBUSB_TRANSFER_TIMED_OUT</ref>,</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight></codeline>
<codeline lineno="1117" refid="libusb_8h_1a9fcb2aa23d342060ebda1d0cf7478856a8af1f19e46cccafdcf3feadce47e880b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a9fcb2aa23d342060ebda1d0cf7478856a8af1f19e46cccafdcf3feadce47e880b" kindref="member">LIBUSB_TRANSFER_CANCELLED</ref>,</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight></codeline>
<codeline lineno="1121" refid="libusb_8h_1a9fcb2aa23d342060ebda1d0cf7478856a23cdfd929f5fe82cca9654f8075eeebb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a9fcb2aa23d342060ebda1d0cf7478856a23cdfd929f5fe82cca9654f8075eeebb" kindref="member">LIBUSB_TRANSFER_STALL</ref>,</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight></codeline>
<codeline lineno="1124" refid="libusb_8h_1a9fcb2aa23d342060ebda1d0cf7478856ab7dcb24f313ace407e0c070d6b2c5f13" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a9fcb2aa23d342060ebda1d0cf7478856ab7dcb24f313ace407e0c070d6b2c5f13" kindref="member">LIBUSB_TRANSFER_NO_DEVICE</ref>,</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight></codeline>
<codeline lineno="1127" refid="libusb_8h_1a9fcb2aa23d342060ebda1d0cf7478856ab1b9cbcb1de27a8fbeceb3427fb2fb14" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a9fcb2aa23d342060ebda1d0cf7478856ab1b9cbcb1de27a8fbeceb3427fb2fb14" kindref="member">LIBUSB_TRANSFER_OVERFLOW</ref>,</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NB!<sp/>Remember<sp/>to<sp/>update<sp/>libusb_error_name()</highlight></codeline>
<codeline lineno="1130"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>when<sp/>adding<sp/>new<sp/>status<sp/>codes<sp/>here.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight></codeline>
<codeline lineno="1135" refid="libusb_8h_1a1fb47dd0f7c209b60a3609ff0c03d56d" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1a1fb47dd0f7c209b60a3609ff0c03d56d" kindref="member">libusb_transfer_flags</ref><sp/>{</highlight></codeline>
<codeline lineno="1137" refid="libusb_8h_1a1fb47dd0f7c209b60a3609ff0c03d56dae4c0697c266819c51c1734b3456e7276" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a1fb47dd0f7c209b60a3609ff0c03d56dae4c0697c266819c51c1734b3456e7276" kindref="member">LIBUSB_TRANSFER_SHORT_NOT_OK</ref><sp/>=<sp/>1&lt;&lt;0,</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight></codeline>
<codeline lineno="1140" refid="libusb_8h_1a1fb47dd0f7c209b60a3609ff0c03d56dae993a26f495ac9949118e23eafa19e86" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a1fb47dd0f7c209b60a3609ff0c03d56dae993a26f495ac9949118e23eafa19e86" kindref="member">LIBUSB_TRANSFER_FREE_BUFFER</ref><sp/>=<sp/>1&lt;&lt;1,</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight></codeline>
<codeline lineno="1146" refid="libusb_8h_1a1fb47dd0f7c209b60a3609ff0c03d56dacf3f064997b283a14097c9f4d6f8ccc1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a1fb47dd0f7c209b60a3609ff0c03d56dacf3f064997b283a14097c9f4d6f8ccc1" kindref="member">LIBUSB_TRANSFER_FREE_TRANSFER</ref><sp/>=<sp/>1&lt;&lt;2,</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight></codeline>
<codeline lineno="1171" refid="libusb_8h_1a1fb47dd0f7c209b60a3609ff0c03d56da26b66334b6ec0537c49841ca623d901f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a1fb47dd0f7c209b60a3609ff0c03d56da26b66334b6ec0537c49841ca623d901f" kindref="member">LIBUSB_TRANSFER_ADD_ZERO_PACKET</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>3,</highlight></codeline>
<codeline lineno="1172"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight></codeline>
<codeline lineno="1176" refid="structlibusb__iso__packet__descriptor" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlibusb__iso__packet__descriptor" kindref="compound">libusb_iso_packet_descriptor</ref><sp/>{</highlight></codeline>
<codeline lineno="1178" refid="structlibusb__iso__packet__descriptor_1a374d36e24869c8b07bf8eb1a18fa10ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structlibusb__iso__packet__descriptor_1a374d36e24869c8b07bf8eb1a18fa10ad" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight></codeline>
<codeline lineno="1181" refid="structlibusb__iso__packet__descriptor_1a03fa4f4eaf8a8b4e5c05931809581a32" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structlibusb__iso__packet__descriptor_1a03fa4f4eaf8a8b4e5c05931809581a32" kindref="member">actual_length</ref>;</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight></codeline>
<codeline lineno="1184" refid="structlibusb__iso__packet__descriptor_1aab21ee2a5835a0e53d7ac5844ee34371" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1a9fcb2aa23d342060ebda1d0cf7478856" kindref="member">libusb_transfer_status</ref><sp/>status;</highlight></codeline>
<codeline lineno="1185"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlibusb__transfer" kindref="compound">libusb_transfer</ref>;</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref><sp/>(<ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/>*libusb_transfer_cb_fn)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlibusb__transfer" kindref="compound">libusb_transfer</ref><sp/>*transfer);</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight></codeline>
<codeline lineno="1206" refid="structlibusb__transfer" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlibusb__transfer" kindref="compound">libusb_transfer</ref><sp/>{</highlight></codeline>
<codeline lineno="1208" refid="structlibusb__transfer_1adaaf06aeb5ab2a8819e75310ec253f7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref><sp/>*<ref refid="structlibusb__transfer_1adaaf06aeb5ab2a8819e75310ec253f7a" kindref="member">dev_handle</ref>;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211" refid="structlibusb__transfer_1ae26c063df30c2e29835212aad98c6e06" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structlibusb__transfer_1ae26c063df30c2e29835212aad98c6e06" kindref="member">flags</ref>;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight></codeline>
<codeline lineno="1214" refid="structlibusb__transfer_1a0fcfd057f53b0e1bff6f1567761c231a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structlibusb__transfer_1a0fcfd057f53b0e1bff6f1567761c231a" kindref="member">endpoint</ref>;</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight></codeline>
<codeline lineno="1217" refid="structlibusb__transfer_1a7c9fa575986fe9f23bbecb26b766dff1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structlibusb__transfer_1a7c9fa575986fe9f23bbecb26b766dff1" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight></codeline>
<codeline lineno="1221" refid="structlibusb__transfer_1a9a12af15ca5b482f5dcaebd26a848cbb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structlibusb__transfer_1a9a12af15ca5b482f5dcaebd26a848cbb" kindref="member">timeout</ref>;</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight></codeline>
<codeline lineno="1230" refid="structlibusb__transfer_1a64b2e70e76d52a7cd23daa3cd4fb397e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1a9fcb2aa23d342060ebda1d0cf7478856" kindref="member">libusb_transfer_status</ref><sp/>status;</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight></codeline>
<codeline lineno="1233" refid="structlibusb__transfer_1a68c023e1f40b50aa8604a2495b6a391e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structlibusb__transfer_1a68c023e1f40b50aa8604a2495b6a391e" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight></codeline>
<codeline lineno="1238" refid="structlibusb__transfer_1a7e858f07c48a271a62209d11376ae607" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structlibusb__transfer_1a7e858f07c48a271a62209d11376ae607" kindref="member">actual_length</ref>;</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight></codeline>
<codeline lineno="1242" refid="structlibusb__transfer_1a69c6df011ec23ff3e481cc98bfff0623" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>libusb_transfer_cb_fn<sp/><ref refid="structlibusb__transfer_1a69c6df011ec23ff3e481cc98bfff0623" kindref="member">callback</ref>;</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight></codeline>
<codeline lineno="1245" refid="structlibusb__transfer_1ab75ab3e7185f08e07a1ae858a35ebb7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structlibusb__transfer_1ab75ab3e7185f08e07a1ae858a35ebb7b" kindref="member">user_data</ref>;</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"></highlight></codeline>
<codeline lineno="1248" refid="structlibusb__transfer_1a7fa594567e074191ce8f28b5fb4a3bea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structlibusb__transfer_1a7fa594567e074191ce8f28b5fb4a3bea" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight></codeline>
<codeline lineno="1252" refid="structlibusb__transfer_1a87d725a5521c26832fdc13611220014d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structlibusb__transfer_1a87d725a5521c26832fdc13611220014d" kindref="member">num_iso_packets</ref>;</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight></codeline>
<codeline lineno="1255" refid="structlibusb__transfer_1a0de0b13dfae411fc36217d35eb89b138" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlibusb__iso__packet__descriptor" kindref="compound">libusb_iso_packet_descriptor</ref><sp/>iso_packet_desc</highlight></codeline>
<codeline lineno="1256"><highlight class="normal">#if<sp/>defined(__STDC_VERSION__)<sp/>&amp;&amp;<sp/>(__STDC_VERSION__<sp/>&gt;=<sp/>199901L)</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/>[]<sp/></highlight><highlight class="comment">/*<sp/>valid<sp/>C99<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/>[0]<sp/></highlight><highlight class="comment">/*<sp/>non-standard,<sp/>but<sp/>usually<sp/>working<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="1262"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight></codeline>
<codeline lineno="1269" refid="libusb_8h_1aab1b3fa0728c06fafbee897795889bd5" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aab1b3fa0728c06fafbee897795889bd5" kindref="member">libusb_capability</ref><sp/>{</highlight></codeline>
<codeline lineno="1271" refid="libusb_8h_1aab1b3fa0728c06fafbee897795889bd5a24b79436d4bd088d169f9d1edb4b9649" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1aab1b3fa0728c06fafbee897795889bd5a24b79436d4bd088d169f9d1edb4b9649" kindref="member">LIBUSB_CAP_HAS_CAPABILITY</ref><sp/>=<sp/>0x0000,</highlight></codeline>
<codeline lineno="1273" refid="libusb_8h_1aab1b3fa0728c06fafbee897795889bd5a8b1bbccc648a6677cb9030a6ba827438" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1aab1b3fa0728c06fafbee897795889bd5a8b1bbccc648a6677cb9030a6ba827438" kindref="member">LIBUSB_CAP_HAS_HOTPLUG</ref><sp/>=<sp/>0x0001,</highlight></codeline>
<codeline lineno="1278" refid="libusb_8h_1aab1b3fa0728c06fafbee897795889bd5aa74726ef0af0e42d2d56532f82e873a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1aab1b3fa0728c06fafbee897795889bd5aa74726ef0af0e42d2d56532f82e873a5" kindref="member">LIBUSB_CAP_HAS_HID_ACCESS</ref><sp/>=<sp/>0x0100,</highlight></codeline>
<codeline lineno="1281" refid="libusb_8h_1aab1b3fa0728c06fafbee897795889bd5ad15a06b1aede635004f08bdc0fe561cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1aab1b3fa0728c06fafbee897795889bd5ad15a06b1aede635004f08bdc0fe561cc" kindref="member">LIBUSB_CAP_SUPPORTS_DETACH_KERNEL_DRIVER</ref><sp/>=<sp/>0x0101</highlight></codeline>
<codeline lineno="1282"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight></codeline>
<codeline lineno="1294" refid="libusb_8h_1a2d6144203f0fc6d373677f6e2e89d2d2" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1a2d6144203f0fc6d373677f6e2e89d2d2" kindref="member">libusb_log_level</ref><sp/>{</highlight></codeline>
<codeline lineno="1295" refid="libusb_8h_1a2d6144203f0fc6d373677f6e2e89d2d2af431dbe84c85599526cc0103f8178270" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a2d6144203f0fc6d373677f6e2e89d2d2af431dbe84c85599526cc0103f8178270" kindref="member">LIBUSB_LOG_LEVEL_NONE</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="1296" refid="libusb_8h_1a2d6144203f0fc6d373677f6e2e89d2d2ace959b4b99f6c460dfa929b6152e49a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a2d6144203f0fc6d373677f6e2e89d2d2ace959b4b99f6c460dfa929b6152e49a8" kindref="member">LIBUSB_LOG_LEVEL_ERROR</ref>,</highlight></codeline>
<codeline lineno="1297" refid="libusb_8h_1a2d6144203f0fc6d373677f6e2e89d2d2a1d141f7a981d9fcd4bc12e41a1a14e78" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a2d6144203f0fc6d373677f6e2e89d2d2a1d141f7a981d9fcd4bc12e41a1a14e78" kindref="member">LIBUSB_LOG_LEVEL_WARNING</ref>,</highlight></codeline>
<codeline lineno="1298" refid="libusb_8h_1a2d6144203f0fc6d373677f6e2e89d2d2ab942d780c83ba4f30b9dd2e338002a07" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a2d6144203f0fc6d373677f6e2e89d2d2ab942d780c83ba4f30b9dd2e338002a07" kindref="member">LIBUSB_LOG_LEVEL_INFO</ref>,</highlight></codeline>
<codeline lineno="1299" refid="libusb_8h_1a2d6144203f0fc6d373677f6e2e89d2d2afabee6826e913933f5d6fe4040bd7b9c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a2d6144203f0fc6d373677f6e2e89d2d2afabee6826e913933f5d6fe4040bd7b9c" kindref="member">LIBUSB_LOG_LEVEL_DEBUG</ref>,</highlight></codeline>
<codeline lineno="1300"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1a7c69ac34aaf043c495a9e0914662bc5f" kindref="member">libusb_init</ref>(<ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref><sp/>**ctx);</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1aa9ff0ee5b1580833ad2e23eaa89529f0" kindref="member">libusb_exit</ref>(<ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1ab4974e3de2973e8241801f2136805749" kindref="member">libusb_set_debug</ref>(<ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref><sp/>*ctx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level);</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlibusb__version" kindref="compound">libusb_version</ref><sp/>*<sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1a1c77ca1a138363adc7231a27e060bd25" kindref="member">libusb_get_version</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1a49c71913dddf7c5daf6a004d7da8c15f" kindref="member">libusb_has_capability</ref>(uint32_t<sp/>capability);</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1a6b6ec80743847d896eb4029fb28b45e9" kindref="member">libusb_error_name</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errcode);</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1adc87f335a989c1adad2669aad6e1cc15" kindref="member">libusb_setlocale</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*locale);</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1a5a7133eff6f8ade600a4ca1d8c31da2b" kindref="member">libusb_strerror</ref>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1ab2323aa0f04bc22038e7e1740b2f29ef" kindref="member">libusb_error</ref><sp/>errcode);</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1a9a7d648701440279cbdd7b081c9084ee" kindref="member">libusb_get_device_list</ref>(<ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref><sp/>*ctx,</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref><sp/>***list);</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1abb12b7139b9965bed377721762bb3437" kindref="member">libusb_free_device_list</ref>(<ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref><sp/>**list,</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unref_devices);</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref><sp/>*<sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1afbd116309d37c824da32c133c4e40c1d" kindref="member">libusb_ref_device</ref>(<ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1aaf10116272e2c71121b6e09717305adc" kindref="member">libusb_unref_device</ref>(<ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1a4c4d114a3fa491a26bc0f33c449a3aa7" kindref="member">libusb_get_configuration</ref>(<ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*config);</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1aad2f581b52853c0ef9f751185288b44f" kindref="member">libusb_get_device_descriptor</ref>(<ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlibusb__device__descriptor" kindref="compound">libusb_device_descriptor</ref><sp/>*desc);</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1aefab62a09572b743bf810db2dbdc0d43" kindref="member">libusb_get_active_config_descriptor</ref>(<ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlibusb__config__descriptor" kindref="compound">libusb_config_descriptor</ref><sp/>**config);</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1a017ef159662d53b1acc5912fd2bc4e9f" kindref="member">libusb_get_config_descriptor</ref>(<ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>config_index,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlibusb__config__descriptor" kindref="compound">libusb_config_descriptor</ref><sp/>**config);</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1a0be2a59c71f44089c98c7eaad667c91a" kindref="member">libusb_get_config_descriptor_by_value</ref>(<ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>bConfigurationValue,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlibusb__config__descriptor" kindref="compound">libusb_config_descriptor</ref><sp/>**config);</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1a4b5db80a76a72cb55d0232bf65d390d5" kindref="member">libusb_free_config_descriptor</ref>(</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlibusb__config__descriptor" kindref="compound">libusb_config_descriptor</ref><sp/>*config);</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1a1e001174e31ae3a66905eee43566bd0b" kindref="member">libusb_get_ss_endpoint_companion_descriptor</ref>(</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref><sp/>*ctx,</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlibusb__endpoint__descriptor" kindref="compound">libusb_endpoint_descriptor</ref><sp/>*endpoint,</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlibusb__ss__endpoint__companion__descriptor" kindref="compound">libusb_ss_endpoint_companion_descriptor</ref><sp/>**ep_comp);</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1a4b640425543fa89ce9a4470786e4f6d0" kindref="member">libusb_free_ss_endpoint_companion_descriptor</ref>(</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlibusb__ss__endpoint__companion__descriptor" kindref="compound">libusb_ss_endpoint_companion_descriptor</ref><sp/>*ep_comp);</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1af88e6a836fe8734a888aa0c325f82da8" kindref="member">libusb_get_bos_descriptor</ref>(<ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref><sp/>*handle,</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlibusb__bos__descriptor" kindref="compound">libusb_bos_descriptor</ref><sp/>**bos);</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1aaf4540be83694853389f7f322f9a0d03" kindref="member">libusb_free_bos_descriptor</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlibusb__bos__descriptor" kindref="compound">libusb_bos_descriptor</ref><sp/>*bos);</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1a9d2cb2b4fb2d6d7ea6505dc707329203" kindref="member">libusb_get_usb_2_0_extension_descriptor</ref>(</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref><sp/>*ctx,</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlibusb__bos__dev__capability__descriptor" kindref="compound">libusb_bos_dev_capability_descriptor</ref><sp/>*dev_cap,</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlibusb__usb__2__0__extension__descriptor" kindref="compound">libusb_usb_2_0_extension_descriptor</ref><sp/>**usb_2_0_extension);</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1a59fdd4df58407d5f4bbe7701f1097fc3" kindref="member">libusb_free_usb_2_0_extension_descriptor</ref>(</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlibusb__usb__2__0__extension__descriptor" kindref="compound">libusb_usb_2_0_extension_descriptor</ref><sp/>*usb_2_0_extension);</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1a31659349f469ed9d76e907afc0dac2db" kindref="member">libusb_get_ss_usb_device_capability_descriptor</ref>(</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref><sp/>*ctx,</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlibusb__bos__dev__capability__descriptor" kindref="compound">libusb_bos_dev_capability_descriptor</ref><sp/>*dev_cap,</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlibusb__ss__usb__device__capability__descriptor" kindref="compound">libusb_ss_usb_device_capability_descriptor</ref><sp/>**ss_usb_device_cap);</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1ad3a13b544fab7ee816e50c2e159fc735" kindref="member">libusb_free_ss_usb_device_capability_descriptor</ref>(</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlibusb__ss__usb__device__capability__descriptor" kindref="compound">libusb_ss_usb_device_capability_descriptor</ref><sp/>*ss_usb_device_cap);</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1a154e9ec273f747412af25eafdfc3b626" kindref="member">libusb_get_container_id_descriptor</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref><sp/>*ctx,</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlibusb__bos__dev__capability__descriptor" kindref="compound">libusb_bos_dev_capability_descriptor</ref><sp/>*dev_cap,</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlibusb__container__id__descriptor" kindref="compound">libusb_container_id_descriptor</ref><sp/>**container_id);</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1a52187277d9b7311ffc4325ed819bf4f5" kindref="member">libusb_free_container_id_descriptor</ref>(</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlibusb__container__id__descriptor" kindref="compound">libusb_container_id_descriptor</ref><sp/>*container_id);</highlight></codeline>
<codeline lineno="1356"><highlight class="normal">uint8_t<sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1abb2ee74c03bf4233c5375d7d36d8c57a" kindref="member">libusb_get_bus_number</ref>(<ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="1357"><highlight class="normal">uint8_t<sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1a0b0646c2b16d4b1a23a224d1f99d5ffa" kindref="member">libusb_get_port_number</ref>(<ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1a7f06ad11e532c3f1b29daa63bd677e1e" kindref="member">libusb_get_port_numbers</ref>(<ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref><sp/>*dev,<sp/>uint8_t*<sp/>port_numbers,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>port_numbers_len);</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><ref refid="libusb_8h_1a2698d3115702f9a9999c806872951cdd" kindref="member">LIBUSB_DEPRECATED_FOR</ref>(<ref refid="libusb_8h_1a7f06ad11e532c3f1b29daa63bd677e1e" kindref="member">libusb_get_port_numbers</ref>)</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1af0b9a8dd687a7fb5175683cc58e64982" kindref="member">libusb_get_port_path</ref>(<ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref><sp/>*ctx,<sp/><ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref><sp/>*dev,<sp/>uint8_t*<sp/>path,<sp/>uint8_t<sp/>path_length);</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref><sp/>*<sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1aafe6da9efced1a7343736815099bf498" kindref="member">libusb_get_parent</ref>(<ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="1362"><highlight class="normal">uint8_t<sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1a6a06bf356c6e3b507795126e1f7bed43" kindref="member">libusb_get_device_address</ref>(<ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1ad30927a916c351127877a113dfae3afd" kindref="member">libusb_get_device_speed</ref>(<ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1a66e96708a258696986d4d1b779b37a75" kindref="member">libusb_get_max_packet_size</ref>(<ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>endpoint);</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1aee6523f5b8874fc96030892ffd11f70b" kindref="member">libusb_get_max_iso_packet_size</ref>(<ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>endpoint);</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1a2aad4916668a37ae3fa77a1b1ca817bd" kindref="member">libusb_open</ref>(<ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref><sp/>*dev,<sp/><ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref><sp/>**handle);</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1a6b8983695e63168a3d1e03e2d4def0e8" kindref="member">libusb_close</ref>(<ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref><sp/>*dev_handle);</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref><sp/>*<sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1adff9d5b89080631889260794992e7cdf" kindref="member">libusb_get_device</ref>(<ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref><sp/>*dev_handle);</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1a99cc162f5ed2072a487ba1ba44150101" kindref="member">libusb_set_configuration</ref>(<ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>configuration);</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1ae0bd63d1857b6d6dd40cb71b658b51c3" kindref="member">libusb_claim_interface</ref>(<ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>interface_number);</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1ac90d856dace626f6adb83f83f97791f0" kindref="member">libusb_release_interface</ref>(<ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>interface_number);</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref><sp/>*<sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1af9b11d89143bcfa2ecf8eab2cec06317" kindref="member">libusb_open_device_with_vid_pid</ref>(</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref><sp/>*ctx,<sp/>uint16_t<sp/>vendor_id,<sp/>uint16_t<sp/>product_id);</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1a65e0cd89617316f855ebe9010f823b4f" kindref="member">libusb_set_interface_alt_setting</ref>(<ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>interface_number,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>alternate_setting);</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1acf98691739f712a4a95ed170d56eac9d" kindref="member">libusb_clear_halt</ref>(<ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>endpoint);</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1ac7273a49b93f9e6cf4317ac55c8b3500" kindref="member">libusb_reset_device</ref>(<ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1a1ec7a2df1d7100def350c2e2e78c4b01" kindref="member">libusb_kernel_driver_active</ref>(<ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>interface_number);</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1a4b1735fb58a237c2aab16d884d1db8aa" kindref="member">libusb_detach_kernel_driver</ref>(<ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>interface_number);</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1ab64602ac1e82ec3caf94eb0d6a43c8ca" kindref="member">libusb_attach_kernel_driver</ref>(<ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>interface_number);</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1a44a383fedbdb029b214750b0ee700b72" kindref="member">libusb_set_auto_detach_kernel_driver</ref>(</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref><sp/>*dev,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>enable);</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>async<sp/>I/O<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*libusb_control_transfer_get_data(</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlibusb__transfer" kindref="compound">libusb_transfer</ref><sp/>*transfer)</highlight></codeline>
<codeline lineno="1414"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>transfer-&gt;<ref refid="structlibusb__transfer_1a7fa594567e074191ce8f28b5fb4a3bea" kindref="member">buffer</ref><sp/>+<sp/><ref refid="libusb_8h_1af39dc5e7622e8559df7f1d3da5478717" kindref="member">LIBUSB_CONTROL_SETUP_SIZE</ref>;</highlight></codeline>
<codeline lineno="1416"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlibusb__control__setup" kindref="compound">libusb_control_setup</ref><sp/>*libusb_control_transfer_get_setup(</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlibusb__transfer" kindref="compound">libusb_transfer</ref><sp/>*transfer)</highlight></codeline>
<codeline lineno="1432"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlibusb__control__setup" kindref="compound">libusb_control_setup</ref><sp/>*)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>transfer-&gt;<ref refid="structlibusb__transfer_1a7fa594567e074191ce8f28b5fb4a3bea" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="1434"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"></highlight></codeline>
<codeline lineno="1459"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>libusb_fill_control_setup(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structlibusb__control__setup_1a39b148c231d675492ccd2383196926bf" kindref="member">bmRequestType</ref>,<sp/>uint8_t<sp/><ref refid="structlibusb__control__setup_1a1b80a28b8d4e8586fc54358194e70087" kindref="member">bRequest</ref>,<sp/>uint16_t<sp/><ref refid="structlibusb__control__setup_1abbb6daa01fe4b6a05dc43492e4e53a7d" kindref="member">wValue</ref>,<sp/>uint16_t<sp/><ref refid="structlibusb__control__setup_1a70c2ae456344b200a19d434ace85ae2b" kindref="member">wIndex</ref>,</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structlibusb__control__setup_1a3c442c64fd7619b43b782367235766cc" kindref="member">wLength</ref>)</highlight></codeline>
<codeline lineno="1462"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlibusb__control__setup" kindref="compound">libusb_control_setup</ref><sp/>*setup<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlibusb__control__setup" kindref="compound">libusb_control_setup</ref><sp/>*)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>buffer;</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/>setup-&gt;<ref refid="structlibusb__control__setup_1a39b148c231d675492ccd2383196926bf" kindref="member">bmRequestType</ref><sp/>=<sp/><ref refid="structlibusb__control__setup_1a39b148c231d675492ccd2383196926bf" kindref="member">bmRequestType</ref>;</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/>setup-&gt;<ref refid="structlibusb__control__setup_1a1b80a28b8d4e8586fc54358194e70087" kindref="member">bRequest</ref><sp/>=<sp/><ref refid="structlibusb__control__setup_1a1b80a28b8d4e8586fc54358194e70087" kindref="member">bRequest</ref>;</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/>setup-&gt;<ref refid="structlibusb__control__setup_1abbb6daa01fe4b6a05dc43492e4e53a7d" kindref="member">wValue</ref><sp/>=<sp/>libusb_cpu_to_le16(wValue);</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/>setup-&gt;<ref refid="structlibusb__control__setup_1a70c2ae456344b200a19d434ace85ae2b" kindref="member">wIndex</ref><sp/>=<sp/>libusb_cpu_to_le16(wIndex);</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/>setup-&gt;<ref refid="structlibusb__control__setup_1a3c442c64fd7619b43b782367235766cc" kindref="member">wLength</ref><sp/>=<sp/>libusb_cpu_to_le16(wLength);</highlight></codeline>
<codeline lineno="1469"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlibusb__transfer" kindref="compound">libusb_transfer</ref><sp/>*<sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1a5b104728be7ee367d252c4568029f1f3" kindref="member">libusb_alloc_transfer</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iso_packets);</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1a1efa266ce465fb51a2395feb4c4a9ad5" kindref="member">libusb_submit_transfer</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlibusb__transfer" kindref="compound">libusb_transfer</ref><sp/>*transfer);</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1a99bb7eae6ec9697cda2c194ab318f50b" kindref="member">libusb_cancel_transfer</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlibusb__transfer" kindref="compound">libusb_transfer</ref><sp/>*transfer);</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1a34956216e994484c68e17ff522d58cfd" kindref="member">libusb_free_transfer</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlibusb__transfer" kindref="compound">libusb_transfer</ref><sp/>*transfer);</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>libusb_fill_control_transfer(</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlibusb__transfer" kindref="compound">libusb_transfer</ref><sp/>*transfer,<sp/><ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref><sp/>*<ref refid="structlibusb__transfer_1adaaf06aeb5ab2a8819e75310ec253f7a" kindref="member">dev_handle</ref>,</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/>libusb_transfer_cb_fn<sp/><ref refid="structlibusb__transfer_1a69c6df011ec23ff3e481cc98bfff0623" kindref="member">callback</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structlibusb__transfer_1ab75ab3e7185f08e07a1ae858a35ebb7b" kindref="member">user_data</ref>,</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structlibusb__transfer_1a9a12af15ca5b482f5dcaebd26a848cbb" kindref="member">timeout</ref>)</highlight></codeline>
<codeline lineno="1508"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlibusb__control__setup" kindref="compound">libusb_control_setup</ref><sp/>*setup<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlibusb__control__setup" kindref="compound">libusb_control_setup</ref><sp/>*)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>buffer;</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/>transfer-&gt;<ref refid="structlibusb__transfer_1adaaf06aeb5ab2a8819e75310ec253f7a" kindref="member">dev_handle</ref><sp/>=<sp/>dev_handle;</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/>transfer-&gt;<ref refid="structlibusb__transfer_1a0fcfd057f53b0e1bff6f1567761c231a" kindref="member">endpoint</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/>transfer-&gt;<ref refid="structlibusb__transfer_1a7c9fa575986fe9f23bbecb26b766dff1" kindref="member">type</ref><sp/>=<sp/><ref refid="libusb_8h_1acb52027036a07de6ecc6c2bf07d07c71a4c89624658c783ef9b2a2f08091bc7d7" kindref="member">LIBUSB_TRANSFER_TYPE_CONTROL</ref>;</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/>transfer-&gt;<ref refid="structlibusb__transfer_1a9a12af15ca5b482f5dcaebd26a848cbb" kindref="member">timeout</ref><sp/>=<sp/>timeout;</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/>transfer-&gt;<ref refid="structlibusb__transfer_1a7fa594567e074191ce8f28b5fb4a3bea" kindref="member">buffer</ref><sp/>=<sp/>buffer;</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(setup)</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transfer-&gt;<ref refid="structlibusb__transfer_1a68c023e1f40b50aa8604a2495b6a391e" kindref="member">length</ref><sp/>=<sp/>(int)<sp/>(<ref refid="libusb_8h_1af39dc5e7622e8559df7f1d3da5478717" kindref="member">LIBUSB_CONTROL_SETUP_SIZE</ref></highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="libusb_8h_1a22961bb8cb0d6a9b22c88079efb59b8b" kindref="member">libusb_le16_to_cpu</ref>(setup-&gt;<ref refid="structlibusb__control__setup_1a3c442c64fd7619b43b782367235766cc" kindref="member">wLength</ref>));</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/>transfer-&gt;<ref refid="structlibusb__transfer_1ab75ab3e7185f08e07a1ae858a35ebb7b" kindref="member">user_data</ref><sp/>=<sp/>user_data;</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/>transfer-&gt;<ref refid="structlibusb__transfer_1a69c6df011ec23ff3e481cc98bfff0623" kindref="member">callback</ref><sp/>=<sp/>callback;</highlight></codeline>
<codeline lineno="1520"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>libusb_fill_bulk_transfer(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlibusb__transfer" kindref="compound">libusb_transfer</ref><sp/>*transfer,</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref><sp/>*dev_handle,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>endpoint,</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length,<sp/>libusb_transfer_cb_fn<sp/>callback,</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_data,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout)</highlight></codeline>
<codeline lineno="1539"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/>transfer-&gt;<ref refid="structlibusb__transfer_1adaaf06aeb5ab2a8819e75310ec253f7a" kindref="member">dev_handle</ref><sp/>=<sp/>dev_handle;</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/>transfer-&gt;<ref refid="structlibusb__transfer_1a0fcfd057f53b0e1bff6f1567761c231a" kindref="member">endpoint</ref><sp/>=<sp/>endpoint;</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/>transfer-&gt;<ref refid="structlibusb__transfer_1a7c9fa575986fe9f23bbecb26b766dff1" kindref="member">type</ref><sp/>=<sp/><ref refid="libusb_8h_1acb52027036a07de6ecc6c2bf07d07c71a7bdfa2fc5dadbaaa0e9262e1b4a228e2" kindref="member">LIBUSB_TRANSFER_TYPE_BULK</ref>;</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/>transfer-&gt;<ref refid="structlibusb__transfer_1a9a12af15ca5b482f5dcaebd26a848cbb" kindref="member">timeout</ref><sp/>=<sp/>timeout;</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/>transfer-&gt;<ref refid="structlibusb__transfer_1a7fa594567e074191ce8f28b5fb4a3bea" kindref="member">buffer</ref><sp/>=<sp/>buffer;</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/>transfer-&gt;<ref refid="structlibusb__transfer_1a68c023e1f40b50aa8604a2495b6a391e" kindref="member">length</ref><sp/>=<sp/>length;</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/>transfer-&gt;<ref refid="structlibusb__transfer_1ab75ab3e7185f08e07a1ae858a35ebb7b" kindref="member">user_data</ref><sp/>=<sp/>user_data;</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/>transfer-&gt;<ref refid="structlibusb__transfer_1a69c6df011ec23ff3e481cc98bfff0623" kindref="member">callback</ref><sp/>=<sp/>callback;</highlight></codeline>
<codeline lineno="1548"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"></highlight></codeline>
<codeline lineno="1563"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>libusb_fill_interrupt_transfer(</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlibusb__transfer" kindref="compound">libusb_transfer</ref><sp/>*transfer,<sp/><ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref><sp/>*dev_handle,</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>endpoint,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length,</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/>libusb_transfer_cb_fn<sp/>callback,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_data,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout)</highlight></codeline>
<codeline lineno="1567"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/>transfer-&gt;<ref refid="structlibusb__transfer_1adaaf06aeb5ab2a8819e75310ec253f7a" kindref="member">dev_handle</ref><sp/>=<sp/>dev_handle;</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/>transfer-&gt;<ref refid="structlibusb__transfer_1a0fcfd057f53b0e1bff6f1567761c231a" kindref="member">endpoint</ref><sp/>=<sp/>endpoint;</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/>transfer-&gt;<ref refid="structlibusb__transfer_1a7c9fa575986fe9f23bbecb26b766dff1" kindref="member">type</ref><sp/>=<sp/><ref refid="libusb_8h_1acb52027036a07de6ecc6c2bf07d07c71aefb0e07862c0eed894ec9c2f957a7e3c" kindref="member">LIBUSB_TRANSFER_TYPE_INTERRUPT</ref>;</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/>transfer-&gt;<ref refid="structlibusb__transfer_1a9a12af15ca5b482f5dcaebd26a848cbb" kindref="member">timeout</ref><sp/>=<sp/>timeout;</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/>transfer-&gt;<ref refid="structlibusb__transfer_1a7fa594567e074191ce8f28b5fb4a3bea" kindref="member">buffer</ref><sp/>=<sp/>buffer;</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/>transfer-&gt;<ref refid="structlibusb__transfer_1a68c023e1f40b50aa8604a2495b6a391e" kindref="member">length</ref><sp/>=<sp/>length;</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/>transfer-&gt;<ref refid="structlibusb__transfer_1ab75ab3e7185f08e07a1ae858a35ebb7b" kindref="member">user_data</ref><sp/>=<sp/>user_data;</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/>transfer-&gt;<ref refid="structlibusb__transfer_1a69c6df011ec23ff3e481cc98bfff0623" kindref="member">callback</ref><sp/>=<sp/>callback;</highlight></codeline>
<codeline lineno="1576"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"></highlight></codeline>
<codeline lineno="1592"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>libusb_fill_iso_transfer(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlibusb__transfer" kindref="compound">libusb_transfer</ref><sp/>*transfer,</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref><sp/>*dev_handle,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>endpoint,</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_iso_packets,</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/>libusb_transfer_cb_fn<sp/>callback,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_data,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout)</highlight></codeline>
<codeline lineno="1596"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/>transfer-&gt;<ref refid="structlibusb__transfer_1adaaf06aeb5ab2a8819e75310ec253f7a" kindref="member">dev_handle</ref><sp/>=<sp/>dev_handle;</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/>transfer-&gt;<ref refid="structlibusb__transfer_1a0fcfd057f53b0e1bff6f1567761c231a" kindref="member">endpoint</ref><sp/>=<sp/>endpoint;</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/>transfer-&gt;<ref refid="structlibusb__transfer_1a7c9fa575986fe9f23bbecb26b766dff1" kindref="member">type</ref><sp/>=<sp/><ref refid="libusb_8h_1acb52027036a07de6ecc6c2bf07d07c71a40de9889554fc1785d784b3c31333300" kindref="member">LIBUSB_TRANSFER_TYPE_ISOCHRONOUS</ref>;</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/>transfer-&gt;<ref refid="structlibusb__transfer_1a9a12af15ca5b482f5dcaebd26a848cbb" kindref="member">timeout</ref><sp/>=<sp/>timeout;</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/>transfer-&gt;<ref refid="structlibusb__transfer_1a7fa594567e074191ce8f28b5fb4a3bea" kindref="member">buffer</ref><sp/>=<sp/>buffer;</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/>transfer-&gt;<ref refid="structlibusb__transfer_1a68c023e1f40b50aa8604a2495b6a391e" kindref="member">length</ref><sp/>=<sp/>length;</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/>transfer-&gt;<ref refid="structlibusb__transfer_1a87d725a5521c26832fdc13611220014d" kindref="member">num_iso_packets</ref><sp/>=<sp/>num_iso_packets;</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/>transfer-&gt;<ref refid="structlibusb__transfer_1ab75ab3e7185f08e07a1ae858a35ebb7b" kindref="member">user_data</ref><sp/>=<sp/>user_data;</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/>transfer-&gt;<ref refid="structlibusb__transfer_1a69c6df011ec23ff3e481cc98bfff0623" kindref="member">callback</ref><sp/>=<sp/>callback;</highlight></codeline>
<codeline lineno="1606"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>libusb_set_iso_packet_lengths(</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlibusb__transfer" kindref="compound">libusb_transfer</ref><sp/>*transfer,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length)</highlight></codeline>
<codeline lineno="1618"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>transfer-&gt;<ref refid="structlibusb__transfer_1a87d725a5521c26832fdc13611220014d" kindref="member">num_iso_packets</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transfer-&gt;<ref refid="structlibusb__transfer_1a0de0b13dfae411fc36217d35eb89b138" kindref="member">iso_packet_desc</ref>[i].<ref refid="structlibusb__iso__packet__descriptor_1a374d36e24869c8b07bf8eb1a18fa10ad" kindref="member">length</ref><sp/>=<sp/>length;</highlight></codeline>
<codeline lineno="1622"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"></highlight></codeline>
<codeline lineno="1640"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*libusb_get_iso_packet_buffer(</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlibusb__transfer" kindref="compound">libusb_transfer</ref><sp/>*transfer,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>packet)</highlight></codeline>
<codeline lineno="1642"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_packet;</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"></highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>oops..slight<sp/>bug<sp/>in<sp/>the<sp/>API.<sp/>packet<sp/>is<sp/>an<sp/>unsigned<sp/>int,<sp/>but<sp/>we<sp/>use</highlight></codeline>
<codeline lineno="1648"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>signed<sp/>integers<sp/>almost<sp/>everywhere<sp/>else.<sp/>range-check<sp/>and<sp/>convert<sp/>to</highlight></codeline>
<codeline lineno="1649"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>signed<sp/>to<sp/>avoid<sp/>compiler<sp/>warnings.<sp/>FIXME<sp/>for<sp/>libusb-2.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(packet<sp/>&gt;<sp/>INT_MAX)</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/>_packet<sp/>=<sp/>(int)<sp/>packet;</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"></highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_packet<sp/>&gt;=<sp/>transfer-&gt;<ref refid="structlibusb__transfer_1a87d725a5521c26832fdc13611220014d" kindref="member">num_iso_packets</ref>)</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"></highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>_packet;<sp/>i++)</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>transfer-&gt;<ref refid="structlibusb__transfer_1a0de0b13dfae411fc36217d35eb89b138" kindref="member">iso_packet_desc</ref>[i].<ref refid="structlibusb__iso__packet__descriptor_1a374d36e24869c8b07bf8eb1a18fa10ad" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"></highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>transfer-&gt;<ref refid="structlibusb__transfer_1a7fa594567e074191ce8f28b5fb4a3bea" kindref="member">buffer</ref><sp/>+<sp/>offset;</highlight></codeline>
<codeline lineno="1661"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"></highlight></codeline>
<codeline lineno="1682"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*libusb_get_iso_packet_buffer_simple(</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlibusb__transfer" kindref="compound">libusb_transfer</ref><sp/>*transfer,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>packet)</highlight></codeline>
<codeline lineno="1684"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_packet;</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>oops..slight<sp/>bug<sp/>in<sp/>the<sp/>API.<sp/>packet<sp/>is<sp/>an<sp/>unsigned<sp/>int,<sp/>but<sp/>we<sp/>use</highlight></codeline>
<codeline lineno="1688"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>signed<sp/>integers<sp/>almost<sp/>everywhere<sp/>else.<sp/>range-check<sp/>and<sp/>convert<sp/>to</highlight></codeline>
<codeline lineno="1689"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>signed<sp/>to<sp/>avoid<sp/>compiler<sp/>warnings.<sp/>FIXME<sp/>for<sp/>libusb-2.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(packet<sp/>&gt;<sp/>INT_MAX)</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/>_packet<sp/>=<sp/>(int)<sp/>packet;</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"></highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_packet<sp/>&gt;=<sp/>transfer-&gt;<ref refid="structlibusb__transfer_1a87d725a5521c26832fdc13611220014d" kindref="member">num_iso_packets</ref>)</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"></highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>transfer-&gt;<ref refid="structlibusb__transfer_1a7fa594567e074191ce8f28b5fb4a3bea" kindref="member">buffer</ref><sp/>+<sp/>((int)<sp/>transfer-&gt;<ref refid="structlibusb__transfer_1a0de0b13dfae411fc36217d35eb89b138" kindref="member">iso_packet_desc</ref>[0].<ref refid="structlibusb__iso__packet__descriptor_1a374d36e24869c8b07bf8eb1a18fa10ad" kindref="member">length</ref><sp/>*<sp/>_packet);</highlight></codeline>
<codeline lineno="1698"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"></highlight></codeline>
<codeline lineno="1700"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>sync<sp/>I/O<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1701"><highlight class="normal"></highlight></codeline>
<codeline lineno="1702"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1afc37d4ff91227cbda590e3393a97336f" kindref="member">libusb_control_transfer</ref>(<ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref><sp/>*dev_handle,</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>request_type,<sp/>uint8_t<sp/>bRequest,<sp/>uint16_t<sp/>wValue,<sp/>uint16_t<sp/>wIndex,</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/>uint16_t<sp/>wLength,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout);</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"></highlight></codeline>
<codeline lineno="1706"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1af67100376b025b3cf118377554c6a6cc" kindref="member">libusb_bulk_transfer</ref>(<ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref><sp/>*dev_handle,</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>endpoint,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length,</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*actual_length,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout);</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"></highlight></codeline>
<codeline lineno="1710"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1ac7a9982dc7bc7f1f452baadd8dff8396" kindref="member">libusb_interrupt_transfer</ref>(<ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref><sp/>*dev_handle,</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>endpoint,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length,</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*actual_length,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout);</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"></highlight></codeline>
<codeline lineno="1726"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>libusb_get_descriptor(<ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>desc_type,<sp/>uint8_t<sp/>desc_index,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length)</highlight></codeline>
<codeline lineno="1728"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1afc37d4ff91227cbda590e3393a97336f" kindref="member">libusb_control_transfer</ref>(dev,<sp/><ref refid="libusb_8h_1a86c880af878493aa8f805c2aba654b8ba3829979c66e5344367f32f4a31d43613" kindref="member">LIBUSB_ENDPOINT_IN</ref>,</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a5b5912057c2d7e23b3ed5aa0c20236dfa3ebb19fe897a2a36e90b2e8193b88b0f" kindref="member">LIBUSB_REQUEST_GET_DESCRIPTOR</ref>,<sp/>(uint16_t)<sp/>((desc_type<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>desc_index),</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>data,<sp/>(uint16_t)<sp/>length,<sp/>1000);</highlight></codeline>
<codeline lineno="1732"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"></highlight></codeline>
<codeline lineno="1748"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>libusb_get_string_descriptor(<ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>desc_index,<sp/>uint16_t<sp/>langid,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length)</highlight></codeline>
<codeline lineno="1750"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1afc37d4ff91227cbda590e3393a97336f" kindref="member">libusb_control_transfer</ref>(dev,<sp/><ref refid="libusb_8h_1a86c880af878493aa8f805c2aba654b8ba3829979c66e5344367f32f4a31d43613" kindref="member">LIBUSB_ENDPOINT_IN</ref>,</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a5b5912057c2d7e23b3ed5aa0c20236dfa3ebb19fe897a2a36e90b2e8193b88b0f" kindref="member">LIBUSB_REQUEST_GET_DESCRIPTOR</ref>,<sp/>(uint16_t)((<ref refid="libusb_8h_1a0a2e8a25dfdebf29fdd4764dcdbc1a9ca2b8ca4332dce1357767ecab20ed2f4c2" kindref="member">LIBUSB_DT_STRING</ref><sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>desc_index),</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>langid,<sp/>data,<sp/>(uint16_t)<sp/>length,<sp/>1000);</highlight></codeline>
<codeline lineno="1754"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"></highlight></codeline>
<codeline lineno="1756"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1a71a757eb75ba6c68071abd5c1e7d16e3" kindref="member">libusb_get_string_descriptor_ascii</ref>(<ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>desc_index,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"></highlight></codeline>
<codeline lineno="1759"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>polling<sp/>and<sp/>timeouts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1760"><highlight class="normal"></highlight></codeline>
<codeline lineno="1761"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1a568c771954c882fb5b8a27c8a242fb48" kindref="member">libusb_try_lock_events</ref>(<ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1a998ccdc623daf815e0139c8a22e79089" kindref="member">libusb_lock_events</ref>(<ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1aa4e57b8c4559de5cc9b6939cefe3a3f8" kindref="member">libusb_unlock_events</ref>(<ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1a67ad7b677f2a1db96fc9ff3f93d6f9dc" kindref="member">libusb_event_handling_ok</ref>(<ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1a1b39913b0ad99f86c58f7de908e63f4d" kindref="member">libusb_event_handler_active</ref>(<ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1aa2e9009e74250d455eaed4283c03e882" kindref="member">libusb_lock_event_waiters</ref>(<ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1a946372598e1c673ae73980c9100352f9" kindref="member">libusb_unlock_event_waiters</ref>(<ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1a5c4b3038d1dccc6caa9c4ce27450d3b5" kindref="member">libusb_wait_for_event</ref>(<ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref><sp/>*ctx,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timeval<sp/>*tv);</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"></highlight></codeline>
<codeline lineno="1770"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1a857c11585f1364a42ceef94e181930e9" kindref="member">libusb_handle_events_timeout</ref>(<ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref><sp/>*ctx,</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timeval<sp/>*tv);</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1a85bd06da903179fabaea797ba5767163" kindref="member">libusb_handle_events_timeout_completed</ref>(<ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref><sp/>*ctx,</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timeval<sp/>*tv,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*completed);</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1a6959bab068afc01988f851144ebc8a85" kindref="member">libusb_handle_events</ref>(<ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1af7dbc98d3dc10deecc9a8b840ffdc5e4" kindref="member">libusb_handle_events_completed</ref>(<ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref><sp/>*ctx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*completed);</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1ab4c07164a9f5b03576813717ff79a86a" kindref="member">libusb_handle_events_locked</ref>(<ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref><sp/>*ctx,</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timeval<sp/>*tv);</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1a4dc6ca6794442ddf1842f47752b6f6cd" kindref="member">libusb_pollfds_handle_timeouts</ref>(<ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1a14e06f2ebb63d8430ddaddce92d611ce" kindref="member">libusb_get_next_timeout</ref>(<ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref><sp/>*ctx,</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timeval<sp/>*tv);</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"></highlight></codeline>
<codeline lineno="1785" refid="structlibusb__pollfd" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlibusb__pollfd" kindref="compound">libusb_pollfd</ref><sp/>{</highlight></codeline>
<codeline lineno="1787" refid="structlibusb__pollfd_1a6bf9823709974cfb204e008eae7d451a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structlibusb__pollfd_1a6bf9823709974cfb204e008eae7d451a" kindref="member">fd</ref>;</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"></highlight></codeline>
<codeline lineno="1793" refid="structlibusb__pollfd_1a5e6391383c132343ecd2f34b78ca017e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><ref refid="structlibusb__pollfd_1a5e6391383c132343ecd2f34b78ca017e" kindref="member">events</ref>;</highlight></codeline>
<codeline lineno="1794"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"></highlight></codeline>
<codeline lineno="1806" refid="libusb_8h_1a291d7463aefd0de6209b537db4d06e70" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref><sp/>(<ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/>*<ref refid="libusb_8h_1a291d7463aefd0de6209b537db4d06e70" kindref="member">libusb_pollfd_added_cb</ref>)(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>events,</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_data);</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"></highlight></codeline>
<codeline lineno="1818" refid="libusb_8h_1abff1d67f33725c93ef6dff699335c225" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref><sp/>(<ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/>*<ref refid="libusb_8h_1abff1d67f33725c93ef6dff699335c225" kindref="member">libusb_pollfd_removed_cb</ref>)(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_data);</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"></highlight></codeline>
<codeline lineno="1820"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlibusb__pollfd" kindref="compound">libusb_pollfd</ref><sp/>**<sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1ac815ac878eb250533c8c5a92827d2594" kindref="member">libusb_get_pollfds</ref>(</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1a3b15e3912d7dee7146b36bad190d5e2e" kindref="member">libusb_set_pollfd_notifiers</ref>(<ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref><sp/>*ctx,</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a291d7463aefd0de6209b537db4d06e70" kindref="member">libusb_pollfd_added_cb</ref><sp/>added_cb,<sp/><ref refid="libusb_8h_1abff1d67f33725c93ef6dff699335c225" kindref="member">libusb_pollfd_removed_cb</ref><sp/>removed_cb,</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_data);</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"></highlight></codeline>
<codeline lineno="1838" refid="libusb_8h_1a4868157346bbf2c70b6af0cb0a6c0094" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1a4868157346bbf2c70b6af0cb0a6c0094" kindref="member">libusb_hotplug_callback_handle</ref>;</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"></highlight></codeline>
<codeline lineno="1845" refid="libusb_8h_1a95ce2ec85dec177854c423cea2853c52" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1847" refid="libusb_8h_1a95ce2ec85dec177854c423cea2853c52a01a1c0c9f4e6852cb6df713f2e8a7f6b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a95ce2ec85dec177854c423cea2853c52a01a1c0c9f4e6852cb6df713f2e8a7f6b" kindref="member">LIBUSB_HOTPLUG_ENUMERATE</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="1848"><highlight class="normal">}<sp/><ref refid="libusb_8h_1a95ce2ec85dec177854c423cea2853c52" kindref="member">libusb_hotplug_flag</ref>;</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"></highlight></codeline>
<codeline lineno="1855" refid="libusb_8h_1a556d598ca379618a41bbec3597f55dcf" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1857" refid="libusb_8h_1a556d598ca379618a41bbec3597f55dcfac012270cba6e08dafe7e3bec204dffd6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a556d598ca379618a41bbec3597f55dcfac012270cba6e08dafe7e3bec204dffd6" kindref="member">LIBUSB_HOTPLUG_EVENT_DEVICE_ARRIVED</ref><sp/>=<sp/>0x01,</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"></highlight></codeline>
<codeline lineno="1862" refid="libusb_8h_1a556d598ca379618a41bbec3597f55dcfac8234e02b673893ed549329ef3180a27" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a556d598ca379618a41bbec3597f55dcfac8234e02b673893ed549329ef3180a27" kindref="member">LIBUSB_HOTPLUG_EVENT_DEVICE_LEFT</ref><sp/><sp/><sp/><sp/>=<sp/>0x02,</highlight></codeline>
<codeline lineno="1863"><highlight class="normal">}<sp/><ref refid="libusb_8h_1a556d598ca379618a41bbec3597f55dcf" kindref="member">libusb_hotplug_event</ref>;</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"></highlight></codeline>
<codeline lineno="1867" refid="libusb_8h_1a6d4f5e524a3b7ab4a25b751073335d4c" refkind="member"><highlight class="preprocessor">#define<sp/>LIBUSB_HOTPLUG_MATCH_ANY<sp/>-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1868"><highlight class="normal"></highlight></codeline>
<codeline lineno="1891" refid="libusb_8h_1a34e9904eb8e5124057a866f777cc99a8" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(<ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/>*<ref refid="libusb_8h_1a34e9904eb8e5124057a866f777cc99a8" kindref="member">libusb_hotplug_callback_fn</ref>)(<ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref><sp/>*ctx,</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref><sp/>*device,</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a556d598ca379618a41bbec3597f55dcf" kindref="member">libusb_hotplug_event</ref><sp/>event,</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_data);</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"></highlight></codeline>
<codeline lineno="1930"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1a54961ed4615afb54c8cf50236b2e40d0" kindref="member">libusb_hotplug_register_callback</ref>(<ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref><sp/>*ctx,</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a556d598ca379618a41bbec3597f55dcf" kindref="member">libusb_hotplug_event</ref><sp/>events,</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a95ce2ec85dec177854c423cea2853c52" kindref="member">libusb_hotplug_flag</ref><sp/>flags,</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vendor_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>product_id,</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dev_class,</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a34e9904eb8e5124057a866f777cc99a8" kindref="member">libusb_hotplug_callback_fn</ref><sp/>cb_fn,</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_data,</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>libusb_hotplug_callback_handle<sp/>*handle);</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"></highlight></codeline>
<codeline lineno="1950"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1aa7d6035eb2692d455d27144560a0f68d" kindref="member">LIBUSB_CALL</ref><sp/><ref refid="libusb_8h_1afe4401894825a2671daa78cbf7094f55" kindref="member">libusb_hotplug_deregister_callback</ref>(<ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref><sp/>*ctx,</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>libusb_hotplug_callback_handle<sp/>handle);</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"></highlight></codeline>
<codeline lineno="1953"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1954"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1956"><highlight class="normal"></highlight></codeline>
<codeline lineno="1957"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/libusb.h"/>
  </compounddef>
</doxygen>
