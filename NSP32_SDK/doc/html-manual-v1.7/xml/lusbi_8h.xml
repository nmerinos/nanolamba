<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="lusbi_8h" kind="file" language="C++">
    <compoundname>lusbi.h</compoundname>
    <innerclass refid="structusb__dev__handle" prot="public">usb_dev_handle</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="lusbi_8h_1af159cbebdbc0ffcc698af9f0dc1ad091" prot="public" static="no">
        <name>LIST_ADD</name>
        <param><defname>begin</defname></param>
        <param><defname>ent</defname></param>
        <initializer>do { \
	  if (begin) { \
	    ent-&gt;next = begin; \
	    ent-&gt;next-&gt;prev = ent; \
	  } else \
	    ent-&gt;next = NULL; \
	  ent-&gt;prev = NULL; \
	  begin = ent; \
	} while(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/lusbi.h" line="25" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/lusbi.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lusbi_8h_1a56e8477d2bcb42406452d4df618f7e66" prot="public" static="no">
        <name>LIST_DEL</name>
        <param><defname>begin</defname></param>
        <param><defname>ent</defname></param>
        <initializer>do { \
	  if (ent-&gt;prev) \
	    ent-&gt;prev-&gt;next = ent-&gt;next; \
	  else \
	    begin = ent-&gt;next; \
	  if (ent-&gt;next) \
	    ent-&gt;next-&gt;prev = ent-&gt;prev; \
	  ent-&gt;prev = NULL; \
	  ent-&gt;next = NULL; \
	} while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/lusbi.h" line="36" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/lusbi.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Internal<sp/>header<sp/>for<sp/>libusb-compat-0.1</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2008<sp/>Daniel<sp/>Drake<sp/>&lt;dsd@gentoo.org&gt;</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2000-2003<sp/>Johannes<sp/>Erdfelt<sp/>&lt;johannes@erdfelt.com&gt;</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/>02110-1301<sp/>USA</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__LIBUSB_USBI_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__LIBUSB_USBI_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Some<sp/>quick<sp/>and<sp/>generic<sp/>macros<sp/>for<sp/>the<sp/>simple<sp/>kind<sp/>of<sp/>lists<sp/>we<sp/>use<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="lusbi_8h_1af159cbebdbc0ffcc698af9f0dc1ad091" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIST_ADD(begin,<sp/>ent)<sp/>\</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(begin)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ent-&gt;next<sp/>=<sp/>begin;<sp/>\</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ent-&gt;next-&gt;prev<sp/>=<sp/>ent;<sp/>\</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>\</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ent-&gt;next<sp/>=<sp/>NULL;<sp/>\</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>ent-&gt;prev<sp/>=<sp/>NULL;<sp/>\</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>begin<sp/>=<sp/>ent;<sp/>\</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="lusbi_8h_1a56e8477d2bcb42406452d4df618f7e66" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIST_DEL(begin,<sp/>ent)<sp/>\</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(ent-&gt;prev)<sp/>\</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ent-&gt;prev-&gt;next<sp/>=<sp/>ent-&gt;next;<sp/>\</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>\</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>begin<sp/>=<sp/>ent-&gt;next;<sp/>\</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(ent-&gt;next)<sp/>\</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ent-&gt;next-&gt;prev<sp/>=<sp/>ent-&gt;prev;<sp/>\</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>ent-&gt;prev<sp/>=<sp/>NULL;<sp/>\</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>ent-&gt;next<sp/>=<sp/>NULL;<sp/>\</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="structusb__dev__handle" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structusb__dev__handle" kindref="compound">usb_dev_handle</ref><sp/>{</highlight></codeline>
<codeline lineno="49" refid="structusb__dev__handle_1abfcaee9ee73bdd125b2d41a6af1340e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb_8h_1a7df95821d20d27b5597f1d783749d6a4" kindref="member">libusb_device_handle</ref><sp/>*<ref refid="structusb__dev__handle_1abfcaee9ee73bdd125b2d41a6af1340e0" kindref="member">handle</ref>;</highlight></codeline>
<codeline lineno="50" refid="structusb__dev__handle_1a5557c3388ca9582e186b9ec20bdd480d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structusb__device" kindref="compound">usb_device</ref><sp/>*<ref refid="structusb__dev__handle_1a5557c3388ca9582e186b9ec20bdd480d" kindref="member">device</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>libusb-0.1<sp/>is<sp/>buggy<sp/>w.r.t.<sp/>interface<sp/>claiming.<sp/>it<sp/>allows<sp/>you<sp/>to<sp/>claim</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>multiple<sp/>interfaces<sp/>but<sp/>only<sp/>tracks<sp/>the<sp/>most<sp/>recently<sp/>claimed<sp/>one,</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>which<sp/>is<sp/>used<sp/>for<sp/>usb_set_altinterface().<sp/>we<sp/>clone<sp/>the<sp/>buggy<sp/>behaviour</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>here.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="structusb__dev__handle_1af1ab1353b3cb4640c221d229c491836b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structusb__dev__handle_1af1ab1353b3cb4640c221d229c491836b" kindref="member">last_claimed_interface</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">};</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/lusbi.h"/>
  </compounddef>
</doxygen>
