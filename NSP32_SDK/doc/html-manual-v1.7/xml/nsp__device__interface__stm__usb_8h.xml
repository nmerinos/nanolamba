<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="nsp__device__interface__stm__usb_8h" kind="file" language="C++">
    <compoundname>nsp_device_interface_stm_usb.h</compoundname>
    <includes refid="nsp__base__def_8h" local="yes">nsp_base_def.h</includes>
    <includes refid="nsp__sdk__def_8h" local="yes">nsp_sdk_def.h</includes>
    <includes refid="nsp__device__interface__stm__usb__protocols_8h" local="yes">protocol/nsp_device_interface_stm_usb_protocols.h</includes>
    <includedby refid="nsp__device__interface__base_8h" local="yes">D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_base.h</includedby>
    <incdepgraph>
      <node id="220">
        <label>list</label>
      </node>
      <node id="214">
        <label>iomanip</label>
      </node>
      <node id="219">
        <label>limits</label>
      </node>
      <node id="226">
        <label>nsp_sdk_def.h</label>
        <link refid="nsp__sdk__def_8h"/>
        <childnode refid="221" relation="include">
        </childnode>
        <childnode refid="215" relation="include">
        </childnode>
        <childnode refid="227" relation="include">
        </childnode>
        <childnode refid="228" relation="include">
        </childnode>
        <childnode refid="217" relation="include">
        </childnode>
        <childnode refid="229" relation="include">
        </childnode>
        <childnode refid="224" relation="include">
        </childnode>
        <childnode refid="211" relation="include">
        </childnode>
        <childnode refid="225" relation="include">
        </childnode>
        <childnode refid="209" relation="include">
        </childnode>
      </node>
      <node id="225">
        <label>stdint.h</label>
      </node>
      <node id="212">
        <label>stdlib.h</label>
      </node>
      <node id="223">
        <label>nsp_error_codes.h</label>
        <link refid="nsp__error__codes_8h"/>
      </node>
      <node id="227">
        <label>cmath</label>
      </node>
      <node id="229">
        <label>string</label>
      </node>
      <node id="221">
        <label>map</label>
      </node>
      <node id="211">
        <label>fstream</label>
      </node>
      <node id="218">
        <label>bitset</label>
      </node>
      <node id="230">
        <label>protocol/nsp_device_interface_stm_usb_protocols.h</label>
        <link refid="nsp__device__interface__stm__usb__protocols_8h"/>
      </node>
      <node id="217">
        <label>vector</label>
      </node>
      <node id="213">
        <label>sstream</label>
      </node>
      <node id="216">
        <label>time.h</label>
      </node>
      <node id="224">
        <label>iostream</label>
      </node>
      <node id="228">
        <label>deque</label>
      </node>
      <node id="207">
        <label>D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h</label>
        <link refid="nsp__device__interface__stm__usb_8h"/>
        <childnode refid="208" relation="include">
        </childnode>
        <childnode refid="226" relation="include">
        </childnode>
        <childnode refid="230" relation="include">
        </childnode>
      </node>
      <node id="222">
        <label>alglib3/interpolation.h</label>
      </node>
      <node id="208">
        <label>nsp_base_def.h</label>
        <link refid="nsp__base__def_8h"/>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="223" relation="include">
        </childnode>
        <childnode refid="224" relation="include">
        </childnode>
        <childnode refid="225" relation="include">
        </childnode>
      </node>
      <node id="215">
        <label>algorithm</label>
      </node>
      <node id="209">
        <label>nsp_base_types.h</label>
        <link refid="nsp__base__types_8h"/>
        <childnode refid="210" relation="include">
        </childnode>
        <childnode refid="211" relation="include">
        </childnode>
        <childnode refid="212" relation="include">
        </childnode>
        <childnode refid="213" relation="include">
        </childnode>
        <childnode refid="214" relation="include">
        </childnode>
        <childnode refid="215" relation="include">
        </childnode>
        <childnode refid="216" relation="include">
        </childnode>
        <childnode refid="217" relation="include">
        </childnode>
        <childnode refid="218" relation="include">
        </childnode>
        <childnode refid="219" relation="include">
        </childnode>
        <childnode refid="220" relation="include">
        </childnode>
        <childnode refid="221" relation="include">
        </childnode>
        <childnode refid="222" relation="include">
        </childnode>
      </node>
      <node id="210">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="232">
        <label>D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_base.h</label>
        <link refid="nsp__device__interface__base_8h"/>
        <childnode refid="233" relation="include">
        </childnode>
      </node>
      <node id="231">
        <label>D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h</label>
        <link refid="nsp__device__interface__stm__usb_8h"/>
        <childnode refid="232" relation="include">
        </childnode>
      </node>
      <node id="233">
        <label>D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface.h</label>
        <link refid="nsp__device__interface_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_usb_dev_handle" prot="public">UsbDevHandle</innerclass>
    <innerclass refid="struct_usb_dev_id" prot="public">UsbDevId</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="nsp__device__interface__stm__usb_8h_1a50a191bb5487f59a12ed3dcdfaf54441" prot="public" static="no">
        <name>EFM32_GET_DATA_FROM_DEVICE</name>
        <initializer>0x10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="25" column="10" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nsp__device__interface__stm__usb_8h_1acb9ae224fef16645bda9b5932f5157f8" prot="public" static="no">
        <name>EFM32_SET_DATA_TO_DEVICE</name>
        <initializer>0x11</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="26" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nsp__device__interface__stm__usb_8h_1af3d1d59ca0b098f3146ff4f12a55e904" prot="public" static="no">
        <name>ALLOW_NEGATIVE_SIGNAL</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="33" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nsp__device__interface__stm__usb_8h_1a6fe1c54684e886277db27806a4d68876" prot="public" static="no">
        <name>ALLOW_FRAME_DATA_CASTING_TO_INTEGER</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="36" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nsp__device__interface__stm__usb_8h_1ae34a11b4ddae1de920a57dee17e4906f" prot="public" static="no">
        <name>LOWER_LIMIT_OF_FILTERS_DN</name>
        <initializer>50</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="39" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nsp__device__interface__stm__usb_8h_1a17bb7452dc949e439e9c6b01bf71e9e5" prot="public" static="no">
        <name>SLEEP_TIME_TO_ACQUISITION</name>
        <initializer>30</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="43" column="10" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nsp__device__interface__stm__usb_8h_1a80dc46734753f5e795d6f246b7254dd2" prot="public" static="no">
        <name>BLANK_TIME_SCALE_FACTOR</name>
        <initializer>0.7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="45" column="10" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nsp__device__interface__stm__usb_8h_1a6b9eb759662573a76c9dd951c6dd0b91" prot="public" static="no">
        <name>DOUBLE_SS_RATIO</name>
        <initializer>0.5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="46" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nsp__device__interface__stm__usb_8h_1a20ac91a2ec9d7a87457823dc5837d5d8" prot="public" static="no">
        <name>RECIEVED_BYTE_BUFFER</name>
        <initializer>2048</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="48" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nsp__device__interface__stm__usb_8h_1a3f40148fdd27f3718565310b57a997d2" prot="public" static="no">
        <name>FMA_MAX_NUM_BUFFERS</name>
        <initializer>100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="50" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nsp__device__interface__stm__usb_8h_1a228f2876a05a21d1e643d214bbcf239f" prot="public" static="no">
        <name>EMF32_DEVICE_TAG</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="121" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nsp__device__interface__stm__usb_8h_1ac5dde101ee7f98d4852fb2b8acdbb1fb" prot="public" static="no">
        <name>EMF32_MIN_SHUTTER_SPEED</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="122" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nsp__device__interface__stm__usb_8h_1a62fa9cceed8f06e39edb395a9219fd5a" prot="public" static="no">
        <name>EMF32_MAX_SHUTTER_SPEED</name>
        <initializer>16777215</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="123" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nsp__device__interface__stm__usb_8h_1ab94c1765c4fdb39b2d76f2498dba3476" prot="public" static="no">
        <name>EMF32_NUM_FILTERS</name>
        <initializer>1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="124" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nsp__device__interface__stm__usb_8h_1abdd5ada9e02cf9263b707384667efc75" prot="public" static="no">
        <name>EMF32_START_LAM</name>
        <initializer>350</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="125" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nsp__device__interface__stm__usb_8h_1a39ecc28bf6ade257736c5b161ede73bf" prot="public" static="no">
        <name>EMF32_END_LAM</name>
        <initializer>1100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="126" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nsp__device__interface__stm__usb_8h_1ad0e929c91682ab26a7100c64674a469f" prot="public" static="no">
        <name>EMF32_FILTER_INTERVAL</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="127" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nsp__device__interface__stm__usb_8h_1a83049a3c9613667d6593598ab338f9c7" prot="public" static="no">
        <name>EMF32_FILTER_RESOLUTION</name>
        <initializer>751</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="128" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nsp__device__interface__stm__usb_8h_1a096411051bca3489e63c8666bf82e9a6" prot="public" static="no">
        <name>EMF32_DEFAULT_NUM_AVERAGES</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="129" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nsp__device__interface__stm__usb_8h_1ae3b675a8887e0dc75c095a64df6ea89d" prot="public" static="no">
        <name>EMF32_DEFAULT_COM_PORT</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="130" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nsp__device__interface__stm__usb_8h_1a9cf03038a520836876f0e47c7c416182" prot="public" static="no">
        <name>EMF32_DEFAULT_VID</name>
        <initializer>0x16C1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="139" column="10" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nsp__device__interface__stm__usb_8h_1a82fc32f70ec68825ab2c5fd728d837b0" prot="public" static="no">
        <name>EMF32_DEFAULT_PID</name>
        <initializer>0x0482</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="140" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nsp__device__interface__stm__usb_8h_1ae15b7960fc89a6c8282efc86b4c91cd4" prot="public" static="no">
        <name>EMF32_LEDDRIVER_VID</name>
        <initializer>0x16C1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="141" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nsp__device__interface__stm__usb_8h_1a6be0b1cf8e021fc2316dab0feca834eb" prot="public" static="no">
        <name>EMF32_LEDDRIVER_PID</name>
        <initializer>0x0483</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="142" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nsp__device__interface__stm__usb_8h_1ad3e3648be0801b7d473b3ee69586dcf3" prot="public" static="no">
        <name>EMF32_MIN_FILTER_OUT</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="145" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nsp__device__interface__stm__usb_8h_1ab9345e7473e80391384e5b8029dad8a2" prot="public" static="no">
        <name>EMF32_MAX_FILTER_OUT</name>
        <initializer><ref refid="nsp__device__def_8h_1a1c6d4907a3132e88f63c8a2c37dcad7b" kindref="member">DEVICE_MAX_FILTER_OUT</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="146" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nsp__device__interface__stm__usb_8h_1a72cfcd8b1c5bd45cdcfd377cc314fe19" prot="public" static="no">
        <name>FRAME_NUM_FOR_SKIP</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="148" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nsp__device__interface__stm__usb_8h_1a018276f78e593eae4c9f94e296b6bb99" prot="public" static="no">
        <name>INIT_VAL_BLANK_TIME</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="149" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nsp__device__interface__stm__usb_8h_1a82bd29e77030d0b76589244a4c0e01d3" prot="public" static="no">
        <name>INIT_VAL_ADC_RANGE</name>
        <initializer>132</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="151" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nsp__device__interface__stm__usb_8h_1a67d31eaaacb749ed812451a68b709ada" prot="public" static="no">
        <name>INIT_VAL_ADC_GAIN</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="157" column="10" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nsp__device__interface__stm__usb_8h_1a2bb838527ff536ace32d6b338a198acc" prot="public" static="no">
        <name>SHUTTER_SPEED_BASE</name>
        <initializer>32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="159" column="10" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nsp__device__interface__stm__usb_8h_1af425f81bad961cbddc3fb5302c027bc1" prot="public" static="no">
        <name>SENSOR_ID_SIZE</name>
        <initializer><ref refid="nsp__device__interface__stm__usb__protocols_8h_1a940151fe7c8089d81d91f2001d16245a" kindref="member">EFM32_SENSOR_ID_SIZE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="164" column="10" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nsp__device__interface__stm__usb_8h_1a04692b62a5f1c36026518d880ab34159" prot="public" static="no">
        <name>EFM32_MCLK</name>
        <initializer>5.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="207" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nsp__device__interface__stm__usb_8h_1a9033c4502bf7d728a1998eae2bcc6465" prot="public" static="no">
        <name>CONVERT_SS_TO_INTEG_TIME</name>
        <param><defname>ss</defname></param>
        <initializer>((((384+16*(32+1))*ss)+160)/(<ref refid="nsp__device__interface__stm__usb_8h_1a04692b62a5f1c36026518d880ab34159" kindref="member">EFM32_MCLK</ref>*1000))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="208" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nsp__device__interface__stm__usb_8h_1ac6b2af89fbe3493bb3712f1619754b13" prot="public" static="no">
        <name>CONVERT_INTEG_TIME_TO_SS</name>
        <param><defname>msec</defname></param>
        <initializer>(((msec*(<ref refid="nsp__device__interface__stm__usb_8h_1a04692b62a5f1c36026518d880ab34159" kindref="member">EFM32_MCLK</ref>*1000)-160)-384)/(16*(32+1)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="209" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nsp__device__interface__stm__usb_8h_1aaf0dfd84095bc9b6ee2b07b87943e90e" prot="public" static="no">
        <name>NSP_DEVICE_MASTER_CLOCK</name>
        <initializer><ref refid="nsp__device__interface__stm__usb_8h_1a04692b62a5f1c36026518d880ab34159" kindref="member">EFM32_MCLK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="210" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nsp__device__interface__stm__usb_8h_1a5f0917a21c67f9f25672e3785f9cb44f" prot="public" static="no">
        <name>DEFAULT_INITIAL_SHUTTER_SPEED</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="213" column="9" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" bodystart="213" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="nsp__device__interface__stm__usb_8h_1aad36ed99612122c72124e7cca3c77ce0" prot="public" static="no">
        <type>pair&lt; int, <ref refid="structusb__dev__handle" kindref="compound">usb_dev_handle</ref> * &gt;</type>
        <definition>typedef pair&lt;int, usb_dev_handle*&gt; dev_Pair</definition>
        <argsstring></argsstring>
        <name>dev_Pair</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="84" column="1" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="nsp__device__interface__stm__usb_8h_1a671b67c57551c77a85b0c532b984aa3e" prot="public" static="no">
        <type>pair&lt; int, int &gt;</type>
        <definition>typedef pair&lt;int, int&gt; dev_id_Pair</definition>
        <argsstring></argsstring>
        <name>dev_id_Pair</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="85" column="1" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="nsp__device__interface__stm__usb_8h_1acce8979b678e88bf4c3c702f371480b6" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structusb__device" kindref="compound">usb_device</ref> *</type>
        <definition>struct usb_device* pDev</definition>
        <argsstring></argsstring>
        <name>pDev</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="57" column="1" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="nsp__device__interface__stm__usb_8h_1a66495930fa9c4ec39770d0395b3b3f7a" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structusb__bus" kindref="compound">usb_bus</ref> *</type>
        <definition>struct usb_bus* pBus</definition>
        <argsstring></argsstring>
        <name>pBus</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="58" column="1" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="nsp__device__interface__stm__usb_8h_1ab66417ef4238bab136e56eccfc727c74" prot="public" static="yes" mutable="no">
        <type>unsigned char</type>
        <definition>unsigned char leds</definition>
        <argsstring></argsstring>
        <name>leds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="86" column="1" bodyfile="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1abcc4c2cc4cadc5a88bda3074c08c8fae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool connect_device</definition>
        <argsstring>(unsigned int iDeviceId=0)</argsstring>
        <name>connect_device</name>
        <param>
          <type>unsigned int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Connect to USB device. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="219" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1a6e28f3e71169cc16fa2254471db2df6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int connect_device</definition>
        <argsstring>(void)</argsstring>
        <name>connect_device</name>
        <param>
          <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="220" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1a2420c867b3cb1723c5afaeaf4b115431" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool connect_device</definition>
        <argsstring>(int iVID, int iPID, unsigned int iDeviceId=0)</argsstring>
        <name>connect_device</name>
        <param>
          <type>int</type>
          <declname>iVID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iPID</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="221" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1a7ba84282bedb8d327f6af5814bb47eb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool connect_LED_device</definition>
        <argsstring>()</argsstring>
        <name>connect_LED_device</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="222" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1a4e7286b5606857024d00613bf9c4db4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool disconnect_device</definition>
        <argsstring>(unsigned int iDeviceId=0)</argsstring>
        <name>disconnect_device</name>
        <param>
          <type>unsigned int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Disconnect USB device. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="225" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1ab5c2362f40601be2104bb7b09540e5b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref></type>
        <definition>void print_device_info</definition>
        <argsstring>(struct usb_device *pDev)</argsstring>
        <name>print_device_info</name>
        <param>
          <type>struct <ref refid="structusb__device" kindref="compound">usb_device</ref> *</type>
          <declname>pDev</declname>
        </param>
        <briefdescription>
<para>Print device information. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="228" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1ad3f4e6d8a8831478cf5d98a6fcbe7fc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref></type>
        <definition>void initialize_sensor</definition>
        <argsstring>(unsigned int iDeviceId=0)</argsstring>
        <name>initialize_sensor</name>
        <param>
          <type>unsigned int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>initialize sensor with initial register values </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="234" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1a35c9e0141f434f5e236e90198f975b21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref></type>
        <definition>void start_sensor</definition>
        <argsstring>(unsigned int iDeviceId=0)</argsstring>
        <name>start_sensor</name>
        <param>
          <type>unsigned int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>initialize acquisition </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="237" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1a8906f73ab5869ffb11c91c29512fdafd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref></type>
        <definition>void stop_sensor</definition>
        <argsstring>(unsigned int iDeviceId=0)</argsstring>
        <name>stop_sensor</name>
        <param>
          <type>unsigned int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>finalize acquistion </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="240" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1a36943b82c362c09d3550013c34b8e2c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref></type>
        <definition>void send_command_to_device</definition>
        <argsstring>(int iCommand, int wValue, unsigned int iDeviceId=0)</argsstring>
        <name>send_command_to_device</name>
        <param>
          <type>int</type>
          <declname>iCommand</declname>
        </param>
        <param>
          <type>int</type>
          <declname>wValue</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Write command to device with value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="243" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1a0cfe242f9959c48c677e39870bf9d502" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref></type>
        <definition>void convert_2048C_to_1024F</definition>
        <argsstring>(char *inputC, double *outputF)</argsstring>
        <name>convert_2048C_to_1024F</name>
        <param>
          <type>char *</type>
          <declname>inputC</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>outputF</declname>
        </param>
        <briefdescription>
<para>Convert char array(2048) to double array(1024) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="246" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1aff110d971dde18a670d20550731225c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char</type>
        <definition>unsigned char read_from_device</definition>
        <argsstring>(int iCommand, int wValue, unsigned int iDeviceId=0)</argsstring>
        <name>read_from_device</name>
        <param>
          <type>int</type>
          <declname>iCommand</declname>
        </param>
        <param>
          <type>int</type>
          <declname>wValue</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Read data from device. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="249" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1a633c20635cabff0c47a58a93fc35b99d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char</type>
        <definition>unsigned char do_control_transfer</definition>
        <argsstring>(int iCommand, int wValue, unsigned int iDeviceId=0)</argsstring>
        <name>do_control_transfer</name>
        <param>
          <type>int</type>
          <declname>iCommand</declname>
        </param>
        <param>
          <type>int</type>
          <declname>wValue</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Send/Read data to/from device. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="252" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1aa521500efce471cbd2d009667d8fca0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char</type>
        <definition>unsigned char read_register_data</definition>
        <argsstring>(unsigned char ucAddr, unsigned int iDeviceId=0)</argsstring>
        <name>read_register_data</name>
        <param>
          <type>unsigned char</type>
          <declname>ucAddr</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>read data from a register </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="255" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1ad60bc1f7bae38a5e1e8fa31e05cd5e67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref></type>
        <definition>void write_register_data</definition>
        <argsstring>(unsigned char ucAddr, unsigned char ucData, unsigned int iDeviceId=0)</argsstring>
        <name>write_register_data</name>
        <param>
          <type>unsigned char</type>
          <declname>ucAddr</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucData</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>write data to register </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="258" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1aa89ca9dfbe60a3be8b49cb5791763948" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double acquire_frame_data</definition>
        <argsstring>(double *frameBuf, int iDarkCorrectionMode, unsigned int iDeviceId=0)</argsstring>
        <name>acquire_frame_data</name>
        <param>
          <type>double *</type>
          <declname>frameBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iDarkCorrectionMode</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>acquire one frame (returns dark value of currently acquired frame) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="261" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1a09f65498a7708dbd1780037ca5feedc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int acquire_frame_data_2048</definition>
        <argsstring>(char *frameBuf, unsigned int iDeviceId=0)</argsstring>
        <name>acquire_frame_data_2048</name>
        <param>
          <type>char *</type>
          <declname>frameBuf</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>acquire one frame without data conversion </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="264" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1aa85dce08aa663c691e77afd46a145277" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int alloc_transfer_bulk</definition>
        <argsstring>(unsigned int iDeviceId=0)</argsstring>
        <name>alloc_transfer_bulk</name>
        <param>
          <type>unsigned int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="266" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1a82c6418bd1d8546fd2988d88bd625fe0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int alloc_transfer_bulk_l</definition>
        <argsstring>(int num_iso_pack, int length, unsigned char *buffer, unsigned int iDeviceId=0)</argsstring>
        <name>alloc_transfer_bulk_l</name>
        <param>
          <type>int</type>
          <declname>num_iso_pack</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="267" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1a4e86f6f45e12cfe0aa4808ffd3d03644" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int acquire_frame_data_bulk</definition>
        <argsstring>(int iCommand, unsigned int iDeviceId=0)</argsstring>
        <name>acquire_frame_data_bulk</name>
        <param>
          <type>int</type>
          <declname>iCommand</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="268" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1ac01f0e6185be75f776952599a7ba004d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int acquire_frame_data_control</definition>
        <argsstring>(int iCommand, unsigned int iDeviceId=0)</argsstring>
        <name>acquire_frame_data_control</name>
        <param>
          <type>int</type>
          <declname>iCommand</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="269" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1a7560f7fbb6b1e582d48ce74faa00b664" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double acquire_sub_frame_data</definition>
        <argsstring>(int *frameBuf, int iDarkCorrectionMode, unsigned int iDeviceId=0)</argsstring>
        <name>acquire_sub_frame_data</name>
        <param>
          <type>int *</type>
          <declname>frameBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iDarkCorrectionMode</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="271" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1a12434f297382993a110b4cec6bb9332c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="nsp__error__codes_8h_1a62d16416ab2b2b6a55f8fe58605ca0a3" kindref="member">NSP_ERROR_CODE</ref></type>
        <definition>NSP_ERROR_CODE initialize_device_interface</definition>
        <argsstring>(unsigned int iDeviceId=0)</argsstring>
        <name>initialize_device_interface</name>
        <param>
          <type>unsigned int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="275" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1acd3402eef9118329e4d2173444033b4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="nsp__error__codes_8h_1a62d16416ab2b2b6a55f8fe58605ca0a3" kindref="member">NSP_ERROR_CODE</ref></type>
        <definition>NSP_ERROR_CODE reconnect_device</definition>
        <argsstring>(unsigned int &amp;iDeviceId, struct libusb_device *currDev, libusb_context *lctx, bool detach)</argsstring>
        <name>reconnect_device</name>
        <param>
          <type>unsigned int &amp;</type>
          <declname>iDeviceId</declname>
        </param>
        <param>
          <type>struct <ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref> *</type>
          <declname>currDev</declname>
        </param>
        <param>
          <type><ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref> *</type>
          <declname>lctx</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>detach</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="276" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1aa5af45d0f358c0f31f64b74290ff743d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="nsp__error__codes_8h_1a62d16416ab2b2b6a55f8fe58605ca0a3" kindref="member">NSP_ERROR_CODE</ref></type>
        <definition>NSP_ERROR_CODE close_device_interface</definition>
        <argsstring>(unsigned int iDeviceId=0)</argsstring>
        <name>close_device_interface</name>
        <param>
          <type>unsigned int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="279" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1a9cb95adca3bc192571b3fadea96012f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="nsp__error__codes_8h_1a62d16416ab2b2b6a55f8fe58605ca0a3" kindref="member">NSP_ERROR_CODE</ref></type>
        <definition>NSP_ERROR_CODE set_device_index</definition>
        <argsstring>(unsigned int iDeviceId=0)</argsstring>
        <name>set_device_index</name>
        <param>
          <type>unsigned int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="282" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1aa0e68d232d638adc611faec77666eb25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="nsp__error__codes_8h_1a62d16416ab2b2b6a55f8fe58605ca0a3" kindref="member">NSP_ERROR_CODE</ref></type>
        <definition>NSP_ERROR_CODE set_LED_module_op_mode</definition>
        <argsstring>(unsigned int iOpMode, unsigned int iDeviceId=0)</argsstring>
        <name>set_LED_module_op_mode</name>
        <param>
          <type>unsigned int</type>
          <declname>iOpMode</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="285" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1ada322e36b5019172c0aef3eeeb454952" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="nsp__error__codes_8h_1a62d16416ab2b2b6a55f8fe58605ca0a3" kindref="member">NSP_ERROR_CODE</ref></type>
        <definition>NSP_ERROR_CODE set_frame_data_acq_mode</definition>
        <argsstring>(unsigned int iAcqMode, unsigned int iDeviceId=0)</argsstring>
        <name>set_frame_data_acq_mode</name>
        <param>
          <type>unsigned int</type>
          <declname>iAcqMode</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="288" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1a5b0c3e2b95eb3c27aa42f6beae59bfa8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned get_connected_total_devices</definition>
        <argsstring>()</argsstring>
        <name>get_connected_total_devices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="291" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1a76ef631d85469c374a831603fce33cd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="nsp__device__api_8h_1a779136663193567a853b1b8d3e8bd6b5" kindref="member">EXPORT_DLL</ref> <ref refid="nsp__error__codes_8h_1a62d16416ab2b2b6a55f8fe58605ca0a3" kindref="member">NSP_ERROR_CODE</ref></type>
        <definition>EXPORT_DLL NSP_ERROR_CODE get_sensor_id_with_index</definition>
        <argsstring>(char *SensorID, unsigned int iDeviceId=0)</argsstring>
        <name>get_sensor_id_with_index</name>
        <param>
          <type>char *</type>
          <declname>SensorID</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="294" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1af92635dd47694e646bd6e7b546fe8a8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="nsp__device__api_8h_1a779136663193567a853b1b8d3e8bd6b5" kindref="member">EXPORT_DLL</ref> <ref refid="nsp__error__codes_8h_1a62d16416ab2b2b6a55f8fe58605ca0a3" kindref="member">NSP_ERROR_CODE</ref></type>
        <definition>EXPORT_DLL NSP_ERROR_CODE get_sensor_id_with_index</definition>
        <argsstring>(char *lot_char, short *lot_id, short *wafer_id, short *x_coord, short *y_coord, short *sensor_type, unsigned int iDeviceId=0)</argsstring>
        <name>get_sensor_id_with_index</name>
        <param>
          <type>char *</type>
          <declname>lot_char</declname>
        </param>
        <param>
          <type>short *</type>
          <declname>lot_id</declname>
        </param>
        <param>
          <type>short *</type>
          <declname>wafer_id</declname>
        </param>
        <param>
          <type>short *</type>
          <declname>x_coord</declname>
        </param>
        <param>
          <type>short *</type>
          <declname>y_coord</declname>
        </param>
        <param>
          <type>short *</type>
          <declname>sensor_type</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="295" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1a7d28b0605c0f0204db7125bcec25df0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string decode_sensor_id_from_string</definition>
        <argsstring>(char *buf, unsigned int iDeviceId=0)</argsstring>
        <name>decode_sensor_id_from_string</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="296" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1a502f006e0b64ecc56b158efd135f1a68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="nsp__error__codes_8h_1a62d16416ab2b2b6a55f8fe58605ca0a3" kindref="member">NSP_ERROR_CODE</ref></type>
        <definition>NSP_ERROR_CODE get_firmware_version</definition>
        <argsstring>(unsigned char *version)</argsstring>
        <name>get_firmware_version</name>
        <param>
          <type>unsigned char *</type>
          <declname>version</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="298" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1ac9d7f92a98910b635b25b92845f294dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="nsp__device__api_8h_1a779136663193567a853b1b8d3e8bd6b5" kindref="member">EXPORT_DLL</ref> <ref refid="nsp__error__codes_8h_1a62d16416ab2b2b6a55f8fe58605ca0a3" kindref="member">NSP_ERROR_CODE</ref></type>
        <definition>EXPORT_DLL NSP_ERROR_CODE set_shutter_speed_to_sensor</definition>
        <argsstring>(int iShutterSpeed, unsigned int iDeviceId=0)</argsstring>
        <name>set_shutter_speed_to_sensor</name>
        <param>
          <type>int</type>
          <declname>iShutterSpeed</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="304" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1a8bdf02b5cb3b8962b2b5bebe37d66827" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="nsp__error__codes_8h_1a62d16416ab2b2b6a55f8fe58605ca0a3" kindref="member">NSP_ERROR_CODE</ref></type>
        <definition>NSP_ERROR_CODE get_shutter_speed_from_sensor</definition>
        <argsstring>(int *iCurSS, unsigned int iDeviceId=0)</argsstring>
        <name>get_shutter_speed_from_sensor</name>
        <param>
          <type>int *</type>
          <declname>iCurSS</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="307" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1a51d6ca6ef3002c7f424ada03df570fdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="nsp__error__codes_8h_1a62d16416ab2b2b6a55f8fe58605ca0a3" kindref="member">NSP_ERROR_CODE</ref></type>
        <definition>NSP_ERROR_CODE get_current_shutter_speed</definition>
        <argsstring>(int *iShutterSpeed, unsigned int iDeviceId=0)</argsstring>
        <name>get_current_shutter_speed</name>
        <param>
          <type>int *</type>
          <declname>iShutterSpeed</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="310" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1ad30bde609cfab284ba33376d66900daa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="nsp__error__codes_8h_1a62d16416ab2b2b6a55f8fe58605ca0a3" kindref="member">NSP_ERROR_CODE</ref></type>
        <definition>NSP_ERROR_CODE get_current_shutter_speed</definition>
        <argsstring>()</argsstring>
        <name>get_current_shutter_speed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="314" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1aa36e52ace02a4c762b55ac1c0b924073" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="nsp__error__codes_8h_1a62d16416ab2b2b6a55f8fe58605ca0a3" kindref="member">NSP_ERROR_CODE</ref></type>
        <definition>NSP_ERROR_CODE set_blank_time_to_sensor</definition>
        <argsstring>(int iBlankTime, unsigned int iDeviceId=0)</argsstring>
        <name>set_blank_time_to_sensor</name>
        <param>
          <type>int</type>
          <declname>iBlankTime</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="317" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1a719f57d3989ef5e65088b34aaa75f55c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="nsp__error__codes_8h_1a62d16416ab2b2b6a55f8fe58605ca0a3" kindref="member">NSP_ERROR_CODE</ref></type>
        <definition>NSP_ERROR_CODE get_blank_time_from_sensor</definition>
        <argsstring>(int *iBlankTime, unsigned int iDeviceId=0)</argsstring>
        <name>get_blank_time_from_sensor</name>
        <param>
          <type>int *</type>
          <declname>iBlankTime</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="320" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1a24de11a7db1654f55ab5375a56f2c072" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="nsp__device__api_8h_1a779136663193567a853b1b8d3e8bd6b5" kindref="member">EXPORT_DLL</ref> <ref refid="nsp__error__codes_8h_1a62d16416ab2b2b6a55f8fe58605ca0a3" kindref="member">NSP_ERROR_CODE</ref></type>
        <definition>EXPORT_DLL NSP_ERROR_CODE set_adc_setting_values</definition>
        <argsstring>(unsigned char ucADCRange, unsigned char ucGain, unsigned char ucRes, unsigned int iDeviceId=0)</argsstring>
        <name>set_adc_setting_values</name>
        <param>
          <type>unsigned char</type>
          <declname>ucADCRange</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucGain</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucRes</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="323" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1a8ee9fdd65df6a66fc6254733d021ab74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="nsp__error__codes_8h_1a62d16416ab2b2b6a55f8fe58605ca0a3" kindref="member">NSP_ERROR_CODE</ref></type>
        <definition>NSP_ERROR_CODE get_adc_setting_values</definition>
        <argsstring>(unsigned char *ucADCRange, unsigned char *ucGain, unsigned char *ucRes, unsigned int iDeviceId=0)</argsstring>
        <name>get_adc_setting_values</name>
        <param>
          <type>unsigned char *</type>
          <declname>ucADCRange</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>ucGain</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>ucRes</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="326" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1a02a16e40899d5d23d4d9e39b0a957d36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int initialize_ae_module</definition>
        <argsstring>(const char *strFileName_intensityLUT, const char *strFileName_ssLUT)</argsstring>
        <name>initialize_ae_module</name>
        <param>
          <type>const char *</type>
          <declname>strFileName_intensityLUT</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>strFileName_ssLUT</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="332" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1af1404ad90aa5f55cd8d6b990c546228a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int find_optimal_shutter_speed_with_ae</definition>
        <argsstring>(std::vector&lt; int &gt; &amp;valid_filters, int frame_average, int sleep_time=1000, unsigned int iDeviceId=0)</argsstring>
        <name>find_optimal_shutter_speed_with_ae</name>
        <param>
          <type>std::vector&lt; int &gt; &amp;</type>
          <declname>valid_filters</declname>
        </param>
        <param>
          <type>int</type>
          <declname>frame_average</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sleep_time</declname>
          <defval>1000</defval>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="333" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1a6b699d8741705732614ff4f281f570c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool set_params_for_ae_module</definition>
        <argsstring>(int target_DN, unsigned int iDeviceId=0)</argsstring>
        <name>set_params_for_ae_module</name>
        <param>
          <type>int</type>
          <declname>target_DN</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="334" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1a3f63a2475f99aec0594d38e3623a69d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool set_params_for_ae_module</definition>
        <argsstring>(int target_DN, int upper_DN, int lower_DN, int mean_DN, int max_integ_DN, unsigned int iDeviceId=0)</argsstring>
        <name>set_params_for_ae_module</name>
        <param>
          <type>int</type>
          <declname>target_DN</declname>
        </param>
        <param>
          <type>int</type>
          <declname>upper_DN</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lower_DN</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mean_DN</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_integ_DN</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="335" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1a625a3da3662002299e0c7be1d46b242a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="nsp__device__api_8h_1a779136663193567a853b1b8d3e8bd6b5" kindref="member">EXPORT_DLL</ref> double</type>
        <definition>EXPORT_DLL double get_filter_data_from_sensor</definition>
        <argsstring>(double *pOutputFilterValue, int iNumOfAverages, int iDarkCorrectionMode, int useContAcq=0, unsigned int iDeviceId=0)</argsstring>
        <name>get_filter_data_from_sensor</name>
        <param>
          <type>double *</type>
          <declname>pOutputFilterValue</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iNumOfAverages</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iDarkCorrectionMode</declname>
        </param>
        <param>
          <type>int</type>
          <declname>useContAcq</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="339" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1ae71ef8682468c63aa649cef2745440c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int read_roi_info_from_fw</definition>
        <argsstring>(int iCommand, int wValue, unsigned iDeviceId=0)</argsstring>
        <name>read_roi_info_from_fw</name>
        <param>
          <type>int</type>
          <declname>iCommand</declname>
        </param>
        <param>
          <type>int</type>
          <declname>wValue</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="341" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1acbdb0a8708c8d13d991d018fe5079400" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref></type>
        <definition>void write_roi_info_to_fw</definition>
        <argsstring>(int iCommand, int wValue, unsigned int iDeviceId=0)</argsstring>
        <name>write_roi_info_to_fw</name>
        <param>
          <type>int</type>
          <declname>iCommand</declname>
        </param>
        <param>
          <type>int</type>
          <declname>wValue</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="342" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1ae0ae88b193aa3eb4fae35c39f719122f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; get_roi_info_from_sensor</definition>
        <argsstring>(int iCommand, int wValue, unsigned iDeviceId=0)</argsstring>
        <name>get_roi_info_from_sensor</name>
        <param>
          <type>int</type>
          <declname>iCommand</declname>
        </param>
        <param>
          <type>int</type>
          <declname>wValue</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="343" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1adb4e41ea5ab5c27506b2448afaec1d8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref></type>
        <definition>void set_roi_info_to_sensor</definition>
        <argsstring>(int iCommand, std::vector&lt; int &gt; POI, unsigned int iDeviceId=0)</argsstring>
        <name>set_roi_info_to_sensor</name>
        <param>
          <type>int</type>
          <declname>iCommand</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt;</type>
          <declname>POI</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="344" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1ac458c003a9df80e074085c4d44c47004" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref></type>
        <definition>void get_roi_info_from_sensor</definition>
        <argsstring>(std::vector&lt; int &gt; &amp;poi, int iDeviceId=0)</argsstring>
        <name>get_roi_info_from_sensor</name>
        <param>
          <type>std::vector&lt; int &gt; &amp;</type>
          <declname>poi</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="346" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1a9523cd6df8f06f5681c8a70f3e822a3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref></type>
        <definition>void set_roi_info_to_sensor</definition>
        <argsstring>(std::vector&lt; int &gt; &amp;poi, int iDeviceId=0)</argsstring>
        <name>set_roi_info_to_sensor</name>
        <param>
          <type>std::vector&lt; int &gt; &amp;</type>
          <declname>poi</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="347" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1acf77cb5ccf51fa91af357d5ff8e9e1c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref></type>
        <definition>void get_roi_data_from_sensor</definition>
        <argsstring>(std::vector&lt; int &gt; &amp;poi_data, int iPoiSize, std::vector&lt; double &gt; &amp;poi_background, int iDeviceId=0)</argsstring>
        <name>get_roi_data_from_sensor</name>
        <param>
          <type>std::vector&lt; int &gt; &amp;</type>
          <declname>poi_data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iPoiSize</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt; &amp;</type>
          <declname>poi_background</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="348" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1ae83c7bebaff5d19898fea87959d49e36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref></type>
        <definition>void set_frame_average_count_for_on_board_processing</definition>
        <argsstring>(unsigned char ucData, unsigned int iDeviceId=0)</argsstring>
        <name>set_frame_average_count_for_on_board_processing</name>
        <param>
          <type>unsigned char</type>
          <declname>ucData</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>set/get on-board frame average count </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="354" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1a2bfdec1e256ead213c1708d9af18612b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char</type>
        <definition>unsigned char get_frame_average_count_for_on_board_processing</definition>
        <argsstring>(unsigned int iDeviceId=0)</argsstring>
        <name>get_frame_average_count_for_on_board_processing</name>
        <param>
          <type>unsigned int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="355" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1a81972af8da1c4cd1b2bacf1f539906a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref></type>
        <definition>void set_dark_correction_mode_for_on_board_processing</definition>
        <argsstring>(bool bEnable, unsigned int iDeviceId=0)</argsstring>
        <name>set_dark_correction_mode_for_on_board_processing</name>
        <param>
          <type>bool</type>
          <declname>bEnable</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>enable/disable on-board dark correction </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="358" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1a659ca59a7ce27e91d4cdbc6653c6ab52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char</type>
        <definition>unsigned char get_dark_correction_mode_for_on_board_processing</definition>
        <argsstring>(unsigned int iDeviceId=0)</argsstring>
        <name>get_dark_correction_mode_for_on_board_processing</name>
        <param>
          <type>unsigned int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="359" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1a5feb374155020bdf50326ec72bc562ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref></type>
        <definition>void get_dark_frame_for_on_board_processing</definition>
        <argsstring>(unsigned int iDeviceId=0)</argsstring>
        <name>get_dark_frame_for_on_board_processing</name>
        <param>
          <type>unsigned int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="360" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1ae2d4a7ac8bee63957734aa07871cd038" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool get_valid_filters_only</definition>
        <argsstring>(std::vector&lt; double &gt; &amp;input_frame, std::vector&lt; int &gt; &amp;valid_filters, std::vector&lt; double &gt; &amp;output_frame)</argsstring>
        <name>get_valid_filters_only</name>
        <param>
          <type>std::vector&lt; double &gt; &amp;</type>
          <declname>input_frame</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt; &amp;</type>
          <declname>valid_filters</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt; &amp;</type>
          <declname>output_frame</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="366" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1a57ccf27810c80427184ddb112b0fd9c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int get_sleep_time_for_shutter_speed</definition>
        <argsstring>(int iShutterSpeed)</argsstring>
        <name>get_sleep_time_for_shutter_speed</name>
        <param>
          <type>int</type>
          <declname>iShutterSpeed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="369" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1a3e35b01b79e69461f33fd023315133fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref></type>
        <definition>void device_interface_test</definition>
        <argsstring>(double *fpFilterValueAveraged, int iAverageIndex, unsigned int iDeviceId=0)</argsstring>
        <name>device_interface_test</name>
        <param>
          <type>double *</type>
          <declname>fpFilterValueAveraged</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iAverageIndex</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Test function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="372" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1ad3bc381ffd8bcfa65e1deab1016e213d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libusb_8h_1a8ca3594d1761da8da91be2851f4e8f21" kindref="member">void</ref></type>
        <definition>void convert_number_to_binary</definition>
        <argsstring>(int number)</argsstring>
        <name>convert_number_to_binary</name>
        <param>
          <type>int</type>
          <declname>number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="375" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1a9fdce498127f3a103702a1b089ba07b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_led_driver_open</definition>
        <argsstring>()</argsstring>
        <name>is_led_driver_open</name>
        <briefdescription>
<para>Functions for LED driver. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="381" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1a977f0dbc7cfc54e539f7ef5eca364589" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_led_driver_close</definition>
        <argsstring>()</argsstring>
        <name>is_led_driver_close</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="382" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1ab917e21d0648b4c4d7eda2672fc643f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="nsp__error__codes_8h_1a62d16416ab2b2b6a55f8fe58605ca0a3" kindref="member">NSP_ERROR_CODE</ref></type>
        <definition>NSP_ERROR_CODE set_state_to_led_device</definition>
        <argsstring>(bool *OnArray, int nNumOfLED, int intensity)</argsstring>
        <name>set_state_to_led_device</name>
        <param>
          <type>bool *</type>
          <declname>OnArray</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nNumOfLED</declname>
        </param>
        <param>
          <type>int</type>
          <declname>intensity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="386" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1a60e7efcc4538bce197d64293b8df2eff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="nsp__error__codes_8h_1a62d16416ab2b2b6a55f8fe58605ca0a3" kindref="member">NSP_ERROR_CODE</ref></type>
        <definition>NSP_ERROR_CODE set_op_mode_to_led_device</definition>
        <argsstring>(int iOpMode, int iToggleIntervalTime)</argsstring>
        <name>set_op_mode_to_led_device</name>
        <param>
          <type>int</type>
          <declname>iOpMode</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iToggleIntervalTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="387" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1a4e5978c0ce504b8a1b29baa6743692d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="nsp__error__codes_8h_1a62d16416ab2b2b6a55f8fe58605ca0a3" kindref="member">NSP_ERROR_CODE</ref></type>
        <definition>NSP_ERROR_CODE set_led_state_values</definition>
        <argsstring>(bool *OnArray, int nNumOfLED, int intensity, unsigned int iDeviceId=0)</argsstring>
        <name>set_led_state_values</name>
        <param>
          <type>bool *</type>
          <declname>OnArray</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nNumOfLED</declname>
        </param>
        <param>
          <type>int</type>
          <declname>intensity</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="391" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nsp__device__interface__stm__usb_8h_1ae5d5a4d3710fe604ea9eed1caa062196" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="nsp__error__codes_8h_1a62d16416ab2b2b6a55f8fe58605ca0a3" kindref="member">NSP_ERROR_CODE</ref></type>
        <definition>NSP_ERROR_CODE set_led_op_mode_values</definition>
        <argsstring>(int iOpMode, int iToggleIntervalTime, unsigned int iDeviceId=0)</argsstring>
        <name>set_led_op_mode_values</name>
        <param>
          <type>int</type>
          <declname>iOpMode</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iToggleIntervalTime</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>iDeviceId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h" line="392" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>__EMF32_COMM_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__EMF32_COMM_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="nsp__base__def_8h" kindref="compound">nsp_base_def.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="nsp__sdk__def_8h" kindref="compound">nsp_sdk_def.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&quot;lusb0_usb.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="libusb_8h" kindref="compound">libusb.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lusb_8h" kindref="compound">lusb.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lusbi_8h" kindref="compound">lusbi.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="nsp__device__interface__stm__usb__protocols_8h" kindref="compound">protocol/nsp_device_interface_stm_usb_protocols.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__linux__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&quot;/usr/include/usb.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&quot;/usr/local/include/libusb-1.0/libusb.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="libusb_8h" kindref="compound">libusb.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lusb_8h" kindref="compound">lusb.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lusbi_8h" kindref="compound">lusbi.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>CONTROLLER_BOARD_STM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STM_GET_DATA_FROM_DEVICE<sp/><sp/><sp/><sp/>0x10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STM_SET_DATA_TO_DEVICE<sp/><sp/><sp/><sp/><sp/><sp/>0x11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="nsp__device__interface__stm__usb_8h_1a50a191bb5487f59a12ed3dcdfaf54441" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EFM32_GET_DATA_FROM_DEVICE<sp/><sp/>0x10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="nsp__device__interface__stm__usb_8h_1acb9ae224fef16645bda9b5932f5157f8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EFM32_SET_DATA_TO_DEVICE<sp/><sp/><sp/><sp/>0x11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>snprintf<sp/>_snprintf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="nsp__device__interface__stm__usb_8h_1af3d1d59ca0b098f3146ff4f12a55e904" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ALLOW_NEGATIVE_SIGNAL<sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/><sp/>ALLOW_NEGATIVE_SIGNAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="nsp__device__interface__stm__usb_8h_1a6fe1c54684e886277db27806a4d68876" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ALLOW_FRAME_DATA_CASTING_TO_INTEGER<sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/><sp/>ALLOW_FRAME_DATA_CASTING_TO_INTEGER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="nsp__device__interface__stm__usb_8h_1ae34a11b4ddae1de920a57dee17e4906f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOWER_LIMIT_OF_FILTERS_DN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>50<sp/><sp/>//<sp/>after<sp/>dark<sp/>correction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>CONTROLLER_BOARD_STM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SLEEP_TIME_TO_ACQUISITION<sp/><sp/><sp/><sp/><sp/><sp/><sp/>10<sp/><sp/>//<sp/>test<sp/>for<sp/>x1<sp/>sensor<sp/>gain<sp/>//20<sp/>//100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="nsp__device__interface__stm__usb_8h_1a17bb7452dc949e439e9c6b01bf71e9e5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SLEEP_TIME_TO_ACQUISITION<sp/><sp/><sp/><sp/><sp/><sp/><sp/>30<sp/><sp/>//<sp/>test<sp/>for<sp/>x1<sp/>sensor<sp/>gain<sp/>//20<sp/>//100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="nsp__device__interface__stm__usb_8h_1a80dc46734753f5e795d6f246b7254dd2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BLANK_TIME_SCALE_FACTOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.7//1.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="nsp__device__interface__stm__usb_8h_1a6b9eb759662573a76c9dd951c6dd0b91" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DOUBLE_SS_RATIO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.5<sp/>//<sp/>50%</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="nsp__device__interface__stm__usb_8h_1a20ac91a2ec9d7a87457823dc5837d5d8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RECIEVED_BYTE_BUFFER<sp/><sp/><sp/><sp/>2048</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="nsp__device__interface__stm__usb_8h_1a3f40148fdd27f3718565310b57a997d2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FMA_MAX_NUM_BUFFERS<sp/><sp/><sp/><sp/><sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>USE_LIBUSB_10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>old</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//static<sp/>usb_dev_handle<sp/>*pDevH<sp/>=<sp/>NULL;<sp/><sp/>//<sp/>Usb<sp/>device<sp/>handle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structusb__device" kindref="compound">usb_device</ref><sp/>*pDev;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structusb__bus" kindref="compound">usb_bus</ref><sp/>*pBus;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="struct_usb_dev_handle" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_usb_dev_handle" kindref="compound">UsbDevHandle</ref>{</highlight></codeline>
<codeline lineno="61" refid="struct_usb_dev_handle_1a65f6443a1430b80173c2ad9c406df589" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>map&lt;int,<sp/>usb_dev_handle*&gt;<sp/><ref refid="struct_usb_dev_handle_1a65f6443a1430b80173c2ad9c406df589" kindref="member">create_map</ref>()</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map&lt;int,<sp/>usb_dev_handle*&gt;<sp/>m;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map&lt;int,<sp/>usb_dev_handle*&gt;::iterator<sp/>iter;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iter<sp/>=<sp/>m.begin();<sp/>iter<sp/>!=<sp/>m.end();<sp/>++iter)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*iter).second<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69" refid="struct_usb_dev_handle_1a28a35914b5c198428acd77143f3585a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>map&lt;int,<sp/>usb_dev_handle*&gt;<sp/><ref refid="struct_usb_dev_handle_1a28a35914b5c198428acd77143f3585a8" kindref="member">pDevH</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">};</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="struct_usb_dev_id" refkind="compound"><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_usb_dev_id" kindref="compound">UsbDevId</ref>{</highlight></codeline>
<codeline lineno="73" refid="struct_usb_dev_id_1a270589d016a8b1713f5b61db5b2360ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>map&lt;int,<sp/>int&gt;<sp/><ref refid="struct_usb_dev_id_1a270589d016a8b1713f5b61db5b2360ad" kindref="member">create_map</ref>()</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map&lt;int,<sp/>int&gt;<sp/>m;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map&lt;int,<sp/>int&gt;::iterator<sp/>iter;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iter<sp/>=<sp/>m.begin();<sp/>iter<sp/>!=<sp/>m.end();<sp/>++iter)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*iter).second<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81" refid="struct_usb_dev_id_1ab3054a8f900e817c9247a4821a62fb7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>map&lt;int,<sp/>int&gt;<sp/><ref refid="struct_usb_dev_id_1ab3054a8f900e817c9247a4821a62fb7b" kindref="member">currentDevId</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal">};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="nsp__device__interface__stm__usb_8h_1aad36ed99612122c72124e7cca3c77ce0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>pair<sp/>&lt;int,<sp/>usb_dev_handle*&gt;<sp/><ref refid="nsp__device__interface__stm__usb_8h_1aad36ed99612122c72124e7cca3c77ce0" kindref="member">dev_Pair</ref>;</highlight></codeline>
<codeline lineno="85" refid="nsp__device__interface__stm__usb_8h_1a671b67c57551c77a85b0c532b984aa3e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>pair<sp/>&lt;int,<sp/>int&gt;<sp/><ref refid="nsp__device__interface__stm__usb_8h_1a671b67c57551c77a85b0c532b984aa3e" kindref="member">dev_id_Pair</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>leds;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref><sp/>*pDev;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref><sp/>*pDevLED;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_usb_dev_handle" kindref="compound">UsbDevHandle</ref>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>map&lt;int,<sp/>libusb_device_handle*&gt;<sp/>create_map()</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map&lt;int,<sp/>libusb_device_handle*&gt;<sp/>m;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map&lt;int,<sp/>libusb_device_handle*&gt;::iterator<sp/>iter;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iter<sp/>=<sp/>m.begin();<sp/>iter<sp/>!=<sp/>m.end();<sp/>++iter)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*iter).second<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>map&lt;int,<sp/>libusb_device_handle*&gt;<sp/>pDevH;</highlight></codeline>
<codeline lineno="101"><highlight class="normal">};</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_usb_dev_id" kindref="compound">UsbDevId</ref>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>map&lt;int,<sp/>int&gt;<sp/>create_map()</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map&lt;int,<sp/>int&gt;<sp/>m;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map&lt;int,<sp/>int&gt;::iterator<sp/>iter;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iter<sp/>=<sp/>m.begin();<sp/>iter<sp/>!=<sp/>m.end();<sp/>++iter)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*iter).second<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>map&lt;int,<sp/>int&gt;<sp/>currentDevId;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">};</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>pair<sp/>&lt;int,<sp/>libusb_device_handle*&gt;<sp/><ref refid="nsp__device__interface__stm__usb_8h_1aad36ed99612122c72124e7cca3c77ce0" kindref="member">dev_Pair</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>pair<sp/>&lt;int,<sp/>int&gt;<sp/><ref refid="nsp__device__interface__stm__usb_8h_1a671b67c57551c77a85b0c532b984aa3e" kindref="member">dev_id_Pair</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>leds;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">//Device<sp/>properties<sp/>(Teensy)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="nsp__device__interface__stm__usb_8h_1a228f2876a05a21d1e643d214bbcf239f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EMF32_DEVICE_TAG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="nsp__device__interface__stm__usb_8h_1ac5dde101ee7f98d4852fb2b8acdbb1fb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EMF32_MIN_SHUTTER_SPEED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="nsp__device__interface__stm__usb_8h_1a62fa9cceed8f06e39edb395a9219fd5a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EMF32_MAX_SHUTTER_SPEED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>16777215</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="nsp__device__interface__stm__usb_8h_1ab94c1765c4fdb39b2d76f2498dba3476" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EMF32_NUM_FILTERS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1024</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="nsp__device__interface__stm__usb_8h_1abdd5ada9e02cf9263b707384667efc75" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EMF32_START_LAM<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>350</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="nsp__device__interface__stm__usb_8h_1a39ecc28bf6ade257736c5b161ede73bf" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EMF32_END_LAM<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="nsp__device__interface__stm__usb_8h_1ad0e929c91682ab26a7100c64674a469f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EMF32_FILTER_INTERVAL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="nsp__device__interface__stm__usb_8h_1a83049a3c9613667d6593598ab338f9c7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EMF32_FILTER_RESOLUTION<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>751</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="nsp__device__interface__stm__usb_8h_1a096411051bca3489e63c8666bf82e9a6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EMF32_DEFAULT_NUM_AVERAGES<sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="nsp__device__interface__stm__usb_8h_1ae3b675a8887e0dc75c095a64df6ea89d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EMF32_DEFAULT_COM_PORT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/><sp/><sp/>EMF32_DEFAULT_VID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2544<sp/><sp/>//<sp/>vid<sp/>of<sp/>USB<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/><sp/><sp/>EMF32_DEFAULT_PID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0001<sp/><sp/>//<sp/>pdi<sp/>of<sp/>USB<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>CONTROLLER_BOARD_STM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EMF32_DEFAULT_VID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0483<sp/><sp/>//<sp/>vid<sp/>of<sp/>USB<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EMF32_DEFAULT_PID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x5740<sp/><sp/>//<sp/>pdi<sp/>of<sp/>USB<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EMF32_LEDDRIVER_VID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0483<sp/><sp/>//<sp/>vid<sp/>of<sp/>USB<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EMF32_LEDDRIVER_PID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x5740<sp/><sp/>//<sp/>pdi<sp/>of<sp/>USB<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="nsp__device__interface__stm__usb_8h_1a9cf03038a520836876f0e47c7c416182" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EMF32_DEFAULT_VID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x16C1<sp/><sp/>//<sp/>vid<sp/>of<sp/>USB<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="nsp__device__interface__stm__usb_8h_1a82fc32f70ec68825ab2c5fd728d837b0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EMF32_DEFAULT_PID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0482<sp/><sp/>//<sp/>pdi<sp/>of<sp/>USB<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="nsp__device__interface__stm__usb_8h_1ae15b7960fc89a6c8282efc86b4c91cd4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EMF32_LEDDRIVER_VID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x16C1<sp/><sp/>//<sp/>vid<sp/>of<sp/>USB<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="nsp__device__interface__stm__usb_8h_1a6be0b1cf8e021fc2316dab0feca834eb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EMF32_LEDDRIVER_PID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0483<sp/><sp/>//<sp/>pdi<sp/>of<sp/>USB<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="nsp__device__interface__stm__usb_8h_1ad3e3648be0801b7d473b3ee69586dcf3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EMF32_MIN_FILTER_OUT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="nsp__device__interface__stm__usb_8h_1ab9345e7473e80391384e5b8029dad8a2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EMF32_MAX_FILTER_OUT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEVICE_MAX_FILTER_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="nsp__device__interface__stm__usb_8h_1a72cfcd8b1c5bd45cdcfd377cc314fe19" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FRAME_NUM_FOR_SKIP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="nsp__device__interface__stm__usb_8h_1a018276f78e593eae4c9f94e296b6bb99" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INIT_VAL_BLANK_TIME<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/><sp/><sp/>INIT_VAL_ADC_RANGE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>255//<sp/>H32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="nsp__device__interface__stm__usb_8h_1a82bd29e77030d0b76589244a4c0e01d3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INIT_VAL_ADC_RANGE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>132<sp/>//<sp/>H4-Type7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/><sp/><sp/>INIT_VAL_ADC_RANGE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>252<sp/>//<sp/>H4-Type1B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">//<sp/>20150622<sp/>-<sp/>sensor<sp/>gain<sp/>is<sp/>changed<sp/>from<sp/>x4<sp/>to<sp/>x1<sp/>for<sp/>reducing<sp/>spectrum<sp/>variation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INIT_VAL_ADC_GAIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="nsp__device__interface__stm__usb_8h_1a67d31eaaacb749ed812451a68b709ada" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INIT_VAL_ADC_GAIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="nsp__device__interface__stm__usb_8h_1a2bb838527ff536ace32d6b338a198acc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SHUTTER_SPEED_BASE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>CONTROLLER_BOARD_STM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SENSOR_ID_SIZE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STM_SENSOR_ID_SIZE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="nsp__device__interface__stm__usb_8h_1af425f81bad961cbddc3fb5302c027bc1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SENSOR_ID_SIZE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EFM32_SENSOR_ID_SIZE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="168"><highlight class="comment">typedef<sp/>struct<sp/>_nsp_def_auto_exposure_parameters</highlight></codeline>
<codeline lineno="169"><highlight class="comment">{</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/><sp/><sp/><sp/>int<sp/><sp/><sp/><sp/><sp/>initial_ss;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>5</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/><sp/><sp/><sp/>int<sp/><sp/><sp/><sp/><sp/>min_ss;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>1</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/><sp/><sp/><sp/>int<sp/><sp/><sp/><sp/><sp/>max_ss;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>1000</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/><sp/><sp/><sp/>int<sp/><sp/><sp/><sp/><sp/>target_dn_value;<sp/><sp/><sp/><sp/>//<sp/>3500</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/><sp/><sp/><sp/>int<sp/><sp/><sp/><sp/><sp/>upper_dn_value;<sp/><sp/><sp/><sp/><sp/>//<sp/>4000</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/><sp/><sp/><sp/>int<sp/><sp/><sp/><sp/><sp/>lower_dn_value;<sp/><sp/><sp/><sp/><sp/>//<sp/>3000</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/><sp/><sp/><sp/>int<sp/><sp/><sp/><sp/><sp/>mean_upper_dn_value;<sp/><sp/><sp/><sp/>//<sp/>4000</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/><sp/><sp/><sp/>int<sp/><sp/><sp/><sp/><sp/>mode;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>1</highlight></codeline>
<codeline lineno="178"><highlight class="comment"></highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/><sp/><sp/><sp/>_nsp_def_auto_exposure_parameters()</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init();</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="comment"></highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/><sp/><sp/>void<sp/>init()</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initial_ss<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_ss<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>20150623<sp/>-<sp/>Jesse<sp/>-<sp/>changed<sp/>for<sp/>using<sp/>AE<sp/>for<sp/>x1<sp/>sensor<sp/>gain</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_ss<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1200;<sp/>//<sp/>1000;</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_dn_value<sp/><sp/><sp/><sp/><sp/>=<sp/>3300;</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upper_dn_value<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>4000;</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lower_dn_value<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>3000;</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mean_upper_dn_value<sp/>=<sp/>target_dn_value;</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="comment">}nsp_def_auto_exposure_parameters;</highlight></codeline>
<codeline lineno="197"><highlight class="comment"></highlight></codeline>
<codeline lineno="198"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="comment">//<sp/>scale<sp/>factor<sp/>for<sp/>converting<sp/>integer<sp/>shutter<sp/>speed<sp/>to<sp/>actual<sp/>integration<sp/>time(ms)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>CONTROLLER_BOARD_STM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STM_MCLK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONVERT_SS_TO_INTEG_TIME(ss)<sp/><sp/><sp/><sp/>((((384+(16*(32+1)))*ss)+160)/(STM_MCLK*1000))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONVERT_INTEG_TIME_TO_SS(msec)<sp/><sp/>(((msec*(STM_MCLK*1000)-160)-384)/(16*(32+1)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NSP_DEVICE_MASTER_CLOCK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STM_MCLK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="comment">//<sp/>5MHz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="nsp__device__interface__stm__usb_8h_1a04692b62a5f1c36026518d880ab34159" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EFM32_MCLK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="nsp__device__interface__stm__usb_8h_1a9033c4502bf7d728a1998eae2bcc6465" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONVERT_SS_TO_INTEG_TIME(ss)<sp/><sp/><sp/><sp/>((((384+16*(32+1))*ss)+160)/(EFM32_MCLK*1000))<sp/>//((((384+(16*32))*ss)+160)/(EFM32_MCLK*1000))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="nsp__device__interface__stm__usb_8h_1ac6b2af89fbe3493bb3712f1619754b13" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONVERT_INTEG_TIME_TO_SS(msec)<sp/><sp/>(((msec*(EFM32_MCLK*1000)-160)-384)/(16*(32+1)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="nsp__device__interface__stm__usb_8h_1aaf0dfd84095bc9b6ee2b07b87943e90e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NSP_DEVICE_MASTER_CLOCK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EFM32_MCLK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="nsp__device__interface__stm__usb_8h_1a5f0917a21c67f9f25672e3785f9cb44f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEFAULT_INITIAL_SHUTTER_SPEED<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="comment">//**************************************************************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment">//*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Device<sp/>initialization/finalization<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="comment">//**************************************************************************************************************************</highlight></codeline>
<codeline lineno="219"><highlight class="comment"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="nsp__device__interface__stm__usb_8h_1abcc4c2cc4cadc5a88bda3074c08c8fae" kindref="member">connect_device</ref>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nsp__device__interface__stm__usb_8h_1abcc4c2cc4cadc5a88bda3074c08c8fae" kindref="member">connect_device</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="nsp__device__interface__stm__usb_8h_1abcc4c2cc4cadc5a88bda3074c08c8fae" kindref="member">connect_device</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iVID,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iPID,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="nsp__device__interface__stm__usb_8h_1a7ba84282bedb8d327f6af5814bb47eb3" kindref="member">connect_LED_device</ref>();</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="nsp__device__interface__stm__usb_8h_1a4e7286b5606857024d00613bf9c4db4f" kindref="member">disconnect_device</ref>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="nsp__device__interface__stm__usb_8h_1ab5c2362f40601be2104bb7b09540e5b9" kindref="member">print_device_info</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structusb__device" kindref="compound">usb_device</ref><sp/>*pDev);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment">//**************************************************************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment">//*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sensor<sp/>initialization/finalization<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment">//**************************************************************************************************************************</highlight></codeline>
<codeline lineno="234"><highlight class="comment"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="nsp__device__interface__stm__usb_8h_1ad3f4e6d8a8831478cf5d98a6fcbe7fc7" kindref="member">initialize_sensor</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="nsp__device__interface__stm__usb_8h_1a35c9e0141f434f5e236e90198f975b21" kindref="member">start_sensor</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0);<sp/><sp/></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="nsp__device__interface__stm__usb_8h_1a8906f73ab5869ffb11c91c29512fdafd" kindref="member">stop_sensor</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="nsp__device__interface__stm__usb_8h_1a36943b82c362c09d3550013c34b8e2c9" kindref="member">send_command_to_device</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iCommand,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wValue,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="nsp__device__interface__stm__usb_8h_1a0cfe242f9959c48c677e39870bf9d502" kindref="member">convert_2048C_to_1024F</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>inputC,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>outputF);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="nsp__device__interface__stm__usb_8h_1aff110d971dde18a670d20550731225c7" kindref="member">read_from_device</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iCommand,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wValue,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="nsp__device__interface__stm__usb_8h_1a633c20635cabff0c47a58a93fc35b99d" kindref="member">do_control_transfer</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iCommand,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wValue,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="nsp__device__interface__stm__usb_8h_1aa521500efce471cbd2d009667d8fca0a" kindref="member">read_register_data</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucAddr,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="nsp__device__interface__stm__usb_8h_1ad60bc1f7bae38a5e1e8fa31e05cd5e67" kindref="member">write_register_data</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucAddr,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucData,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="nsp__device__interface__stm__usb_8h_1aa89ca9dfbe60a3be8b49cb5791763948" kindref="member">acquire_frame_data</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>frameBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDarkCorrectionMode,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nsp__device__interface__stm__usb_8h_1a09f65498a7708dbd1780037ca5feedc0" kindref="member">acquire_frame_data_2048</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>frameBuf,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nsp__device__interface__stm__usb_8h_1aa85dce08aa663c691e77afd46a145277" kindref="member">alloc_transfer_bulk</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nsp__device__interface__stm__usb_8h_1a82c6418bd1d8546fd2988d88bd625fe0" kindref="member">alloc_transfer_bulk_l</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_iso_pack,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buffer,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nsp__device__interface__stm__usb_8h_1a4e86f6f45e12cfe0aa4808ffd3d03644" kindref="member">acquire_frame_data_bulk</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iCommand,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nsp__device__interface__stm__usb_8h_1ac01f0e6185be75f776952599a7ba004d" kindref="member">acquire_frame_data_control</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iCommand,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="nsp__device__interface__stm__usb_8h_1a7560f7fbb6b1e582d48ce74faa00b664" kindref="member">acquire_sub_frame_data</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>frameBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDarkCorrectionMode,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Initialization<sp/>is<sp/>required<sp/>before<sp/>using<sp/>any<sp/>of<sp/>the<sp/>other<sp/>functions.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Comport<sp/>number<sp/>where<sp/>the<sp/>Arudino<sp/>is<sp/>connected<sp/>to<sp/>is<sp/>required<sp/>as<sp/>input<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><ref refid="nsp__error__codes_8h_1a62d16416ab2b2b6a55f8fe58605ca0a3" kindref="member">NSP_ERROR_CODE</ref><sp/><ref refid="nsp__device__interface__stm__usb_8h_1a12434f297382993a110b4cec6bb9332c" kindref="member">initialize_device_interface</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><ref refid="nsp__error__codes_8h_1a62d16416ab2b2b6a55f8fe58605ca0a3" kindref="member">NSP_ERROR_CODE</ref><sp/><ref refid="nsp__device__interface__stm__usb_8h_1acd3402eef9118329e4d2173444033b4e" kindref="member">reconnect_device</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>iDeviceId,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="libusb_8h_1a77eedd00d01eb7569b880e861a971c2b" kindref="member">libusb_device</ref><sp/>*currDev,<sp/><ref refid="libusb_8h_1a4ec088aa7b79c4a9599e39bf36a72833" kindref="member">libusb_context</ref><sp/>*lctx,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>detach);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Close<sp/>the<sp/>serial<sp/>port<sp/>that<sp/>Arduino<sp/>is<sp/>connected<sp/>to<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><ref refid="nsp__error__codes_8h_1a62d16416ab2b2b6a55f8fe58605ca0a3" kindref="member">NSP_ERROR_CODE</ref><sp/><ref refid="nsp__device__interface__stm__usb_8h_1aa5af45d0f358c0f31f64b74290ff743d" kindref="member">close_device_interface</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>current<sp/>device<sp/>ID<sp/>what<sp/>sensor<sp/>data<sp/>acquired..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><ref refid="nsp__error__codes_8h_1a62d16416ab2b2b6a55f8fe58605ca0a3" kindref="member">NSP_ERROR_CODE</ref><sp/><ref refid="nsp__device__interface__stm__usb_8h_1a9cb95adca3bc192571b3fadea96012f1" kindref="member">set_device_index</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>acquisitioin<sp/>mode<sp/>what<sp/>sensor<sp/>data<sp/>acquired..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><ref refid="nsp__error__codes_8h_1a62d16416ab2b2b6a55f8fe58605ca0a3" kindref="member">NSP_ERROR_CODE</ref><sp/><ref refid="nsp__device__interface__stm__usb_8h_1aa0e68d232d638adc611faec77666eb25" kindref="member">set_LED_module_op_mode</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iOpMode,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>acquisitioin<sp/>mode<sp/>what<sp/>sensor<sp/>data<sp/>acquired..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><ref refid="nsp__error__codes_8h_1a62d16416ab2b2b6a55f8fe58605ca0a3" kindref="member">NSP_ERROR_CODE</ref><sp/><ref refid="nsp__device__interface__stm__usb_8h_1ada322e36b5019172c0aef3eeeb454952" kindref="member">set_frame_data_acq_mode</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iAcqMode,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>total<sp/>number<sp/>of<sp/>devices<sp/>which<sp/>are<sp/>connected<sp/>to<sp/>Host</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="nsp__device__interface__stm__usb_8h_1a5b0c3e2b95eb3c27aa42f6beae59bfa8" kindref="member">get_connected_total_devices</ref>();</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Return<sp/>sensor<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><ref refid="nsp__base__def_8h_1a779136663193567a853b1b8d3e8bd6b5" kindref="member">EXPORT_DLL</ref><sp/><ref refid="nsp__error__codes_8h_1a62d16416ab2b2b6a55f8fe58605ca0a3" kindref="member">NSP_ERROR_CODE</ref><sp/><ref refid="nsp__device__interface__stm__usb_8h_1a76ef631d85469c374a831603fce33cd6" kindref="member">get_sensor_id_with_index</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>SensorID,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><ref refid="nsp__base__def_8h_1a779136663193567a853b1b8d3e8bd6b5" kindref="member">EXPORT_DLL</ref><sp/><ref refid="nsp__error__codes_8h_1a62d16416ab2b2b6a55f8fe58605ca0a3" kindref="member">NSP_ERROR_CODE</ref><sp/><ref refid="nsp__device__interface__stm__usb_8h_1a76ef631d85469c374a831603fce33cd6" kindref="member">get_sensor_id_with_index</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>lot_char,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">*<sp/>lot_id,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">*<sp/>wafer_id,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">*<sp/>x_coord,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">*<sp/>y_coord,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">*<sp/>sensor_type,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="296"><highlight class="normal">std::string<sp/><ref refid="nsp__device__interface__stm__usb_8h_1a7d28b0605c0f0204db7125bcec25df0b" kindref="member">decode_sensor_id_from_string</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buf,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><ref refid="nsp__error__codes_8h_1a62d16416ab2b2b6a55f8fe58605ca0a3" kindref="member">NSP_ERROR_CODE</ref><sp/><ref refid="nsp__device__interface__stm__usb_8h_1a502f006e0b64ecc56b158efd135f1a68" kindref="member">get_firmware_version</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*version);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="comment">//**************************************************************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="comment">//*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sensor<sp/>register<sp/>set/get<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="comment">//**************************************************************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Change<sp/>current<sp/>iShutterSpeed<sp/>speed<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><ref refid="nsp__base__def_8h_1a779136663193567a853b1b8d3e8bd6b5" kindref="member">EXPORT_DLL</ref><sp/><ref refid="nsp__error__codes_8h_1a62d16416ab2b2b6a55f8fe58605ca0a3" kindref="member">NSP_ERROR_CODE</ref><sp/><ref refid="nsp__device__interface__stm__usb_8h_1ac9d7f92a98910b635b25b92845f294dc" kindref="member">set_shutter_speed_to_sensor</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iShutterSpeed,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>current<sp/>shutter<sp/>speed<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><ref refid="nsp__error__codes_8h_1a62d16416ab2b2b6a55f8fe58605ca0a3" kindref="member">NSP_ERROR_CODE</ref><sp/><ref refid="nsp__device__interface__stm__usb_8h_1a8bdf02b5cb3b8962b2b5bebe37d66827" kindref="member">get_shutter_speed_from_sensor</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>iCurSS,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Return<sp/>current<sp/>shutter<sp/>speed<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><ref refid="nsp__error__codes_8h_1a62d16416ab2b2b6a55f8fe58605ca0a3" kindref="member">NSP_ERROR_CODE</ref><sp/><ref refid="nsp__device__interface__stm__usb_8h_1a51d6ca6ef3002c7f424ada03df570fdd" kindref="member">get_current_shutter_speed</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iShutterSpeed,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Get<sp/>current<sp/>shutter<sp/>speed<sp/>from<sp/>sensor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>1<sp/>is<sp/>returned<sp/>if<sp/>test<sp/>succeeds.<sp/>0<sp/>if<sp/>failed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><ref refid="nsp__error__codes_8h_1a62d16416ab2b2b6a55f8fe58605ca0a3" kindref="member">NSP_ERROR_CODE</ref><sp/><ref refid="nsp__device__interface__stm__usb_8h_1a51d6ca6ef3002c7f424ada03df570fdd" kindref="member">get_current_shutter_speed</ref>();</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Change<sp/>current<sp/>blank<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><ref refid="nsp__error__codes_8h_1a62d16416ab2b2b6a55f8fe58605ca0a3" kindref="member">NSP_ERROR_CODE</ref><sp/><ref refid="nsp__device__interface__stm__usb_8h_1aa36e52ace02a4c762b55ac1c0b924073" kindref="member">set_blank_time_to_sensor</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iBlankTime,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>current<sp/>blank<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><ref refid="nsp__error__codes_8h_1a62d16416ab2b2b6a55f8fe58605ca0a3" kindref="member">NSP_ERROR_CODE</ref><sp/><ref refid="nsp__device__interface__stm__usb_8h_1a719f57d3989ef5e65088b34aaa75f55c" kindref="member">get_blank_time_from_sensor</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>iBlankTime,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Change<sp/>ADC<sp/>range<sp/>&amp;<sp/>Gain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><ref refid="nsp__base__def_8h_1a779136663193567a853b1b8d3e8bd6b5" kindref="member">EXPORT_DLL</ref><sp/><ref refid="nsp__error__codes_8h_1a62d16416ab2b2b6a55f8fe58605ca0a3" kindref="member">NSP_ERROR_CODE</ref><sp/><ref refid="nsp__device__interface__stm__usb_8h_1a24de11a7db1654f55ab5375a56f2c072" kindref="member">set_adc_setting_values</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucADCRange,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucGain,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucRes,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Get<sp/>ADC<sp/>range<sp/>&amp;<sp/>Gain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><ref refid="nsp__error__codes_8h_1a62d16416ab2b2b6a55f8fe58605ca0a3" kindref="member">NSP_ERROR_CODE</ref><sp/><ref refid="nsp__device__interface__stm__usb_8h_1a8ee9fdd65df6a66fc6254733d021ab74" kindref="member">get_adc_setting_values</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ucADCRange,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ucGain,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ucRes,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="comment">//**************************************************************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="comment">//*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Special<sp/>functions<sp/>(AE,<sp/>binning...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="comment">//**************************************************************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Find<sp/>optimal<sp/>shutter<sp/>(AE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nsp__device__interface__stm__usb_8h_1a02a16e40899d5d23d4d9e39b0a957d36" kindref="member">initialize_ae_module</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strFileName_intensityLUT,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strFileName_ssLUT);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nsp__device__interface__stm__usb_8h_1af1404ad90aa5f55cd8d6b990c546228a" kindref="member">find_optimal_shutter_speed_with_ae</ref>(std::vector&lt;int&gt;&amp;<sp/>valid_filters,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_average,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sleep_time=1000,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="nsp__device__interface__stm__usb_8h_1a6b699d8741705732614ff4f281f570c5" kindref="member">set_params_for_ae_module</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>target_DN,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId=0);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="nsp__device__interface__stm__usb_8h_1a6b699d8741705732614ff4f281f570c5" kindref="member">set_params_for_ae_module</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>target_DN,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>upper_DN,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lower_DN,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mean_DN,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_integ_DN,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId=0);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Get<sp/>filter<sp/>pOutputFilterValue<sp/>from<sp/>HPK<sp/>sensor.<sp/>OUPTUT<sp/>must<sp/>be<sp/>a<sp/>array<sp/>of<sp/>doubles<sp/>of<sp/>length<sp/>DEFAULT_NUM_OF_FILTERS.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>NUMBER_OF_AVERAGES<sp/>indicate<sp/>the<sp/>number<sp/>of<sp/>averages<sp/>to<sp/>take.<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><ref refid="nsp__base__def_8h_1a779136663193567a853b1b8d3e8bd6b5" kindref="member">EXPORT_DLL</ref><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="nsp__device__interface__stm__usb_8h_1a625a3da3662002299e0c7be1d46b242a" kindref="member">get_filter_data_from_sensor</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*pOutputFilterValue,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iNumOfAverages,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDarkCorrectionMode,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>useContAcq<sp/>=<sp/>0,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nsp__device__interface__stm__usb_8h_1ae71ef8682468c63aa649cef2745440c4" kindref="member">read_roi_info_from_fw</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iCommand,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wValue,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="nsp__device__interface__stm__usb_8h_1acbdb0a8708c8d13d991d018fe5079400" kindref="member">write_roi_info_to_fw</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iCommand,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wValue,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=0<sp/>);</highlight></codeline>
<codeline lineno="343"><highlight class="normal">std::vector&lt;int&gt;<sp/><ref refid="nsp__device__interface__stm__usb_8h_1ae0ae88b193aa3eb4fae35c39f719122f" kindref="member">get_roi_info_from_sensor</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iCommand,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wValue,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="nsp__device__interface__stm__usb_8h_1adb4e41ea5ab5c27506b2448afaec1d8b" kindref="member">set_roi_info_to_sensor</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iCommand,<sp/>std::vector&lt;int&gt;<sp/>POI,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="nsp__device__interface__stm__usb_8h_1ae0ae88b193aa3eb4fae35c39f719122f" kindref="member">get_roi_info_from_sensor</ref>(std::vector&lt;int&gt;&amp;<sp/>poi,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="nsp__device__interface__stm__usb_8h_1adb4e41ea5ab5c27506b2448afaec1d8b" kindref="member">set_roi_info_to_sensor</ref>(std::vector&lt;int&gt;&amp;<sp/>poi,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="nsp__device__interface__stm__usb_8h_1acf77cb5ccf51fa91af357d5ff8e9e1c4" kindref="member">get_roi_data_from_sensor</ref>(std::vector&lt;int&gt;&amp;<sp/>poi_data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iPoiSize,<sp/>std::vector&lt;double&gt;&amp;<sp/>poi_background,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="comment">//**************************************************************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="comment">//*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>On-board<sp/>processing<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="comment">//**************************************************************************************************************************</highlight></codeline>
<codeline lineno="354"><highlight class="comment"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="nsp__device__interface__stm__usb_8h_1ae83c7bebaff5d19898fea87959d49e36" kindref="member">set_frame_average_count_for_on_board_processing</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucData,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="nsp__device__interface__stm__usb_8h_1a2bfdec1e256ead213c1708d9af18612b" kindref="member">get_frame_average_count_for_on_board_processing</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="nsp__device__interface__stm__usb_8h_1a81972af8da1c4cd1b2bacf1f539906a7" kindref="member">set_dark_correction_mode_for_on_board_processing</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bEnable,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="nsp__device__interface__stm__usb_8h_1a659ca59a7ce27e91d4cdbc6653c6ab52" kindref="member">get_dark_correction_mode_for_on_board_processing</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="nsp__device__interface__stm__usb_8h_1a5feb374155020bdf50326ec72bc562ba" kindref="member">get_dark_frame_for_on_board_processing</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="comment">//**************************************************************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="comment">//*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Utility<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="comment">//**************************************************************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>valid<sp/>filters<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="nsp__device__interface__stm__usb_8h_1ae2d4a7ac8bee63957734aa07871cd038" kindref="member">get_valid_filters_only</ref>(std::vector&lt;double&gt;&amp;<sp/>input_frame,<sp/>std::vector&lt;int&gt;&amp;<sp/>valid_filters,<sp/>std::vector&lt;double&gt;&amp;<sp/>output_frame);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="comment">//<sp/>get<sp/>sleep<sp/>time<sp/>for<sp/>changing<sp/>shutter<sp/>speed<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nsp__device__interface__stm__usb_8h_1a57ccf27810c80427184ddb112b0fd9c1" kindref="member">get_sleep_time_for_shutter_speed</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iShutterSpeed);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="nsp__device__interface__stm__usb_8h_1a3e35b01b79e69461f33fd023315133fb" kindref="member">device_interface_test</ref>(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*fpFilterValueAveraged,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iAverageIndex,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Convert<sp/>number<sp/>to<sp/>binary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="nsp__device__interface__stm__usb_8h_1ad3bc381ffd8bcfa65e1deab1016e213d" kindref="member">convert_number_to_binary</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>number);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="comment">//**************************************************************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="comment">//*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LED<sp/>device<sp/>control<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="comment">//**************************************************************************************************************************</highlight></codeline>
<codeline lineno="381"><highlight class="comment"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="nsp__device__interface__stm__usb_8h_1a9fdce498127f3a103702a1b089ba07b0" kindref="member">is_led_driver_open</ref>();</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="nsp__device__interface__stm__usb_8h_1a977f0dbc7cfc54e539f7ef5eca364589" kindref="member">is_led_driver_close</ref>();</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Change<sp/>LED<sp/>on<sp/>or<sp/>off.<sp/>This<sp/>is<sp/>indicated<sp/>by<sp/>the<sp/>boolean<sp/>array<sp/>of<sp/>size<sp/>nNumOfLED<sp/>where<sp/>the<sp/>first<sp/>element<sp/>of<sp/>the<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bool<sp/>array<sp/>indicates<sp/>the<sp/>status<sp/>of<sp/>LED1,<sp/>second<sp/>element<sp/>LED2,<sp/>and<sp/>etc.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><ref refid="nsp__error__codes_8h_1a62d16416ab2b2b6a55f8fe58605ca0a3" kindref="member">NSP_ERROR_CODE</ref><sp/><ref refid="nsp__device__interface__stm__usb_8h_1ab917e21d0648b4c4d7eda2672fc643f0" kindref="member">set_state_to_led_device</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>OnArray,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nNumOfLED,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>intensity);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><ref refid="nsp__error__codes_8h_1a62d16416ab2b2b6a55f8fe58605ca0a3" kindref="member">NSP_ERROR_CODE</ref><sp/><ref refid="nsp__device__interface__stm__usb_8h_1a60e7efcc4538bce197d64293b8df2eff" kindref="member">set_op_mode_to_led_device</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iOpMode,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iToggleIntervalTime);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Change<sp/>LED<sp/>on<sp/>or<sp/>off.<sp/>This<sp/>is<sp/>indicated<sp/>by<sp/>the<sp/>boolean<sp/>array<sp/>of<sp/>size<sp/>nNumOfLED<sp/>where<sp/>the<sp/>first<sp/>element<sp/>of<sp/>the<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bool<sp/>array<sp/>indicates<sp/>the<sp/>status<sp/>of<sp/>LED1,<sp/>second<sp/>element<sp/>LED2,<sp/>and<sp/>etc.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><ref refid="nsp__error__codes_8h_1a62d16416ab2b2b6a55f8fe58605ca0a3" kindref="member">NSP_ERROR_CODE</ref><sp/><ref refid="nsp__device__interface__stm__usb_8h_1a4e5978c0ce504b8a1b29baa6743692d4" kindref="member">set_led_state_values</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>OnArray,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nNumOfLED,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>intensity,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><ref refid="nsp__error__codes_8h_1a62d16416ab2b2b6a55f8fe58605ca0a3" kindref="member">NSP_ERROR_CODE</ref><sp/><ref refid="nsp__device__interface__stm__usb_8h_1ae5d5a4d3710fe604ea9eed1caa062196" kindref="member">set_led_op_mode_values</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iOpMode,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iToggleIntervalTime,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDeviceId<sp/>=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>__EMF32_COMM_H__</highlight></codeline>
    </programlisting>
    <location file="D:/SVN/Prism_Light/trunk/NSP32_SDK/doc/include/device/nsp_device_interface_stm_usb.h"/>
  </compounddef>
</doxygen>
